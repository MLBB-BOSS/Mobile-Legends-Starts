# keyboards/menus.py

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from enum import Enum
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

class MenuButton(Enum):
    # –ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é
    NAVIGATION = "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è"
    PROFILE = "ü™™ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å"

    # –†–æ–∑–¥—ñ–ª –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
    HEROES = "ü•∑ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ"
    GUIDES = "üìö –ì–∞–π–¥–∏"
    COUNTER_PICKS = "‚öñÔ∏è –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏"
    BUILDS = "üõ°Ô∏è –ë—ñ–ª–¥–∏"
    VOTING = "üìä –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
    M6 = "üèÜ M6"
    GPT = "ü§ñ GPT"
    META = "üî• META"
    TOURNAMENTS = "üèÜ –¢—É—Ä–Ω—ñ—Ä–∏"
    BACK = "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è"

    # –ü—ñ–¥–º–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤
    TANK = "üõ°Ô∏è –¢–∞–Ω–∫"
    MAGE = "üßô‚Äç‚ôÇÔ∏è –ú–∞–≥"
    MARKSMAN = "üèπ –°—Ç—Ä—ñ–ª–µ—Ü—å"
    ASSASSIN = "‚öîÔ∏è –ê—Å–∞—Å—ñ–Ω"
    SUPPORT = "‚ù§Ô∏è –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"
    FIGHTER = "üó°Ô∏è –ë–æ—î—Ü—å"
    COMPARISON = "‚öñÔ∏è –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è"
    SEARCH_HERO = "üîé –ü–æ—à—É–∫"

    # –ü—ñ–¥–º–µ–Ω—é –ë—ñ–ª–¥
    CREATE_BUILD = "üèóÔ∏è –°—Ç–≤–æ—Ä–∏—Ç–∏"
    MY_BUILDS = "üìÑ –ú–æ—ó –±—ñ–ª–¥–∏"
    POPULAR_BUILDS = "üî• –ü–æ–ø—É–ª—è—Ä–Ω—ñ –±—ñ–ª–¥–∏"

    # –ü—ñ–¥–º–µ–Ω—é –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏
    COUNTER_SEARCH = "üîé –ü–æ—à—É–∫ –∫–æ–Ω—Ç—Ä-–ø—ñ–∫–∞"
    COUNTER_LIST = "üìù –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤"

    # –ü—ñ–¥–º–µ–Ω—é –ì–∞–π–¥–∏
    NEW_GUIDES = "üÜï –ù–æ–≤—ñ –≥–∞–π–¥–∏"
    POPULAR_GUIDES = "üåü –¢–æ–ø –≥–∞–π–¥–∏"
    BEGINNER_GUIDES = "üìò –î–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤"
    ADVANCED_TECHNIQUES = "üßô –°—Ç—Ä–∞—Ç–µ–≥—ñ—ó –≥—Ä–∏"
    TEAMPLAY_GUIDES = "ü§ù –ö–æ–º–∞–Ω–¥–Ω–∞ –≥—Ä–∞"

    # –ü—ñ–¥–º–µ–Ω—é –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è
    CURRENT_VOTES = "üìç –ü–æ—Ç–æ—á–Ω—ñ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è"
    MY_VOTES = "üìã –ú–æ—ó –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
    SUGGEST_TOPIC = "‚ûï –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ —Ç–µ–º—É"

    # –ü—ñ–¥–º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—é
    STATISTICS = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    ACHIEVEMENTS = "üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è"
    SETTINGS = "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
    FEEDBACK = "üíå –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫"
    HELP = "‚ùì –î–æ–ø–æ–º–æ–≥–∞"
    BACK_TO_MAIN_MENU = "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"

    # –ü—ñ–¥–º–µ–Ω—é –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    ACTIVITY = "üìä –ó–∞–≥–∞–ª—å–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å"
    RANKING = "ü•á –†–µ–π—Ç–∏–Ω–≥"
    GAME_STATS = "üéÆ –Ü–≥—Ä–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    BACK_TO_PROFILE = "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é"

    # –ü—ñ–¥–º–µ–Ω—é –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è
    BADGES = "üéñÔ∏è –ú–æ—ó –±–µ–π–¥–∂—ñ"
    PROGRESS = "üöÄ –ü—Ä–æ–≥—Ä–µ—Å"
    TOURNAMENT_STATS = "üèÖ –¢—É—Ä–Ω—ñ—Ä–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    AWARDS = "üéüÔ∏è –û—Ç—Ä–∏–º–∞–Ω—ñ –Ω–∞–≥–æ—Ä–æ–¥–∏"

    # –ü—ñ–¥–º–µ–Ω—é –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    LANGUAGE = "üåê –ú–æ–≤–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É"
    CHANGE_USERNAME = "‚ÑπÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ Username"
    UPDATE_ID = "üÜî –û–Ω–æ–≤–∏—Ç–∏ ID"
    NOTIFICATIONS = "üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è"

    # –ü—ñ–¥–º–µ–Ω—é –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫
    SEND_FEEDBACK = "üìù –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–≥—É–∫"
    REPORT_BUG = "üêõ –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É"

    # –ü—ñ–¥–º–µ–Ω—é –î–æ–ø–æ–º–æ–≥–∞
    INSTRUCTIONS = "üìÑ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó"
    FAQ = "‚ùî FAQ"
    HELP_SUPPORT = "üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"

    # –ü—ñ–¥–º–µ–Ω—é –¢—É—Ä–Ω—ñ—Ä–∏
    CREATE_TOURNAMENT = "üÜï –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—É—Ä–Ω—ñ—Ä"
    VIEW_TOURNAMENTS = "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç—É—Ä–Ω—ñ—Ä–∏"

    # –ü—ñ–¥–º–µ–Ω—é META
    META_HERO_LIST = "üìã –°–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤ —É –º–µ—Ç—ñ"
    META_RECOMMENDATIONS = "üåü –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó"
    META_UPDATES = "üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –º–µ—Ç–∏"

    # –ü—ñ–¥–º–µ–Ω—é M6
    M6_INFO = "üèÜ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è M6"
    M6_STATS = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ M6"
    M6_NEWS = "üì∞ –ù–æ–≤–∏–Ω–∏ M6"

def create_menu(buttons, row_width=2):
    """
    –°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏.
    :param buttons: –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ (MenuButton –∞–±–æ str).
    :param row_width: –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ —É —Ä—è–¥–∫—É.
    :return: ReplyKeyboardMarkup
    """
    if not all(isinstance(button, MenuButton) or isinstance(button, str) for button in buttons):
        raise ValueError("–£—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —É —Å–ø–∏—Å–∫—É –∫–Ω–æ–ø–æ–∫ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ MenuButton –∞–±–æ str.")

    button_texts = [button.value if isinstance(button, MenuButton) else button for button in buttons]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {button_texts}")

    keyboard_buttons = [
        KeyboardButton(text=button.value if isinstance(button, MenuButton) else button) for button in buttons
    ]

    keyboard = [
        keyboard_buttons[i:i + row_width]
        for i in range(0, len(keyboard_buttons), row_width)
    ]

    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_main_menu():
    return create_menu(
        [
            MenuButton.NAVIGATION,
            MenuButton.PROFILE
        ],
        row_width=2
    )

def get_navigation_menu():
    return create_menu(
        [
            MenuButton.HEROES,
            MenuButton.GUIDES,
            MenuButton.COUNTER_PICKS,
            MenuButton.BUILDS,
            MenuButton.VOTING,
            MenuButton.M6,
            MenuButton.GPT,
            MenuButton.META,
            MenuButton.TOURNAMENTS,
            MenuButton.BACK
        ],
        row_width=3
    )

def get_heroes_menu():
    return create_menu(
        [
            MenuButton.TANK,
            MenuButton.MAGE,
            MenuButton.MARKSMAN,
            MenuButton.ASSASSIN,
            MenuButton.SUPPORT,
            MenuButton.FIGHTER,
            MenuButton.COMPARISON,
            MenuButton.SEARCH_HERO,
            MenuButton.BACK
        ],
        row_width=3
    )

def get_hero_class_menu(hero_class):
    heroes = heroes_by_class.get(hero_class, [])
    if not heroes:
        logger.warning(f"–ö–ª–∞—Å –≥–µ—Ä–æ—ó–≤ '{hero_class}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è" –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è
    buttons = [MenuButton(button) for button in heroes] + [MenuButton.BACK]

    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –¥–ª—è –∫–ª–∞—Å—É '{hero_class}' –∑ –≥–µ—Ä–æ—è–º–∏: {[hero.value for hero in buttons]}")

    return create_menu(buttons, row_width=3)

def get_guides_menu():
    return create_menu(
        [
            MenuButton.NEW_GUIDES,
            MenuButton.POPULAR_GUIDES,
            MenuButton.BEGINNER_GUIDES,
            MenuButton.ADVANCED_TECHNIQUES,
            MenuButton.TEAMPLAY_GUIDES,
            MenuButton.BACK
        ],
        row_width=3
    )

def get_counter_picks_menu():
    return create_menu(
        [
            MenuButton.COUNTER_SEARCH,
            MenuButton.COUNTER_LIST,
            MenuButton.BACK
        ],
        row_width=3
    )

def get_builds_menu():
    return create_menu(
        [
            MenuButton.CREATE_BUILD,
            MenuButton.MY_BUILDS,
            MenuButton.POPULAR_BUILDS,
            MenuButton.BACK
        ],
        row_width=3
    )

def get_voting_menu():
    return create_menu(
        [
            MenuButton.CURRENT_VOTES,
            MenuButton.MY_VOTES,
            MenuButton.SUGGEST_TOPIC,
            MenuButton.BACK
        ],
        row_width=3
    )

def get_profile_menu():
    return create_menu(
        [
            MenuButton.STATISTICS,
            MenuButton.ACHIEVEMENTS,
            MenuButton.SETTINGS,
            MenuButton.FEEDBACK,
            MenuButton.HELP,
            MenuButton.BACK_TO_MAIN_MENU
        ],
        row_width=3
    )

def get_statistics_menu():
    return create_menu(
        [
            MenuButton.ACTIVITY,
            MenuButton.RANKING,
            MenuButton.GAME_STATS,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=3
    )

def get_achievements_menu():
    return create_menu(
        [
            MenuButton.BADGES,
            MenuButton.PROGRESS,
            MenuButton.TOURNAMENT_STATS,
            MenuButton.AWARDS,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=3
    )

def get_settings_menu():
    return create_menu(
        [
            MenuButton.LANGUAGE,
            MenuButton.CHANGE_USERNAME,
            MenuButton.UPDATE_ID,
            MenuButton.NOTIFICATIONS,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=3
    )

def get_feedback_menu():
    return create_menu(
        [
            MenuButton.SEND_FEEDBACK,
            MenuButton.REPORT_BUG,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=3
    )

def get_help_menu():
    return create_menu(
        [
            MenuButton.INSTRUCTIONS,
            MenuButton.FAQ,
            MenuButton.HELP_SUPPORT,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=3
    )

# –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –¢—É—Ä–Ω—ñ—Ä—ñ–≤
def get_tournaments_menu():
    return create_menu(
        [
            MenuButton.CREATE_TOURNAMENT,  # –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—É—Ä–Ω—ñ—Ä
            MenuButton.VIEW_TOURNAMENTS,   # –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç—É—Ä–Ω—ñ—Ä–∏
            MenuButton.BACK
        ],
        row_width=2
    )

def get_active_tournaments_menu():
    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç—É—Ä–Ω—ñ—Ä—ñ–≤
    tournaments = [
        {"name": "–¢—É—Ä–Ω—ñ—Ä –ê", "type": "5—Ö5", "status": "–ê–∫—Ç–∏–≤–Ω–∏–π"},
        {"name": "–¢—É—Ä–Ω—ñ—Ä –ë", "type": "2—Ö2", "status": "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–π"},
        # –î–æ–¥–∞–π—Ç–µ –±—ñ–ª—å—à–µ —Ç—É—Ä–Ω—ñ—Ä—ñ–≤ –∑–∞ –ø–æ—Ç—Ä–µ–±–æ—é
    ]

    keyboard = []
    for tournament in tournaments:
        button_text = f"{tournament['name']} ({tournament['type']}) - {tournament['status']}"
        keyboard.append([KeyboardButton(text=button_text)])

    keyboard.append([MenuButton.BACK.value])
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è META
def get_meta_menu():
    return create_menu(
        [
            MenuButton.META_HERO_LIST,
            MenuButton.META_RECOMMENDATIONS,
            MenuButton.META_UPDATES,
            MenuButton.BACK
        ],
        row_width=2
    )

# –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è M6
def get_m6_menu():
    return create_menu(
        [
            MenuButton.M6_INFO,
            MenuButton.M6_STATS,
            MenuButton.M6_NEWS,
            MenuButton.BACK
        ],
        row_width=2
    )

# –í—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ –∫–ª–∞—Å–∞–º –≥–µ—Ä–æ—ó–≤
menu_button_to_class = {
    MenuButton.TANK.value: "–¢–∞–Ω–∫",
    MenuButton.MAGE.value: "–ú–∞–≥",
    MenuButton.MARKSMAN.value: "–°—Ç—Ä—ñ–ª–µ—Ü—å",
    MenuButton.ASSASSIN.value: "–ê—Å–∞—Å—ñ–Ω",
    MenuButton.SUPPORT.value: "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞",
    MenuButton.FIGHTER.value: "–ë–æ—î—Ü—å",
}

# –ü–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤ –∑–∞ –∫–ª–∞—Å–∞–º–∏
heroes_by_class = {
    "–ë–æ—î—Ü—å": [
        MenuButton.BALMOND.value, MenuButton.ALUCARD.value, MenuButton.BANE.value, MenuButton.ZILONG.value,
        MenuButton.FREYA.value, MenuButton.ALPHA.value, MenuButton.RUBY.value, MenuButton.ROGER.value,
        MenuButton.GATOTKACA.value, MenuButton.JAWHEAD.value, MenuButton.MARTIS.value, MenuButton.ALDOUS.value,
        MenuButton.MINSITTHAR.value, MenuButton.TERIZLA.value, MenuButton.X_BORG.value, MenuButton.DYROTH.value,
        MenuButton.MASHA.value, MenuButton.SILVANNA.value, MenuButton.YU_ZHONG.value, MenuButton.KHALEED.value,
        MenuButton.BARATS.value, MenuButton.PAQUITO.value, MenuButton.PHOVEUS.value, MenuButton.AULUS.value,
        MenuButton.FIDDRIN.value, MenuButton.ARLOTT.value, MenuButton.CICI.value, MenuButton.KAJA.value,
        MenuButton.LEOMORD.value, MenuButton.THAMUZ.value, MenuButton.BADANG.value, MenuButton.GUINEVERE.value
    ],
    "–¢–∞–Ω–∫": [
        MenuButton.ALICE.value, MenuButton.TIGREAL.value, MenuButton.AKAI.value, MenuButton.FRANCO.value,
        MenuButton.MINOTAUR.value, MenuButton.LOLIA.value, MenuButton.GATOTKACA.value, MenuButton.GROCK.value,
        MenuButton.HYLOS.value, MenuButton.URANUS.value, MenuButton.BELERICK.value, MenuButton.KHUFRA.value,
        MenuButton.ESMERALDA.value, MenuButton.TERIZLA.value, MenuButton.BAXIA.value, MenuButton.MASHA.value,
        MenuButton.ATLAS.value, MenuButton.BARATS.value, MenuButton.EDITH.value, MenuButton.FREDRIN.value,
        MenuButton.JOHNSON.value, MenuButton.HILDA.value, MenuButton.CARMILLA.value, MenuButton.GLOO.value,
        MenuButton.CHIP.value
    ],
    "–ê—Å–∞—Å—ñ–Ω": [
        MenuButton.SABER.value, MenuButton.ALUCARD.value, MenuButton.ZILONG.value, MenuButton.FANNY.value,
        MenuButton.NATALIA.value, MenuButton.YI_SUN_SHIN.value, MenuButton.LANCELOT.value, MenuButton.HEL_CURT.value,
        MenuButton.LESLEY.value, MenuButton.SELENA.value, MenuButton.MATHILDA.value, MenuButton.PAQUITO.value,
        MenuButton.YIN.value, MenuButton.ARLOTT.value, MenuButton.HARLEY.value, MenuButton.SUYOU.value
    ],
    "–°—Ç—Ä—ñ–ª–µ—Ü—å": [
        MenuButton.POPOL_AND_KUPA.value, MenuButton.BRODY.value, MenuButton.BEATRIX.value, MenuButton.NATAN.value,
        MenuButton.MELISSA.value, MenuButton.IXIA.value, MenuButton.HANABI.value, MenuButton.CLAUDE.value,
        MenuButton.KIMMY.value, MenuButton.GRANGER.value, MenuButton.WANWAN.value, MenuButton.MIYA.value,
        MenuButton.BRUNO.value, MenuButton.CLINT.value, MenuButton.LAYLA.value, MenuButton.YI_SUN_SHIN.value,
        MenuButton.MOSKOV.value, MenuButton.ROGER.value, MenuButton.KARRIE.value, MenuButton.IRITHEL.value,
        MenuButton.LESLEY.value
    ],
    "–ú–∞–≥": [
        MenuButton.VALE.value, MenuButton.LUNOX.value, MenuButton.KADITA.value, MenuButton.CECILLION.value,
        MenuButton.LUO_YI.value, MenuButton.XAVIER.value, MenuButton.NOVARIA.value, MenuButton.ZHUXIN.value,
        MenuButton.HARLEY.value, MenuButton.YVE.value, MenuButton.AURORA.value, MenuButton.FARAMIS.value,
        MenuButton.ESMERALDA.value, MenuButton.KAGURA.value, MenuButton.CYCLOPS.value, MenuButton.VEXANA.value,
        MenuButton.ODETTE.value, MenuButton.ZHASK.value
    ],
    "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞": [
        MenuButton.RAFAELA.value, MenuButton.MINOTAUR.value, MenuButton.LOLITA.value, MenuButton.ESTES.value,
        MenuButton.ANGELA.value, MenuButton.FARAMIS.value, MenuButton.MATHILDA.value, MenuButton.FLO
        "RIN.value", MenuButton.JOHNSON.value
    ],
}

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≥–µ—Ä–æ—ó–≤
MenuButton.BALMOND = MenuButton("Balmond")
MenuButton.ALICE = MenuButton("Alice")
MenuButton.SABER = MenuButton("Saber")
MenuButton.POPOL_AND_KUPA = MenuButton("Popol and Kupa")
MenuButton.VALE = MenuButton("Vale")
MenuButton.RAFAELA = MenuButton("Rafaela")

def get_generic_inline_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è", callback_data="menu_back")
            ]
        ]
    )

def get_intro_page_1_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–î–∞–ª—ñ")]
        ],
        resize_keyboard=True
    )

def get_intro_page_2_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–î–∞–ª—ñ")]
        ],
        resize_keyboard=True
    )

def get_intro_page_3_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–†–æ–∑–ø–æ—á–∞—Ç–∏")]
        ],
        resize_keyboard=True
    )

# –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è META, M6, GPT, –¢—É—Ä–Ω—ñ—Ä–∏
def get_meta_features_menu():
    return create_menu(
        [
            MenuButton.META_HERO_LIST,
            MenuButton.META_RECOMMENDATIONS,
            MenuButton.META_UPDATES,
            MenuButton.BACK
        ],
        row_width=2
    )

def get_m6_menu():
    return create_menu(
        [
            MenuButton.M6_INFO,
            MenuButton.M6_STATS,
            MenuButton.M6_NEWS,
            MenuButton.BACK
        ],
        row_width=2
    )

def get_gpt_menu():
    return create_menu(
        [
            MenuButton.GPT_FEATURES,
            MenuButton.BACK
        ],
        row_width=2
    )