# keyboards/menus.py

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from enum import Enum
import logging

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

class MenuButton(Enum):
    # Main Menu
    NAVIGATION = "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è"
    PROFILE = "ü™™ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å"

    # Navigation Menu
    HEROES = "üõ°Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ"
    GUIDES = "üìö –ì–∞–π–¥–∏"
    COUNTER_PICKS = "‚öñÔ∏è –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏"
    BUILDS = "‚öúÔ∏è –ë—ñ–ª–¥–∏"
    VOTING = "üìä –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
    BACK = "üîÑ –ù–∞–∑–∞–¥"

    # Heroes Menu
    SEARCH_HERO = "üîé –ü–æ—à—É–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞"
    TANK = "üõ°Ô∏è –¢–∞–Ω–∫"
    MAGE = "üßô‚Äç‚ôÇÔ∏è –ú–∞–≥"
    MARKSMAN = "üéØ –°—Ç—Ä—ñ–ª–µ—Ü—å"
    ASSASSIN = "üó°Ô∏è –ê—Å–∞—Å—ñ–Ω"
    SUPPORT = "‚ù§Ô∏è –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"
    COMPARISON = "‚öñÔ∏è –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è"

    # Guides Menu
    NEW_GUIDES = "üÜï –ù–æ–≤—ñ –ì–∞–π–¥–∏"
    POPULAR_GUIDES = "üåü –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ì–∞–π–¥–∏"
    BEGINNER_GUIDES = "üìò –î–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤"
    ADVANCED_TECHNIQUES = "üßô –ü—Ä–æ—Å—É–Ω—É—Ç—ñ –¢–µ—Ö–Ω—ñ–∫–∏"
    TEAMPLAY_GUIDES = "üõ°Ô∏è –ö–æ–º–∞–Ω–¥–Ω–∞ –ì—Ä–∞"

    # Counter Picks Menu
    COUNTER_SEARCH = "üîé –ü–æ—à—É–∫ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—É"
    COUNTER_LIST = "üìù –°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤"

    # Builds Menu
    CREATE_BUILD = "üèóÔ∏è –°—Ç–≤–æ—Ä–∏—Ç–∏ –ë—ñ–ª–¥"
    MY_BUILDS = "üìÑ –ú–æ—ó –ë—ñ–ª–¥–∏"
    POPULAR_BUILDS = "üíé –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ë—ñ–ª–¥–∏"

    # Voting Menu
    CURRENT_VOTES = "üìç –ü–æ—Ç–æ—á–Ω—ñ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è"
    MY_VOTES = "üìã –ú–æ—ó –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
    SUGGEST_TOPIC = "‚ûï –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –¢–µ–º—É"

    # Profile Menu
    STATISTICS = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    ACHIEVEMENTS = "üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è"
    SETTINGS = "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
    FEEDBACK = "üíå –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫"
    HELP = "‚ùì –î–æ–ø–æ–º–æ–≥–∞"
    BACK_TO_MAIN_MENU = "üîÑ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ì–æ–ª–æ–≤–Ω–æ–≥–æ –ú–µ–Ω—é"

    # Statistics Menu
    ACTIVITY = "üìä –ó–∞–≥–∞–ª—å–Ω–∞ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å"
    RANKING = "ü•á –†–µ–π—Ç–∏–Ω–≥"
    GAME_STATS = "üéÆ –Ü–≥—Ä–æ–≤–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    BACK_TO_PROFILE = "üîÑ –ù–∞–∑–∞–¥ –¥–æ –ü—Ä–æ—Ñ—ñ–ª—é"

    # Achievements Menu
    BADGES = "üéñÔ∏è –ú–æ—ó –ë–µ–π–¥–∂—ñ"
    PROGRESS = "üöÄ –ü—Ä–æ–≥—Ä–µ—Å"
    TOURNAMENT_STATS = "üèÖ –¢—É—Ä–Ω—ñ—Ä–Ω–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    AWARDS = "üéüÔ∏è –û—Ç—Ä–∏–º–∞–Ω—ñ –ù–∞–≥–æ—Ä–æ–¥–∏"

    # Settings Menu
    LANGUAGE = "üåê –ú–æ–≤–∞ –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É"
    CHANGE_USERNAME = "üÜî –ó–º—ñ–Ω–∏—Ç–∏ Username"
    UPDATE_ID = "üõ°Ô∏è –û–Ω–æ–≤–∏—Ç–∏ ID –ì—Ä–∞–≤—Ü—è"
    NOTIFICATIONS = "üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è"

    # Feedback Menu
    SEND_FEEDBACK = "‚úèÔ∏è –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –í—ñ–¥–≥—É–∫"
    REPORT_BUG = "üêõ –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ü–æ–º–∏–ª–∫—É"

    # Help Menu
    INSTRUCTIONS = "üìÑ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó"
    FAQ = "‚ùî FAQ"
    SUPPORT = "üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"

# Map buttons to hero classes
menu_button_to_class = {
    MenuButton.TANK.value: "–¢–∞–Ω–∫",
    MenuButton.MAGE.value: "–ú–∞–≥",
    MenuButton.MARKSMAN.value: "–°—Ç—Ä—ñ–ª–µ—Ü—å",
    MenuButton.ASSASSIN.value: "–ê—Å–∞—Å—ñ–Ω",
    MenuButton.SUPPORT.value: "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞",
    # Note: "–ë–æ—î—Ü—å" is not in the provided menu structure; remove if not needed
}

# Dummy data for heroes by class
heroes_by_class = {
    "–¢–∞–Ω–∫": ["Atlas", "Belerick", "Franco"],
    "–ú–∞–≥": ["Alice", "Eudora", "Gord"],
    "–°—Ç—Ä—ñ–ª–µ—Ü—å": ["Bruno", "Clint", "Layla"],
    "–ê—Å–∞—Å—ñ–Ω": ["Fanny", "Gusion", "Lancelot"],
    "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞": ["Angela", "Estes", "Rafaela"],
}

def create_menu(buttons, row_width=2):
    """
    –°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏.
    :param buttons: –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ (MenuButton –∞–±–æ str).
    :param row_width: –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ —É —Ä—è–¥–∫—É.
    :return: ReplyKeyboardMarkup
    """
    if not all(isinstance(button, MenuButton) or isinstance(button, str) for button in buttons):
        raise ValueError("–£—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —É —Å–ø–∏—Å–∫—É –∫–Ω–æ–ø–æ–∫ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ MenuButton –∞–±–æ str.")
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.value if isinstance(button, MenuButton) else button for button in buttons]}")
    keyboard = [
        [KeyboardButton(text=button.value if isinstance(button, MenuButton) else button) for button in buttons[i:i + row_width]]
        for i in range(0, len(buttons), row_width)
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_main_menu():
    return create_menu(
        [
            MenuButton.NAVIGATION,
            MenuButton.PROFILE
        ],
        row_width=2
    )

def get_navigation_menu():
    return create_menu(
        [
            MenuButton.HEROES,
            MenuButton.GUIDES,
            MenuButton.COUNTER_PICKS,
            MenuButton.BUILDS,
            MenuButton.VOTING,
            MenuButton.BACK
        ],
        row_width=2
    )

def get_heroes_menu():
    return create_menu(
        [
            MenuButton.SEARCH_HERO,
            MenuButton.TANK,
            MenuButton.MAGE,
            MenuButton.MARKSMAN,
            MenuButton.ASSASSIN,
            MenuButton.SUPPORT,
            MenuButton.COMPARISON,
            MenuButton.BACK
        ],
        row_width=2
    )

def get_hero_class_menu(hero_class):
    heroes = heroes_by_class.get(hero_class, [])
    buttons = [hero for hero in heroes]
    row_width = 2
    keyboard = [buttons[i:i+row_width] for i in range(0, len(buttons), row_width)]
    keyboard.append([KeyboardButton(text=MenuButton.BACK.value)])
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_guides_menu():
    return create_menu(
        [
            MenuButton.NEW_GUIDES,
            MenuButton.POPULAR_GUIDES,
            MenuButton.BEGINNER_GUIDES,
            MenuButton.ADVANCED_TECHNIQUES,
            MenuButton.TEAMPLAY_GUIDES,
            MenuButton.BACK
        ],
        row_width=2
    )

def get_counter_picks_menu():
    return create_menu(
        [
            MenuButton.COUNTER_SEARCH,
            MenuButton.COUNTER_LIST,
            MenuButton.BACK
        ],
        row_width=1
    )

def get_builds_menu():
    return create_menu(
        [
            MenuButton.CREATE_BUILD,
            MenuButton.MY_BUILDS,
            MenuButton.POPULAR_BUILDS,
            MenuButton.BACK
        ],
        row_width=2
    )

def get_voting_menu():
    return create_menu(
        [
            MenuButton.CURRENT_VOTES,
            MenuButton.MY_VOTES,
            MenuButton.SUGGEST_TOPIC,
            MenuButton.BACK
        ],
        row_width=2
    )

def get_profile_menu():
    return create_menu(
        [
            MenuButton.STATISTICS,
            MenuButton.ACHIEVEMENTS,
            MenuButton.SETTINGS,
            MenuButton.FEEDBACK,
            MenuButton.HELP,
            MenuButton.BACK_TO_MAIN_MENU
        ],
        row_width=2
    )

def get_statistics_menu():
    return create_menu(
        [
            MenuButton.ACTIVITY,
            MenuButton.RANKING,
            MenuButton.GAME_STATS,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=2
    )

def get_achievements_menu():
    return create_menu(
        [
            MenuButton.BADGES,
            MenuButton.PROGRESS,
            MenuButton.TOURNAMENT_STATS,
            MenuButton.AWARDS,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=2
    )

def get_settings_menu():
    return create_menu(
        [
            MenuButton.LANGUAGE,
            MenuButton.CHANGE_USERNAME,
            MenuButton.UPDATE_ID,
            MenuButton.NOTIFICATIONS,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=2
    )

def get_feedback_menu():
    return create_menu(
        [
            MenuButton.SEND_FEEDBACK,
            MenuButton.REPORT_BUG,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=2
    )

def get_help_menu():
    return create_menu(
        [
            MenuButton.INSTRUCTIONS,
            MenuButton.FAQ,
            MenuButton.SUPPORT,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=2
    )
