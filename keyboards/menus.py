# keyboards/menus.py

from utils.logger_setup import setup_logger
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from texts.enums import MenuButton, LanguageButton
from texts.data import heroes_by_class
from utils.logger_setup import setup_logger

logger = setup_logger(__name__)

class MenuBuilder:
    def __init__(self, row_width: int = 2):
        self.row_width = row_width

    def create_menu(
        self,
        buttons: List[Union[MenuButton, LanguageButton]],
        placeholder: str = ""
    ) -> ReplyKeyboardMarkup:
        if not all(isinstance(button, (MenuButton, LanguageButton)) for button in buttons):
            logger.error("–£—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —É —Å–ø–∏—Å–∫—É –∫–Ω–æ–ø–æ–∫ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ MenuButton –∞–±–æ LanguageButton Enum.")
            raise ValueError("–£—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —É —Å–ø–∏—Å–∫—É –∫–Ω–æ–ø–æ–∫ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ MenuButton –∞–±–æ LanguageButton Enum.")

        button_texts = [button.value for button in buttons]
        logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {button_texts} —Ç–∞ –ø—ñ–¥–∫–∞–∑–∫–æ—é: '{placeholder}'")

        keyboard_buttons = [KeyboardButton(text=btn.value) for btn in buttons]

        keyboard_rows = [
            keyboard_buttons[i:i + self.row_width]
            for i in range(0, len(keyboard_buttons), self.row_width)
        ]

        return ReplyKeyboardMarkup(
            keyboard=keyboard_rows,
            resize_keyboard=True,
            input_field_placeholder=placeholder
        )

    # –î–æ–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –º–µ–Ω—é
    def get_main_menu(self) -> ReplyKeyboardMarkup:
        return self.create_menu(
            buttons=[MenuButton.NAVIGATION, MenuButton.PROFILE],
            placeholder="–û–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –æ—Å–Ω–æ–≤–Ω–∏—Ö –æ–ø—Ü—ñ–π",
            row_width=2
        )

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

@unique
class MenuButton(Enum):
    # –ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é
    NAVIGATION = "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è"
    PROFILE = "ü™™ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å"

    # –†–æ–∑–¥—ñ–ª –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
    TOURNAMENTS = "üèÜ –¢—É—Ä–Ω—ñ—Ä–∏"
    HEROES = "ü•∑ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ"
    CHALLENGES = "üß© –ß–µ–ª–µ–Ω–¥–∂"
    GUIDES = "üìö –ì–∞–π–¥–∏"
    BUILDS = "üõ°Ô∏è –ë—ñ–ª–¥–∏"
    BUST = "üöÄ –ë—É—Å—Ç"
    TEAMS = "üßë‚Äçü§ù‚Äçüßë –ö–æ–º–∞–Ω–¥–∏"
    TRADING = "üí∞ –¢–æ—Ä–≥—ñ–≤–ª—è"
    BACK = "üîô –ù–∞–∑–∞–¥"

    # –î–æ–¥–∞–Ω—ñ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –¥–ª—è –¢—É—Ä–Ω—ñ—Ä—ñ–≤ —Ç–∞ M6
    CREATE_TOURNAMENT = "‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏ –¢—É—Ä–Ω—ñ—Ä"
    VIEW_TOURNAMENTS = "üîç –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¢—É—Ä–Ω—ñ—Ä–∏"

    M6_INFO = "‚ÑπÔ∏è –Ü–Ω—Ñ–æ M6"
    M6_STATS = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ M6"
    M6_NEWS = "üì∞ –ù–æ–≤–∏–Ω–∏ M6"

    # –†–æ–∑–¥—ñ–ª –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ
    TANK = "üõ°Ô∏è –¢–∞–Ω–∫"
    MAGE = "üßô‚Äç‚ôÇÔ∏è –ú–∞–≥"
    MARKSMAN = "üèπ –°—Ç—Ä—ñ–ª–µ—Ü—å"
    ASSASSIN = "‚öîÔ∏è –ê—Å–∞—Å—ñ–Ω"
    SUPPORT = "‚ù§Ô∏è –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"
    FIGHTER = "üó°Ô∏è –ë–æ—î—Ü—å"
    COMPARISON = "‚öñÔ∏è –ü–æ—Ä—ñ–≤–Ω—è–π"
    SEARCH_HERO = "üîé –ü–æ—à—É–∫"
    VOTING = "üó≥Ô∏è –ì–æ–ª–æ—Å—É–π"

    # –†–æ–∑–¥—ñ–ª –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏
    COUNTER_SEARCH = "üîé –ü–æ—à—É–∫ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∞"
    COUNTER_LIST = "üìù –°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤"
    COUNTER_PICKS = "‚ôªÔ∏è –ö–æ–Ω—Ç—Ä-–ø—ñ–∫"

    # –†–æ–∑–¥—ñ–ª META
    META_HERO_LIST = "üîç –°–ø–∏—Å–æ–∫ –ì–µ—Ä–æ—ó–≤ META"
    META_RECOMMENDATIONS = "‚òëÔ∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó META"
    META_UPDATES = "üìà –û–Ω–æ–≤–ª–µ–Ω–Ω—è META"
    META = "üî• –ú–ï–¢–ê"

    # –†–æ–∑–¥—ñ–ª –ì–∞–π–¥–∏
    NEW_GUIDES = "üÜï –ù–æ–≤—ñ –ì–∞–π–¥–∏"
    M6 = "üèÜ M6"
    POPULAR_GUIDES = "üåü –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ì–∞–π–¥–∏"
    BEGINNER_GUIDES = "üìò –î–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤"
    ADVANCED_TECHNIQUES = "üßô –°—Ç—Ä–∞—Ç–µ–≥—ñ—ó –ì—Ä–∏"
    TEAMPLAY_GUIDES = "ü§ù –ö–æ–º–∞–Ω–¥–Ω–∞ –ì—Ä–∞"

    # –†–æ–∑–¥—ñ–ª –ë—ñ–ª–¥–∏
    CREATE_BUILD = "üèóÔ∏è –°—Ç–≤–æ—Ä–∏—Ç–∏ –ë—ñ–ª–¥"
    MY_BUILDS = "üìÑ –ú–æ—ó –ë—ñ–ª–¥–∏"
    POPULAR_BUILDS = "üîù –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ë—ñ–ª–¥–∏"

    # –†–æ–∑–¥—ñ–ª –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è
    CURRENT_VOTES = "üìç –ü–æ—Ç–æ—á–Ω—ñ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è"
    MY_VOTES = "üìã –ú–æ—ó –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
    SUGGEST_TOPIC = "‚ûï –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –¢–µ–º—É"

    # –†–æ–∑–¥—ñ–ª –ü—Ä–æ—Ñ—ñ–ª—å
    STATISTICS = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    ACHIEVEMENTS = "üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è"
    SETTINGS = "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
    FEEDBACK = "üíå –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫"
    HELP = "‚ùì –î–æ–ø–æ–º–æ–≥–∞"
    MY_TEAM = "üßç –ú–æ—è –∫–æ–º–∞–Ω–¥–∞"
    GPT = "üëæ GPT"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    ACTIVITY = "üìä –ó–∞–≥–∞–ª—å–Ω–∞ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å"
    RANKING = "ü•á –†–µ–π—Ç–∏–Ω–≥"
    GAME_STATS = "üéÆ –Ü–≥—Ä–æ–≤–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è
    BADGES = "üéñÔ∏è –ú–æ—ó –ë–µ–π–¥–∂—ñ"
    PROGRESS = "üöÄ –ü—Ä–æ–≥—Ä–µ—Å"
    TOURNAMENT_STATS = "üèÖ –¢—É—Ä–Ω—ñ—Ä–Ω–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    AWARDS = "üéüÔ∏è –û—Ç—Ä–∏–º–∞–Ω—ñ –ù–∞–≥–æ—Ä–æ–¥–∏"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    LANGUAGE = "üåê –ú–æ–≤–∞ –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É"
    CHANGE_USERNAME = "‚ÑπÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ Username"
    UPDATE_ID = "üÜî –û–Ω–æ–≤–∏—Ç–∏ ID"
    NOTIFICATIONS = "üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫
    SEND_FEEDBACK = "‚úèÔ∏è –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –í—ñ–¥–≥—É–∫"
    REPORT_BUG = "üêõ –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ü–æ–º–∏–ª–∫—É"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª –î–æ–ø–æ–º–æ–≥–∞
    INSTRUCTIONS = "üìÑ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó"
    FAQ = "‚ùî FAQ"
    HELP_SUPPORT = "üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"

    # –ù–æ–≤–∏–π —Ä–æ–∑–¥—ñ–ª –ö–æ–º–∞–Ω–¥–∏
    CREATE_TEAM = "‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏ –ö–æ–º–∞–Ω–¥—É"
    VIEW_TEAMS = "üëÄ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ö–æ–º–∞–Ω–¥–∏"

    # –ù–æ–≤—ñ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –¥–ª—è –¢–æ—Ä–≥—ñ–≤–ª—ñ
    CREATE_TRADE = "‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏ –¢–æ—Ä–≥—ñ–≤–ª—é"
    VIEW_TRADES = "üëÄ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¢–æ—Ä–≥—ñ–≤–ª—ñ"
    MANAGE_TRADES = "üîß –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –¢–æ—Ä–≥—ñ–≤–ª—è–º–∏"

    # GPT –ú–µ–Ω—é
    GPT_DATA_GENERATION = "üìä –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –î–∞–Ω–∏—Ö"
    GPT_HINTS = "üí° –ü–æ—Ä–∞–¥–∏"
    GPT_HERO_STATS = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ì–µ—Ä–æ—ó–≤"

@unique
class LanguageButton(Enum):
    UKRAINIAN = "üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"
    ENGLISH = "üá¨üáß English"
    BACK = "üîô –ù–∞–∑–∞–¥"

# –ú–∞–ø—ñ–Ω–≥ –∫–Ω–æ–ø–æ–∫ –¥–æ –∫–ª–∞—Å—ñ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤
menu_button_to_class: Dict[str, str] = {
    MenuButton.TANK.value: "–¢–∞–Ω–∫",
    MenuButton.MAGE.value: "–ú–∞–≥",
    MenuButton.MARKSMAN.value: "–°—Ç—Ä—ñ–ª–µ—Ü—å",
    MenuButton.ASSASSIN.value: "–ê—Å–∞—Å—ñ–Ω",
    MenuButton.SUPPORT.value: "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞",
    MenuButton.FIGHTER.value: "–ë–æ—î—Ü—å",
}

# –°–ø–∏—Å–∫–∏ –≥–µ—Ä–æ—ó–≤ –ø–æ –∫–ª–∞—Å–∞—Ö
heroes_by_class: Dict[str, List[str]] = {
    "–ë–æ—î—Ü—å": [
        "Balmond", "Alucard", "Bane", "Zilong", "Freya", "Alpha", "Ruby", "Roger",
        "Gatotkaca", "Jawhead", "Martis", "Aldous", "Minsitthar", "Terizla", "X.Borg",
        "Dyroth", "Masha", "Silvanna", "Yu Zhong", "Khaleed", "Barats", "Paquito",
        "Phoveus", "Aulus", "Fiddrin", "Arlott", "Cici", "Kaja", "Leomord", "Thamuz",
        "Badang", "Guinevere"
    ],
    "–¢–∞–Ω–∫": [
        "Alice", "Tigreal", "Akai", "Franco", "Minotaur", "Lolita", "Grock",
        "Hylos", "Uranus", "Belerick", "Khufra", "Esmeralda", "Terizla", "Baxia",
        "Masha", "Atlas", "Barats", "Edith", "Fredrinn", "Johnson", "Hilda",
        "Carmilla", "Gloo", "Chip"
    ],
    "–ê—Å–∞—Å—ñ–Ω": [
        "Saber", "Alucard", "Zilong", "Fanny", "Natalia", "Yi Sun-shin",
        "Lancelot", "Helcurt", "Lesley", "Selena", "Mathilda", "Paquito",
        "Yin", "Arlott", "Harley", "Suyou"
    ],
    "–°—Ç—Ä—ñ–ª–µ—Ü—å": [
        "Popol and Kupa", "Brody", "Beatrix", "Natan", "Melissa", "Ixia",
        "Hanabi", "Claude", "Kimmy", "Granger", "Wanwan", "Miya", "Bruno",
        "Clint", "Layla", "Yi Sun-shin", "Moskov", "Roger", "Karrie",
        "Irithel", "Lesley"
    ],
    "–ú–∞–≥": [
        "Vale", "Lunox", "Kadita", "Cecillion", "Luo Yi", "Xavier",
        "Novaria", "Zhuxin", "Harley", "Yve", "Aurora", "Faramis",
        "Esmeralda", "Kagura", "Cyclops", "Vexana", "Odette", "Zhask"
    ],
    "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞": [
        "Rafaela", "Minotaur", "Lolita", "Estes", "Angela", "Faramis",
        "Mathilda", "Florin", "Johnson"
    ],
}

def create_menu(
    buttons: List[Union[MenuButton, LanguageButton]],
    placeholder: str = "",
    row_width: int = 2
) -> ReplyKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏ (ReplyKeyboardMarkup).

    :param buttons: –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ (MenuButton –∞–±–æ LanguageButton Enum).
    :param placeholder: –ü—ñ–¥–∫–∞–∑–∫–∞ –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥—É.
    :param row_width: –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ —É —Ä—è–¥–∫—É.
    :return: ReplyKeyboardMarkup –æ–±'—î–∫—Ç.
    """
    if not all(isinstance(button, (MenuButton, LanguageButton)) for button in buttons):
        raise ValueError("–£—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —É —Å–ø–∏—Å–∫—É –∫–Ω–æ–ø–æ–∫ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ MenuButton –∞–±–æ LanguageButton Enum.")

    button_texts = [button.value for button in buttons]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {button_texts} —Ç–∞ –ø—ñ–¥–∫–∞–∑–∫–æ—é: '{placeholder}'")

    keyboard_buttons = [KeyboardButton(text=btn.value) for btn in buttons]

    keyboard_rows = [
        keyboard_buttons[i:i + row_width]
        for i in range(0, len(keyboard_buttons), row_width)
    ]

    return ReplyKeyboardMarkup(
        keyboard=keyboard_rows,
        resize_keyboard=True,
        input_field_placeholder=placeholder
    )

def get_main_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏ "–ù–∞–≤—ñ–≥–∞—Ü—ñ—è" —Ç–∞ "–ü—Ä–æ—Ñ—ñ–ª—å".
    """
    return create_menu(
        buttons=[MenuButton.NAVIGATION, MenuButton.PROFILE],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –æ—Å–Ω–æ–≤–Ω–∏—Ö –æ–ø—Ü—ñ–π",
        row_width=2
    )

def get_navigation_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –∑ —Ä—ñ–∑–Ω–∏–º–∏ –æ–ø—Ü—ñ—è–º–∏.
    """
    return create_menu(
        buttons=[
            MenuButton.HEROES,
            MenuButton.BUILDS,
            MenuButton.GUIDES,
            MenuButton.TOURNAMENTS,
            MenuButton.TEAMS,
            MenuButton.CHALLENGES,
            MenuButton.BUST,
            MenuButton.TRADING,
            MenuButton.BACK
        ],
        placeholder="–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª —É –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó",
        row_width=3
    )

def get_heroes_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ –∑ –∫–ª–∞—Å–∞–º–∏ –≥–µ—Ä–æ—ó–≤.
    """
    return create_menu(
        buttons=[
            MenuButton.TANK,
            MenuButton.MAGE,
            MenuButton.MARKSMAN,
            MenuButton.ASSASSIN,
            MenuButton.FIGHTER,
            MenuButton.SUPPORT,
            MenuButton.META,
            MenuButton.COUNTER_PICKS,
            MenuButton.COMPARISON,
            MenuButton.VOTING,
            MenuButton.SEARCH_HERO,
            MenuButton.BACK
        ],
        placeholder="–í–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞",
        row_width=3
    )

def get_profile_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ü—Ä–æ—Ñ—ñ–ª—å –∑ —Ä—ñ–∑–Ω–∏–º–∏ –æ–ø—Ü—ñ—è–º–∏.
    """
    return create_menu(
        buttons=[
            MenuButton.STATISTICS,
            MenuButton.MY_TEAM,
            MenuButton.ACHIEVEMENTS,
            MenuButton.SETTINGS,
            MenuButton.FEEDBACK,
            MenuButton.HELP,
            MenuButton.GPT,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –ø—Ä–æ—Ñ—ñ–ª–µ–º",
        row_width=3
    )

def get_language_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É –º–æ–≤–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É.
    """
    return create_menu(
        buttons=[
            LanguageButton.UKRAINIAN,
            LanguageButton.ENGLISH,
            LanguageButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É",
        row_width=1
    )

def get_challenges_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ß–µ–ª–µ–Ω–¥–∂—ñ.
    """
    return create_menu(
        buttons=[
            MenuButton.CHALLENGES,
            MenuButton.BACK
        ],
        placeholder="–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é —á–µ–ª–µ–Ω–¥–∂—ñ–≤",
        row_width=2
    )

def get_bust_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ë—É—Å—Ç—ñ–≤.
    """
    return create_menu(
        buttons=[
            MenuButton.BUST,
            MenuButton.BACK
        ],
        placeholder="–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –±—É—Å—Ç—ñ–≤",
        row_width=2
    )

def get_my_team_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ú–æ—è –∫–æ–º–∞–Ω–¥–∞.
    """
    return create_menu(
        buttons=[
            MenuButton.MY_TEAM,
            MenuButton.BACK
        ],
        placeholder="–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –ú–æ—î—ó –ö–æ–º–∞–Ω–¥–∏",
        row_width=2
    )

def get_guides_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ì–∞–π–¥–∏ –∑ —Ä—ñ–∑–Ω–∏–º–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏.
    """
    return create_menu(
        buttons=[
            MenuButton.NEW_GUIDES,
            MenuButton.M6,
            MenuButton.POPULAR_GUIDES,
            MenuButton.BEGINNER_GUIDES,
            MenuButton.ADVANCED_TECHNIQUES,
            MenuButton.TEAMPLAY_GUIDES,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –≥–∞–π–¥—ñ–≤",
        row_width=3
    )

def get_counter_picks_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤.
    """
    return create_menu(
        buttons=[
            MenuButton.COUNTER_SEARCH,
            MenuButton.COUNTER_LIST,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤",
        row_width=3
    )

def get_builds_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ë—ñ–ª–¥–∏.
    """
    return create_menu(
        buttons=[
            MenuButton.CREATE_BUILD,
            MenuButton.MY_BUILDS,
            MenuButton.POPULAR_BUILDS,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –ë—ñ–ª–¥—ñ–≤",
        row_width=3
    )

def get_voting_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è.
    """
    return create_menu(
        buttons=[
            MenuButton.CURRENT_VOTES,
            MenuButton.MY_VOTES,
            MenuButton.SUGGEST_TOPIC,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è",
        row_width=3
    )

def get_statistics_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑ —Ä—ñ–∑–Ω–∏–º–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏.
    """
    return create_menu(
        buttons=[
            MenuButton.ACTIVITY,
            MenuButton.RANKING,
            MenuButton.GAME_STATS,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",
        row_width=3
    )

def get_achievements_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è.
    """
    return create_menu(
        buttons=[
            MenuButton.BADGES,
            MenuButton.PROGRESS,
            MenuButton.TOURNAMENT_STATS,
            MenuButton.AWARDS,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –¥–æ—Å—è–≥–Ω–µ–Ω—å",
        row_width=3
    )

def get_settings_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è.
    """
    return create_menu(
        buttons=[
            MenuButton.LANGUAGE,
            MenuButton.CHANGE_USERNAME,
            MenuButton.UPDATE_ID,
            MenuButton.NOTIFICATIONS,
            MenuButton.BACK
        ],
        placeholder="–ù–∞–ª–∞—à—Ç—É–π—Ç–µ —Å–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å",
        row_width=3
    )

def get_feedback_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫.
    """
    return create_menu(
        buttons=[
            MenuButton.SEND_FEEDBACK,
            MenuButton.REPORT_BUG,
            MenuButton.BACK
        ],
        placeholder="–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É",
        row_width=3
    )

def get_help_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –î–æ–ø–æ–º–æ–≥–∞.
    """
    return create_menu(
        buttons=[
            MenuButton.INSTRUCTIONS,
            MenuButton.FAQ,
            MenuButton.HELP_SUPPORT,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –¥–æ–ø–æ–º–æ–≥–∏",
        row_width=3
    )

def get_tournaments_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –¢—É—Ä–Ω—ñ—Ä–∏.
    """
    return create_menu(
        buttons=[
            MenuButton.CREATE_TOURNAMENT,
            MenuButton.VIEW_TOURNAMENTS,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ —Ç—É—Ä–Ω—ñ—Ä–∞–º–∏",
        row_width=3
    )

def get_meta_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É META.
    """
    return create_menu(
        buttons=[
            MenuButton.META_HERO_LIST,
            MenuButton.META_RECOMMENDATIONS,
            MenuButton.META_UPDATES,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é META",
        row_width=3
    )

def get_m6_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É M6.
    """
    return create_menu(
        buttons=[
            MenuButton.M6_INFO,
            MenuButton.M6_STATS,
            MenuButton.M6_NEWS,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ M6",
        row_width=3
    )

def get_gpt_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É GPT.
    """
    return create_menu(
        buttons=[
            MenuButton.GPT_DATA_GENERATION,
            MenuButton.GPT_HINTS,
            MenuButton.GPT_HERO_STATS,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é GPT",
        row_width=2
    )

def get_teams_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –ö–æ–º–∞–Ω–¥–∏.
    """
    return create_menu(
        buttons=[
            MenuButton.CREATE_TEAM,
            MenuButton.VIEW_TEAMS,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –ö–æ–º–∞–Ω–¥–∏",
        row_width=2
    )

def get_trading_menu() -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É –¢–æ—Ä–≥—ñ–≤–ª—ñ.
    """
    return create_menu(
        buttons=[
            MenuButton.CREATE_TRADE,
            MenuButton.VIEW_TRADES,
            MenuButton.MANAGE_TRADES,
            MenuButton.BACK
        ],
        placeholder="–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –¢–æ—Ä–≥—ñ–≤–ª—ñ",
        row_width=2
    )

def get_hero_class_menu() -> ReplyKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É –∫–ª–∞—Å—É –≥–µ—Ä–æ—è.
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        KeyboardButton(text="–¢–∞–Ω–∫"),
        KeyboardButton(text="–ú–∞–≥"),
        KeyboardButton(text="–°—Ç—Ä—ñ–ª–µ—Ü—å"),
        KeyboardButton(text="–ê—Å–∞—Å—ñ–Ω"),
        KeyboardButton(text="–ü—ñ–¥—Ç—Ä–∏–º–∫–∞"),
        KeyboardButton(text="–ë–æ—î—Ü—å"),
        KeyboardButton(text="–ù–∞–∑–∞–¥")
    ]
    keyboard.add(*buttons)
    return keyboard

def get_hero_class_reply_menu(hero_class: str) -> ReplyKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î –ó–í–ò–ß–ê–ô–ù–£ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É (ReplyKeyboardMarkup) –∑—ñ —Å–ø–∏—Å–∫–æ–º –≥–µ—Ä–æ—ó–≤ –æ–±—Ä–∞–Ω–æ–≥–æ –∫–ª–∞—Å—É.
    
    :param hero_class: –ù–∞–ø—Ä. "–¢–∞–Ω–∫", "–ú–∞–≥", "–ë–æ—î—Ü—å" —Ç–æ—â–æ.
    :return: ReplyKeyboardMarkup –∑—ñ —Å–ø–∏—Å–∫–æ–º –≥–µ—Ä–æ—ó–≤, + –∫–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥.
    """
    heroes = heroes_by_class.get(hero_class, [])
    logger.info(f"–°—Ç–≤–æ—Ä—é—î–º–æ –∑–≤–∏—á–∞–π–Ω—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –∫–ª–∞—Å—É {hero_class}, –≥–µ—Ä–æ—ó–≤ –∑–Ω–∞–π–¥–µ–Ω–æ: {len(heroes)}")

    hero_buttons = [KeyboardButton(hero) for hero in heroes]

    # –î–æ–¥–∞–º–æ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" (–∑–≤–∏—á–∞–π–Ω—É)
    hero_buttons.append(KeyboardButton("üîô –ù–∞–∑–∞–¥"))

    # –ù–∞–ø—Ä–∏–∫–ª–∞–¥, 3 –≥–µ—Ä–æ—ó –≤ —Ä—è–¥–∫—É
    row_width = 3
    keyboard_rows = [
        hero_buttons[i:i + row_width]
        for i in range(0, len(hero_buttons), row_width)
    ]

    return ReplyKeyboardMarkup(
        keyboard=keyboard_rows,
        resize_keyboard=True,
        input_field_placeholder=f"–û–±–µ—Ä—ñ—Ç—å –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É {hero_class}"
    )
