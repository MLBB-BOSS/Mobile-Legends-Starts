# keyboards/menus.py

import logging
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

logger = logging.getLogger(__name__)

class MenuButton:
    # –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
    NAVIGATION = "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è"
    PROFILE = "ü™™ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å"
    
    # –ú–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó
    HEROES = "ü•∑ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ"
    BUILDS = "üõ°Ô∏è –ë—ñ–ª–¥–∏"
    COUNTER_PICKS = "‚öñÔ∏è –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏"
    GUIDES = "üìö –ì–∞–π–¥–∏"
    VOTING = "üìä –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
    M6 = "üèÜ M6"
    GPT = "üëæ GPT"
    META = "üî• META"
    TOURNAMENTS = "üèÜ –¢—É—Ä–Ω—ñ—Ä–∏"
    BACK_NAVIGATION = "üîô –ù–∞–∑–∞–¥"
    
    # –ú–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—é
    STATISTICS = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    ACHIEVEMENTS = "üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è"
    SETTINGS = "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
    FEEDBACK = "üíå –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫"
    HELP = "‚ùì –î–æ–ø–æ–º–æ–≥–∞"
    BACK_TO_MAIN_MENU = "üîô –ù–∞–∑–∞–¥ –¥–æ –ì–æ–ª–æ–≤–Ω–æ–≥–æ –ú–µ–Ω—é"
    
    # –ü—ñ–¥–º–µ–Ω—é –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    OVERALL_ACTIVITY = "üìä –ó–∞–≥–∞–ª—å–Ω–∞ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å"
    RATING = "ü•á –†–µ–π—Ç–∏–Ω–≥"
    GAME_STATISTICS = "üéÆ –Ü–≥—Ä–æ–≤–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    BACK_STATISTICS = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é –î–æ—Å—è–≥–Ω–µ–Ω—å
    MY_BADGES = "üéñÔ∏è –ú–æ—ó –ë–µ–π–¥–∂—ñ"
    PROGRESS = "üöÄ –ü—Ä–æ–≥—Ä–µ—Å"
    TOURNAMENT_STATS = "üèÖ –¢—É—Ä–Ω—ñ—Ä–Ω–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    RECEIVED_AWARDS = "üéüÔ∏è –û—Ç—Ä–∏–º–∞–Ω—ñ –ù–∞–≥–æ—Ä–æ–¥–∏"
    BACK_ACHIEVEMENTS = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
    INTERFACE_LANGUAGE = "üåê –ú–æ–≤–∞ –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É"
    CHANGE_USERNAME = "‚ÑπÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ Username"
    UPDATE_ID = "üÜî –û–Ω–æ–≤–∏—Ç–∏ ID"
    NOTIFICATIONS = "üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è"
    BACK_SETTINGS = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é –ó–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –ó–≤'—è–∑–∫—É
    SEND_FEEDBACK = "‚úèÔ∏è –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –í—ñ–¥–≥—É–∫"
    REPORT_BUG = "üêõ –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ü–æ–º–∏–ª–∫—É"
    BACK_FEEDBACK = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é –î–æ–ø–æ–º–æ–≥–∏
    INSTRUCTIONS = "üìÑ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó"
    FAQ = "‚ùî FAQ"
    SUPPORT = "üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"
    BACK_HELP = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤
    TANK = "üõ°Ô∏è –¢–∞–Ω–∫"
    MAGE = "üßô‚Äç‚ôÇÔ∏è –ú–∞–≥"
    ARCHER = "üèπ –°—Ç—Ä—ñ–ª–µ—Ü—å"
    ASSASSIN = "‚öîÔ∏è –ê—Å–∞—Å—ñ–Ω"
    SUPPORT = "‚ù§Ô∏è –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"
    FIGHTER = "üó°Ô∏è –ë–æ—î—Ü—å"
    COMPARISON = "‚öñÔ∏è –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è"
    SEARCH_HERO = "üîé –ü–æ—à—É–∫"
    BACK_HEROES = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é –ë—ñ–ª–¥
    CREATE_BUILD = "üèóÔ∏è –°—Ç–≤–æ—Ä–∏—Ç–∏"
    SELECTED_BUILDS = "üìÑ –û–±—Ä–∞–Ω—ñ"
    POPULAR_BUILDS = "üî• –ü–æ–ø—É–ª—è—Ä–Ω—ñ"
    BACK_BUILDS = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤
    SEARCH_COUNTER = "üîé –ü–æ—à—É–∫"
    HERO_LIST_COUNTER = "üìù –°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤"
    BACK_COUNTER_PICKS = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é –ì–∞–π–¥
    NEW_GUIDES = "üÜï –ù–æ–≤—ñ –ì–∞–π–¥–∏"
    TOP_GUIDES = "üåü –¢–æ–ø –ì–∞–π–¥–∏"
    BEGINNER_GUIDES = "üìò –î–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤"
    GAME_STRATEGIES = "üßô –°—Ç—Ä–∞—Ç–µ–≥—ñ—ó –≥—Ä–∏"
    TEAM_PLAY_GUIDES = "ü§ù –ö–æ–º–∞–Ω–¥–Ω–∞ –ì—Ä–∞"
    BACK_GUIDES = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è
    CURRENT_POLLS = "üìç –ü–æ—Ç–æ—á–Ω—ñ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è"
    MY_VOTINGS = "üìã –ú–æ—ó –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
    SUGGEST_TOPIC = "‚ûï –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –¢–µ–º—É"
    BACK_VOTING = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é M6
    M6_TOURNAMENT_INFO = "üèÜ –¢—É—Ä–Ω—ñ—Ä–Ω–∞ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è"
    M6_STATISTICS = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ M6"
    M6_NEWS = "üì∞ –ù–æ–≤–∏–Ω–∏ M6"
    BACK_M6 = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é GPT
    GPT_DATA_GENERATION = "ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –î–∞–Ω–∏—Ö"
    GPT_HINTS = "üìù –ü—ñ–¥–∫–∞–∑–∫–∏"
    GPT_HERO_STATISTICS = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ì–µ—Ä–æ—ó–≤"
    BACK_GPT = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é META
    META_HERO_LIST = "üìã –°–ø–∏—Å–æ–∫ –ì–µ—Ä–æ—ó–≤ —É –ú–µ—Ç—É"
    META_RECOMMENDATIONS = "üåü –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó"
    META_UPDATE = "üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ú–µ—Ç–∏"
    BACK_META = "üîô –ù–∞–∑–∞–¥"
    
    # –ü—ñ–¥–º–µ–Ω—é –¢—É—Ä–Ω—ñ—Ä—ñ–≤
    CREATE_TOURNAMENT = "üÜï –°—Ç–≤–æ—Ä–∏—Ç–∏ –¢—É—Ä–Ω—ñ—Ä"
    VIEW_TOURNAMENTS = "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¢—É—Ä–Ω—ñ—Ä–∏"
    BACK_TOURNAMENTS = "üîô –ù–∞–∑–∞–¥"
    
    # –°—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–æ—à—É–∫—É –≥–µ—Ä–æ—è –∞–±–æ —Ç–µ–º–∏
    BACK_SEARCH = "üîô –ù–∞–∑–∞–¥ –¥–æ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤"
    
    # –ó–∞–≥–∞–ª—å–Ω—ñ –∫–Ω–æ–ø–∫–∏
    BACK_TO_NAVIGATION = "üîô –ù–∞–∑–∞–¥ –¥–æ –ú–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó"
    BACK_TO_PROFILE = "üîô –ù–∞–∑–∞–¥ –¥–æ –ú–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—é"

# –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä

def get_main_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.NAVIGATION), KeyboardButton(text=MenuButton.PROFILE)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_navigation_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.HEROES),
         KeyboardButton(text=MenuButton.BUILDS)],
        [KeyboardButton(text=MenuButton.COUNTER_PICKS),
         KeyboardButton(text=MenuButton.GUIDES)],
        [KeyboardButton(text=MenuButton.VOTING),
         KeyboardButton(text=MenuButton.M6)],
        [KeyboardButton(text=MenuButton.GPT),
         KeyboardButton(text=MenuButton.META)],
        [KeyboardButton(text=MenuButton.TOURNAMENTS),
         KeyboardButton(text=MenuButton.BACK_NAVIGATION)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_profile_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.STATISTICS),
         KeyboardButton(text=MenuButton.ACHIEVEMENTS)],
        [KeyboardButton(text=MenuButton.SETTINGS),
         KeyboardButton(text=MenuButton.FEEDBACK)],
        [KeyboardButton(text=MenuButton.HELP),
         KeyboardButton(text=MenuButton.BACK_TO_MAIN_MENU)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –ø—Ä–æ—Ñ—ñ–ª—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_statistics_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.OVERALL_ACTIVITY),
         KeyboardButton(text=MenuButton.RATING)],
        [KeyboardButton(text=MenuButton.GAME_STATISTICS),
         KeyboardButton(text=MenuButton.BACK_STATISTICS)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_achievements_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.MY_BADGES),
         KeyboardButton(text=MenuButton.PROGRESS)],
        [KeyboardButton(text=MenuButton.TOURNAMENT_STATS),
         KeyboardButton(text=MenuButton.RECEIVED_AWARDS)],
        [KeyboardButton(text=MenuButton.BACK_ACHIEVEMENTS)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –¥–æ—Å—è–≥–Ω–µ–Ω—å –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_settings_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.INTERFACE_LANGUAGE),
         KeyboardButton(text=MenuButton.CHANGE_USERNAME)],
        [KeyboardButton(text=MenuButton.UPDATE_ID),
         KeyboardButton(text=MenuButton.NOTIFICATIONS)],
        [KeyboardButton(text=MenuButton.BACK_SETTINGS)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_feedback_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.SEND_FEEDBACK),
         KeyboardButton(text=MenuButton.REPORT_BUG)],
        [KeyboardButton(text=MenuButton.BACK_FEEDBACK)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_help_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.INSTRUCTIONS),
         KeyboardButton(text=MenuButton.FAQ)],
        [KeyboardButton(text=MenuButton.SUPPORT),
         KeyboardButton(text=MenuButton.BACK_HELP)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –¥–æ–ø–æ–º–æ–≥–∏ –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_heroes_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.TANK),
         KeyboardButton(text=MenuButton.MAGE),
         KeyboardButton(text=MenuButton.ARCHER)],
        [KeyboardButton(text=MenuButton.ASSASSIN),
         KeyboardButton(text=MenuButton.SUPPORT),
         KeyboardButton(text=MenuButton.FIGHTER)],
        [KeyboardButton(text=MenuButton.COMPARISON),
         KeyboardButton(text=MenuButton.SEARCH_HERO)],
        [KeyboardButton(text=MenuButton.BACK_HEROES)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_builds_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.CREATE_BUILD),
         KeyboardButton(text=MenuButton.SELECTED_BUILDS)],
        [KeyboardButton(text=MenuButton.POPULAR_BUILDS),
         KeyboardButton(text=MenuButton.BACK_BUILDS)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –ë—ñ–ª–¥–∏ –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_counter_picks_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.SEARCH_COUNTER),
         KeyboardButton(text=MenuButton.HERO_LIST_COUNTER)],
        [KeyboardButton(text=MenuButton.BACK_COUNTER_PICKS)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤ –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_guides_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.NEW_GUIDES),
         KeyboardButton(text=MenuButton.TOP_GUIDES)],
        [KeyboardButton(text=MenuButton.BEGINNER_GUIDES),
         KeyboardButton(text=MenuButton.GAME_STRATEGIES)],
        [KeyboardButton(text=MenuButton.TEAM_PLAY_GUIDES),
         KeyboardButton(text=MenuButton.BACK_GUIDES)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –ì–∞–π–¥–∏ –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_voting_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.CURRENT_POLLS),
         KeyboardButton(text=MenuButton.MY_VOTINGS)],
        [KeyboardButton(text=MenuButton.SUGGEST_TOPIC),
         KeyboardButton(text=MenuButton.BACK_VOTING)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_m6_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.M6_TOURNAMENT_INFO),
         KeyboardButton(text=MenuButton.M6_STATISTICS)],
        [KeyboardButton(text=MenuButton.M6_NEWS),
         KeyboardButton(text=MenuButton.BACK_M6)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é M6 –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_gpt_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.GPT_DATA_GENERATION),
         KeyboardButton(text=MenuButton.GPT_HINTS)],
        [KeyboardButton(text=MenuButton.GPT_HERO_STATISTICS),
         KeyboardButton(text=MenuButton.BACK_GPT)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é GPT –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_meta_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.META_HERO_LIST),
         KeyboardButton(text=MenuButton.META_RECOMMENDATIONS)],
        [KeyboardButton(text=MenuButton.META_UPDATE),
         KeyboardButton(text=MenuButton.BACK_META)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é META –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_tournaments_menu() -> ReplyKeyboardMarkup:
    keyboard = [
        [KeyboardButton(text=MenuButton.CREATE_TOURNAMENT),
         KeyboardButton(text=MenuButton.VIEW_TOURNAMENTS)],
        [KeyboardButton(text=MenuButton.BACK_TOURNAMENTS)]
    ]
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –¢—É—Ä–Ω—ñ—Ä—ñ–≤ –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_hero_class_menu(hero_class: str) -> ReplyKeyboardMarkup:
    # –ü—Ä–∏–∫–ª–∞–¥ –¥–ª—è –∫–ª–∞—Å—É –¢–∞–Ω–∫. –ü–æ–≤—Ç–æ—Ä—ñ—Ç—å –¥–ª—è —ñ–Ω—à–∏—Ö –∫–ª–∞—Å—ñ–≤, –¥–æ–¥–∞—é—á–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –≥–µ—Ä–æ—ó–≤.
    heroes = {
        "–¢–∞–Ω–∫": [
            "Alice",
            "Tigreal",
            "Akai",
            "Franco",
            "Minotaur",
            "Lolia",
            "Gatotkaca",
            "Grock",
            "Hylos",
            "Uranus",
            "Belerick",
            "Khufra",
            "Esmeralda",
            "Terizla",
            "Baxia",
            "Masha",
            "Atlas",
            "Barats",
            "Edith",
            "Fredrinn",
            "Johnson",
            "Hilda",
            "Carmilla",
            "Gloo",
            "Chip"
        ],
        "–ú–∞–≥": [
            "Lancelot",
            "Eudora",
            "Layla",
            "Valir",
            "Kaja",
            "Cyclops",
            "Harith",
            "Nana",
            "Esmeralda",
            "Pharsa",
            "Alice",
            "Kimmy",
            "Yve",
            "Harith",
            "Jawhead",
            "Paquito",
            "Kadita",
            "Vale",
            "Alucard",
            "Ruby",
            "Valir",
            "Ruby",
            "Franco",
            "Layla",
            "Yve"
            # –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à–∏—Ö –º–∞–≥—ñ–≤
        ],
        # –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ –∫–ª–∞—Å–∏ –≥–µ—Ä–æ—ó–≤ –∑ —ó—Ö–Ω—ñ–º–∏ —ñ–º–µ–Ω–∞–º–∏
    }

    hero_list = heroes.get(hero_class, [])
    keyboard = []
    row = []
    for idx, hero in enumerate(hero_list, 1):
        row.append(KeyboardButton(text=hero))
        if idx % 3 == 0:
            keyboard.append(row)
            row = []
    if row:
        keyboard.append(row)
    keyboard.append([KeyboardButton(text=MenuButton.BACK_HEROES)])

    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –∫–ª–∞—Å—É –≥–µ—Ä–æ—è '{hero_class}' –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.text for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_generic_inline_keyboard() -> ReplyKeyboardMarkup:
    # –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –≤–∏–∑–Ω–∞—á–µ–Ω–∞ —É –≤–∞—à–æ–º—É —Ñ–∞–π–ª—ñ inline_menus.py
    # –¢—É—Ç –Ω–∞–≤–µ–¥–µ–Ω–æ –ø—Ä–æ—Å—Ç–∏–π –ø—Ä–∏–∫–ª–∞–¥
    keyboard = [
        [KeyboardButton(text="üîÑ –û–Ω–æ–≤–∏—Ç–∏")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –≤–∞—à–æ–≥–æ –º–µ–Ω—é