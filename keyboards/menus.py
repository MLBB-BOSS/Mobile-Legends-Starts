# keyboards/menus.py

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from enum import Enum
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

class MenuButton(Enum):
    # –ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é
    NAVIGATION = "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è"
    PROFILE = "ü™™ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å"

    # –†–æ–∑–¥—ñ–ª –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
    HEROES = "ü•∑ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ"
    BUILDS = "üõ°Ô∏è –ë—ñ–ª–¥–∏"
    COUNTER_PICKS = "‚öñÔ∏è –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏"
    GUIDES = "üìö –ì–∞–π–¥–∏"
    VOTING = "üìä –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
    M6 = "üèÜ M6"
    GPT = "üëæ GPT"
    META = "üî• META"
    TOURNAMENTS = "üèÜ –¢—É—Ä–Ω—ñ—Ä–∏"
    BACK_NAVIGATION = "üîô –ù–∞–∑–∞–¥"

    # –†–æ–∑–¥—ñ–ª –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ
    TANK = "üõ°Ô∏è –¢–∞–Ω–∫"
    MAGE = "üßô‚Äç‚ôÇÔ∏è –ú–∞–≥"
    MARKSMAN = "üèπ –°—Ç—Ä—ñ–ª–µ—Ü—å"
    ASSASSIN = "‚öîÔ∏è –ê—Å–∞—Å—ñ–Ω"
    SUPPORT = "‚ù§Ô∏è –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"
    FIGHTER = "üó°Ô∏è –ë–æ—î—Ü—å"
    COMPARISON = "‚öñÔ∏è –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è"
    SEARCH_HERO = "üîé –ü–æ—à—É–∫"
    BACK_HEROES = "üîô –ù–∞–∑–∞–¥"

    # –†–æ–∑–¥—ñ–ª –ì–∞–π–¥–∏
    NEW_GUIDES = "üÜï –ù–æ–≤—ñ –ì–∞–π–¥–∏"
    POPULAR_GUIDES = "üåü –¢–æ–ø –ì–∞–π–¥–∏"
    BEGINNER_GUIDES = "üìò –î–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤"
    ADVANCED_TECHNIQUES = "üßô –°—Ç—Ä–∞—Ç–µ–≥—ñ—ó –≥—Ä–∏"
    TEAMPLAY_GUIDES = "ü§ù –ö–æ–º–∞–Ω–¥–Ω–∞ –ì—Ä–∞"
    BACK_GUIDES = "üîô –ù–∞–∑–∞–¥"

    # –†–æ–∑–¥—ñ–ª –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏
    COUNTER_SEARCH = "üîé –ü–æ—à—É–∫"
    COUNTER_LIST = "üìù –°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤"
    BACK_COUNTER_PICKS = "üîô –ù–∞–∑–∞–¥"

    # –†–æ–∑–¥—ñ–ª –ë—ñ–ª–¥–∏
    CREATE_BUILD = "üèóÔ∏è –°—Ç–≤–æ—Ä–∏—Ç–∏"
    MY_BUILDS = "üìÑ –û–±—Ä–∞–Ω—ñ"
    POPULAR_BUILDS = "üî• –ü–æ–ø—É–ª—è—Ä–Ω—ñ"
    BACK_BUILDS = "üîô –ù–∞–∑–∞–¥"

    # –†–æ–∑–¥—ñ–ª –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è
    CURRENT_VOTES = "üìç –ü–æ—Ç–æ—á–Ω—ñ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è"
    MY_VOTES = "üìã –ú–æ—ó –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
    SUGGEST_TOPIC = "‚ûï –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –¢–µ–º—É"
    BACK_VOTING = "üîô –ù–∞–∑–∞–¥"

    # –†–æ–∑–¥—ñ–ª –ü—Ä–æ—Ñ—ñ–ª—å
    STATISTICS = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    ACHIEVEMENTS = "üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è"
    SETTINGS = "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
    FEEDBACK = "üíå –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫"
    HELP = "‚ùì –î–æ–ø–æ–º–æ–≥–∞"
    BACK_TO_MAIN_MENU = "üîô –ù–∞–∑–∞–¥ –¥–æ –ì–æ–ª–æ–≤–Ω–æ–≥–æ –ú–µ–Ω—é"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    ACTIVITY = "üìä –ó–∞–≥–∞–ª—å–Ω–∞ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å"
    RANKING = "ü•á –†–µ–π—Ç–∏–Ω–≥"
    GAME_STATS = "üéÆ –Ü–≥—Ä–æ–≤–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    BACK_TO_PROFILE = "üîô –ù–∞–∑–∞–¥"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è
    BADGES = "üéñÔ∏è –ú–æ—ó –ë–µ–π–¥–∂—ñ"
    PROGRESS = "üöÄ –ü—Ä–æ–≥—Ä–µ—Å"
    TOURNAMENT_STATS = "üèÖ –¢—É—Ä–Ω—ñ—Ä–Ω–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    AWARDS = "üéüÔ∏è –û—Ç—Ä–∏–º–∞–Ω—ñ –ù–∞–≥–æ—Ä–æ–¥–∏"
    BACK_ACHIEVEMENTS = "üîô –ù–∞–∑–∞–¥"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    LANGUAGE = "üåê –ú–æ–≤–∞ –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É"
    CHANGE_USERNAME = "‚ÑπÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ Username"
    UPDATE_ID = "üÜî –û–Ω–æ–≤–∏—Ç–∏ ID"
    NOTIFICATIONS = "üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è"
    BACK_SETTINGS = "üîô –ù–∞–∑–∞–¥"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫
    SEND_FEEDBACK = "‚úèÔ∏è –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –í—ñ–¥–≥—É–∫"
    REPORT_BUG = "üêõ –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ü–æ–º–∏–ª–∫—É"
    BACK_FEEDBACK = "üîô –ù–∞–∑–∞–¥"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª –î–æ–ø–æ–º–æ–≥–∞
    INSTRUCTIONS = "üìÑ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó"
    FAQ = "‚ùî FAQ"
    HELP_SUPPORT = "üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"
    BACK_HELP = "üîô –ù–∞–∑–∞–¥"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ M6
    M6_TOURNAMENT_INFO = "üèÜ –¢—É—Ä–Ω—ñ—Ä–Ω–∞ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è"
    M6_STATISTICS = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ M6"
    M6_NEWS = "üì∞ –ù–æ–≤–∏–Ω–∏ M6"
    BACK_M6 = "üîô –ù–∞–∑–∞–¥"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ GPT
    GPT_DATA_GENERATION = "ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –î–∞–Ω–∏—Ö"
    GPT_HINTS = "üìù –ü—ñ–¥–∫–∞–∑–∫–∏"
    GPT_HERO_STATISTICS = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ì–µ—Ä–æ—ó–≤"
    BACK_GPT = "üîô –ù–∞–∑–∞–¥"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ META
    META_HERO_LIST = "üìã –°–ø–∏—Å–æ–∫ –ì–µ—Ä–æ—ó–≤ —É –ú–µ—Ç—É"
    META_RECOMMENDATIONS = "üåü –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó"
    META_UPDATE = "üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ú–µ—Ç–∏"
    BACK_META = "üîô –ù–∞–∑–∞–¥"

    # –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ –¢—É—Ä–Ω—ñ—Ä—ñ–≤
    CREATE_TOURNAMENT = "üÜï –°—Ç–≤–æ—Ä–∏—Ç–∏ –¢—É—Ä–Ω—ñ—Ä"
    VIEW_TOURNAMENTS = "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¢—É—Ä–Ω—ñ—Ä–∏"
    BACK_TOURNAMENTS = "üîô –ù–∞–∑–∞–¥"

    # –ó–∞–≥–∞–ª—å–Ω—ñ –∫–Ω–æ–ø–∫–∏
    BACK_TO_NAVIGATION = "üîô –ù–∞–∑–∞–¥ –¥–æ –ú–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó"
    BACK_TO_PROFILE_MENU = "üîô –ù–∞–∑–∞–¥ –¥–æ –ú–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—é"

# –í—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ –∫–ª–∞—Å–∞–º –≥–µ—Ä–æ—ó–≤
menu_button_to_class = {
    MenuButton.TANK.value: "–¢–∞–Ω–∫",
    MenuButton.MAGE.value: "–ú–∞–≥",
    MenuButton.MARKSMAN.value: "–°—Ç—Ä—ñ–ª–µ—Ü—å",
    MenuButton.ASSASSIN.value: "–ê—Å–∞—Å—ñ–Ω",
    MenuButton.SUPPORT.value: "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞",
    MenuButton.FIGHTER.value: "–ë–æ—î—Ü—å",
}

# –ü–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤ –∑–∞ –∫–ª–∞—Å–∞–º–∏
heroes_by_class = {
    "–¢–∞–Ω–∫": [
        "Alice", "Tigreal", "Akai", "Franco", "Minotaur", "Lolia", "Gatotkaca", "Grock",
        "Hylos", "Uranus", "Belerick", "Khufra", "Esmeralda", "Terizla", "Baxia", "Masha",
        "Atlas", "Barats", "Edith", "Fredrinn", "Johnson", "Hilda", "Carmilla", "Gloo", "Chip"
    ],
    "–ú–∞–≥": [
        "Vale", "Lunox", "Kadita", "Cecillion", "Luo Yi", "Xavier", "Novaria", "Zhuxin",
        "Harley", "Yve", "Aurora", "Faramis", "Esmeralda", "Kagura", "Cyclops", "Vexana",
        "Odette", "Zhask"
    ],
    "–°—Ç—Ä—ñ–ª–µ—Ü—å": [
        "Popol and Kupa", "Brody", "Beatrix", "Natan", "Melissa", "Ixia", "Hanabi", "Claude",
        "Kimmy", "Granger", "Wanwan", "Miya", "Bruno", "Clint", "Layla", "Yi Sun-shin",
        "Moskov", "Roger", "Karrie", "Irithel", "Lesley"
    ],
    "–ê—Å–∞—Å—ñ–Ω": [
        "Saber", "Alucard", "Zilong", "Fanny", "Natalia", "Yi Sun-shin", "Lancelot",
        "Helcurt", "Lesley", "Selena", "Mathilda", "Paquito", "Yin", "Arlott", "Harley",
        "Suyou"
    ],
    "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞": [
        "Rafaela", "Minotaur", "Lolita", "Estes", "Angela", "Faramis", "Mathilda",
        "Florin", "Johnson"
    ],
    "–ë–æ—î—Ü—å": [
        "Balmond", "Alucard", "Bane", "Zilong", "Freya", "Alpha", "Ruby", "Roger",
        "Gatotkaca", "Jawhead", "Martis", "Aldous", "Minsitthar", "Terizla", "X.Borg",
        "Dyroth", "Masha", "Silvanna", "Yu Zhong", "Khaleed", "Barats", "Paquito",
        "Phoveus", "Aulus", "Fiddrin", "Arlott", "Cici", "Kaja", "Leomord", "Thamuz",
        "Badang", "Guinevere"
    ],
}

def create_menu(buttons, row_width=2):
    """
    –°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏.
    :param buttons: –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ (MenuButton –∞–±–æ str).
    :param row_width: –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ —É —Ä—è–¥–∫—É.
    :return: ReplyKeyboardMarkup
    """
    if not all(isinstance(button, MenuButton) or isinstance(button, str) for button in buttons):
        raise ValueError("–£—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —É —Å–ø–∏—Å–∫—É –∫–Ω–æ–ø–æ–∫ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ MenuButton –∞–±–æ str.")
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.value if isinstance(button, MenuButton) else button for button in buttons]}")
    keyboard_buttons = [
        KeyboardButton(text=button.value if isinstance(button, MenuButton) else button) for button in buttons
    ]
    keyboard = [
        keyboard_buttons[i:i + row_width]
        for i in range(0, len(keyboard_buttons), row_width)
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_main_menu():
    return create_menu(
        [
            MenuButton.NAVIGATION,
            MenuButton.PROFILE
        ],
        row_width=2
    )

def get_navigation_menu():
    return create_menu(
        [
            MenuButton.HEROES,
            MenuButton.BUILDS,
            MenuButton.COUNTER_PICKS,
            MenuButton.GUIDES,
            MenuButton.VOTING,
            MenuButton.M6,
            MenuButton.GPT,
            MenuButton.META,
            MenuButton.TOURNAMENTS,
            MenuButton.BACK_NAVIGATION
        ],
        row_width=3
    )

def get_heroes_menu():
    return create_menu(
        [
            MenuButton.TANK,
            MenuButton.MAGE,
            MenuButton.MARKSMAN,
            MenuButton.ASSASSIN,
            MenuButton.SUPPORT,
            MenuButton.FIGHTER,
            MenuButton.COMPARISON,
            MenuButton.SEARCH_HERO,
            MenuButton.BACK_HEROES
        ],
        row_width=3
    )

def get_hero_class_menu(hero_class):
    heroes = heroes_by_class.get(hero_class, [])
    buttons = heroes.copy()
    # –†–æ–∑–±–∏–≤–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –Ω–∞ —Ä—è–¥–∫–∏ –ø–æ 3
    keyboard = [
        buttons[i:i+3] for i in range(0, len(buttons), 3)
    ]
    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "üîô –ù–∞–∑–∞–¥"
    keyboard.append([MenuButton.BACK_HEROES.value])
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –∫–ª–∞—Å—É –≥–µ—Ä–æ—è '{hero_class}' –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button for row in keyboard for button in row]}")
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_guides_menu():
    return create_menu(
        [
            MenuButton.NEW_GUIDES,
            MenuButton.POPULAR_GUIDES,
            MenuButton.BEGINNER_GUIDES,
            MenuButton.ADVANCED_TECHNIQUES,
            MenuButton.TEAMPLAY_GUIDES,
            MenuButton.BACK_GUIDES
        ],
        row_width=3
    )

def get_counter_picks_menu():
    return create_menu(
        [
            MenuButton.COUNTER_SEARCH,
            MenuButton.COUNTER_LIST,
            MenuButton.BACK_COUNTER_PICKS
        ],
        row_width=3
    )

def get_builds_menu():
    return create_menu(
        [
            MenuButton.CREATE_BUILD,
            MenuButton.MY_BUILDS,
            MenuButton.POPULAR_BUILDS,
            MenuButton.BACK_BUILDS
        ],
        row_width=3
    )

def get_voting_menu():
    return create_menu(
        [
            MenuButton.CURRENT_VOTES,
            MenuButton.MY_VOTES,
            MenuButton.SUGGEST_TOPIC,
            MenuButton.BACK_VOTING
        ],
        row_width=3
    )

def get_profile_menu_buttons():
    return create_menu(
        [
            MenuButton.STATISTICS,
            MenuButton.ACHIEVEMENTS,
            MenuButton.SETTINGS,
            MenuButton.FEEDBACK,
            MenuButton.HELP,
            MenuButton.BACK_TO_MAIN_MENU
        ],
        row_width=3
    )

def get_statistics_menu():
    return create_menu(
        [
            MenuButton.ACTIVITY,
            MenuButton.RANKING,
            MenuButton.GAME_STATS,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=2
    )

def get_achievements_menu():
    return create_menu(
        [
            MenuButton.BADGES,
            MenuButton.PROGRESS,
            MenuButton.TOURNAMENT_STATS,
            MenuButton.AWARDS,
            MenuButton.BACK_ACHIEVEMENTS
        ],
        row_width=2
    )

def get_settings_menu():
    return create_menu(
        [
            MenuButton.LANGUAGE,
            MenuButton.CHANGE_USERNAME,
            MenuButton.UPDATE_ID,
            MenuButton.NOTIFICATIONS,
            MenuButton.BACK_SETTINGS
        ],
        row_width=2
    )

def get_feedback_menu():
    return create_menu(
        [
            MenuButton.SEND_FEEDBACK,
            MenuButton.REPORT_BUG,
            MenuButton.BACK_FEEDBACK
        ],
        row_width=2
    )

def get_help_menu():
    return create_menu(
        [
            MenuButton.INSTRUCTIONS,
            MenuButton.FAQ,
            MenuButton.HELP_SUPPORT,
            MenuButton.BACK_HELP
        ],
        row_width=2
    )

def get_m6_menu():
    return create_menu(
        [
            MenuButton.M6_TOURNAMENT_INFO,
            MenuButton.M6_STATISTICS,
            MenuButton.M6_NEWS,
            MenuButton.BACK_M6
        ],
        row_width=2
    )

def get_gpt_menu():
    return create_menu(
        [
            MenuButton.GPT_DATA_GENERATION,
            MenuButton.GPT_HINTS,
            MenuButton.GPT_HERO_STATISTICS,
            MenuButton.BACK_GPT
        ],
        row_width=2
    )

def get_meta_menu():
    return create_menu(
        [
            MenuButton.META_HERO_LIST,
            MenuButton.META_RECOMMENDATIONS,
            MenuButton.META_UPDATE,
            MenuButton.BACK_META
        ],
        row_width=2
    )

def get_tournaments_menu():
    return create_menu(
        [
            MenuButton.CREATE_TOURNAMENT,
            MenuButton.VIEW_TOURNAMENTS,
            MenuButton.BACK_TOURNAMENTS
        ],
        row_width=2
    )