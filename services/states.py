from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from services.states import RegistrationStates  # –î–æ–¥–∞–Ω–æ —ñ–º–ø–æ—Ä—Ç —Å—Ç–∞–Ω—ñ–≤ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó

router = Router()

def get_cancel_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")]],
        resize_keyboard=True
    )

@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    user = await get_user(message.from_user.id)
    
    if user and user.is_registered:
        await message.answer(
            f"–ó –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º, {user.nickname}! üëã",
            reply_markup=ReplyKeyboardRemove()
        )
        return

    await message.answer(
        "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ! üéÆ\n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω—ñ–∫–Ω–µ–π–º (–º—ñ–Ω—ñ–º—É–º 3 —Å–∏–º–≤–æ–ª–∏):",
        reply_markup=get_cancel_keyboard()
    )
    await state.set_state(RegistrationStates.waiting_for_nickname)

@router.message(F.text == "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")
async def cancel_registration(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ. –©–æ–± –ø–æ—á–∞—Ç–∏ –∑–Ω–æ–≤—É, –≤–≤–µ–¥—ñ—Ç—å /start",
        reply_markup=ReplyKeyboardRemove()
    )

@router.message(RegistrationStates.waiting_for_nickname)
async def process_nickname(message: Message, state: FSMContext):
    nickname = message.text.strip()
    
    if len(nickname) < 3:
        await message.answer("–ù—ñ–∫–Ω–µ–π–º –∑–∞–∫–æ—Ä–æ—Ç–∫–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:")
        return
        
    await state.update_data(nickname=nickname)
    await message.answer(
        "–ß—É–¥–æ–≤–æ! ‚ú®\n–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à Game ID:",
        reply_markup=get_cancel_keyboard()
    )
    await state.set_state(RegistrationStates.waiting_for_game_id)

@router.message(RegistrationStates.waiting_for_game_id)
async def process_game_id(message: Message, state: FSMContext):
    game_id = message.text.strip()
    
    if not game_id.isdigit():
        await message.answer("Game ID –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –ª–∏—à–µ —Ü–∏—Ñ—Ä–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:")
        return
        
    user_data = await state.get_data()
    
    try:
        await register_user(
            telegram_id=message.from_user.id,
            nickname=user_data['nickname'],
            game_id=game_id
        )
        
        await message.answer(
            "‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –±–æ—Ç–æ–º.",
            reply_markup=ReplyKeyboardRemove()
        )
    except Exception as e:
        await message.answer(
            "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.",
            reply_markup=ReplyKeyboardRemove()
        )
        
    await state.clear()
