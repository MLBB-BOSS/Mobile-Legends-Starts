import os
import logging
from aiogram import Bot, Dispatcher, Router, F
from aiogram.types import Message
from aiogram.filters import Command, Text
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
if not TOKEN:
    logger.error("–ó–º—ñ–Ω–Ω–∞ –æ—Ç–æ—á–µ–Ω–Ω—è TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞!")
    raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()
router = Router()

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –ø–µ—Ä—à–æ–≥–æ —Ä—ñ–≤–Ω—è
def get_main_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è"), KeyboardButton("ü™™ –ü—Ä–æ—Ñ—ñ–ª—å"))
    return keyboard

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥—Ä—É–≥–æ–≥–æ —Ä—ñ–≤–Ω—è
def get_navigation_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row(
        KeyboardButton("üõ°Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ"),
        KeyboardButton("üìö –ì–∞–π–¥–∏"),
        KeyboardButton("‚öñÔ∏è –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏")
    )
    keyboard.row(
        KeyboardButton("‚öúÔ∏è –ë—ñ–ª–¥–∏"),
        KeyboardButton("üìä –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"),
        KeyboardButton("üîÑ –ù–∞–∑–∞–¥")
    )
    return keyboard

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–±–æ—Ä—É –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤
def get_heroes_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row(
        KeyboardButton("üîé –ü–æ—à—É–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞"),
        KeyboardButton("üõ°Ô∏è –¢–∞–Ω–∫"),
        KeyboardButton("üîÆ –ú–∞–≥")
    )
    keyboard.row(
        KeyboardButton("üèπ –°—Ç—Ä—ñ–ª–µ—Ü—å"),
        KeyboardButton("‚öîÔ∏è –ê—Å–∞—Å—ñ–Ω"),
        KeyboardButton("üß¨ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞")
    )
    keyboard.add(KeyboardButton("üîÑ –ù–∞–∑–∞–¥"))
    return keyboard

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@router.message(Command("start"))
async def start_handler(message: Message):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –Ω–∞–¥—ñ—Å–ª–∞–≤ –∫–æ–º–∞–Ω–¥—É /start")
    await message.answer(
        "–ü—Ä–∏–≤—ñ—Ç! –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –±–æ—Ç–∞.",
        reply_markup=get_main_menu()
    )

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
@router.message(Text(["üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è", "ü™™ –ü—Ä–æ—Ñ—ñ–ª—å"]))
async def handle_main_menu(message: Message):
    if message.text == "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è":
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ 'üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è'")
        await message.answer(
            "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è: –û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª:",
            reply_markup=get_navigation_menu()
        )
    elif message.text == "ü™™ –ü—Ä–æ—Ñ—ñ–ª—å":
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ 'ü™™ –ü—Ä–æ—Ñ—ñ–ª—å'")
        await message.answer(
            "ü™™ –í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å. –¢—É—Ç –±—É–¥–µ –±—ñ–ª—å—à–µ —Ñ—É–Ω–∫—Ü—ñ–π –ø—ñ–∑–Ω—ñ—à–µ.",
            reply_markup=get_main_menu()
        )

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–æ–≥–æ –º–µ–Ω—é
@router.message(Text(["üîÑ –ù–∞–∑–∞–¥", "üõ°Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ", "üìö –ì–∞–π–¥–∏", "‚öñÔ∏è –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏", "‚öúÔ∏è –ë—ñ–ª–¥–∏", "üìä –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"]))
async def handle_navigation_menu(message: Message):
    if message.text == "üîÑ –ù–∞–∑–∞–¥":
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ 'üîÑ –ù–∞–∑–∞–¥'")
        await message.answer(
            "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.",
            reply_markup=get_main_menu()
        )
    elif message.text == "üõ°Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ":
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ 'üõ°Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ'")
        await message.answer(
            "üõ°Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ: –û–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤:",
            reply_markup=get_heroes_menu()
        )
    else:
        logger.warning(f"–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞ –≤ –º–µ–Ω—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó: {message.text}")
        await message.answer("–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞. –û–±–µ—Ä—ñ—Ç—å –∑ –º–µ–Ω—é.")

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤
@router.message(Text(["üîé –ü–æ—à—É–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞", "üõ°Ô∏è –¢–∞–Ω–∫", "üîÆ –ú–∞–≥", "üèπ –°—Ç—Ä—ñ–ª–µ—Ü—å", "‚öîÔ∏è –ê—Å–∞—Å—ñ–Ω", "üß¨ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞", "üîÑ –ù–∞–∑–∞–¥"]))
async def handle_heroes_menu(message: Message):
    if message.text == "üîÑ –ù–∞–∑–∞–¥":
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ 'üîÑ –ù–∞–∑–∞–¥'")
        await message.answer(
            "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–æ–≥–æ –º–µ–Ω—é.",
            reply_markup=get_navigation_menu()
        )
    else:
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ {message.text}")
        await message.answer(
            f"–í–∏ –æ–±—Ä–∞–ª–∏ {message.text}. –¶—è —Ñ—É–Ω–∫—Ü—ñ—è —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
            reply_markup=get_heroes_menu()
        )

# –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞
dp.include_router(router)

if __name__ == "__main__":
    import asyncio
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        asyncio.run(dp.start_polling(bot))
    except (KeyboardInterrupt, SystemExit):
        logger.info("–ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ.")
