# handlers/profile_handlers.py
# UTC:22:00
# 2024-11-25
# Author: MLBB-BOSS
# Description: Handlers for profile menu and user-related actions
# The era of artificial intelligence.
# handlers/profile_handlers.py
# UTC:22:00
# 2024-11-25
# Author: MLBB-BOSS
# Description: Handlers for profile menu and user-related actions
# The era of artificial intelligence.

from aiogram import Router, F
from aiogram.types import Message
from keyboards.profile_menu import get_profile_keyboard
from keyboards.main_menu import get_main_keyboard
import logging

logger = logging.getLogger(__name__)
router = Router()

@router.message(F.text == "üë§ –ü—Ä–æ—Ñ—ñ–ª—å")
async def show_profile(message: Message):
    try:
        logger.info(f"User {message.from_user.id} accessed profile")
        await message.answer(
            "–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å:\n\n"
            "üéÆ –ù—ñ–∫–Ω–µ–π–º: –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n"
            "üèÜ –†–µ–π—Ç–∏–Ω–≥: 0\n"
            "üéØ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è: 0\n"
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞",
            reply_markup=get_profile_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in profile handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

@router.message(F.text == "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_statistics(message: Message):
    try:
        logger.info(f"User {message.from_user.id} accessed statistics")
        await message.answer(
            "üìà –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
            "üéÆ –Ü–≥–æ—Ä –∑—ñ–≥—Ä–∞–Ω–æ: 0\n"
            "‚ú® –°–µ—Ä–µ–¥–Ω—ñ–π KDA: 0/0/0\n"
            "üèÜ –ü–µ—Ä–µ–º–æ–≥: 0\n"
            "üíî –ü–æ—Ä–∞–∑–æ–∫: 0",
            reply_markup=get_profile_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in statistics handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

@router.message(F.text == "üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è")
async def show_achievements(message: Message):
    try:
        logger.info(f"User {message.from_user.id} accessed achievements")
        await message.answer(
            "üèÜ –í–∞—à—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è:\n\n"
            "–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –¥–æ—Å—è–≥–Ω–µ–Ω—å.\n"
            "–ì—Ä–∞–π—Ç–µ –±—ñ–ª—å—à–µ, —â–æ–± –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–æ–≤—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è!",
            reply_markup=get_profile_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in achievements handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

@router.message(F.text == "üíå –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫")
async def show_feedback(message: Message):
    try:
        logger.info(f"User {message.from_user.id} accessed feedback")
        await message.answer(
            "üíå –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫:\n\n"
            "–î–ª—è –∑–≤'—è–∑–∫—É –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é –Ω–∞–ø–∏—à—ñ—Ç—å: @admin_username",
            reply_markup=get_profile_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in feedback handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

@router.message(F.text == "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
async def show_settings(message: Message):
    try:
        logger.info(f"User {message.from_user.id} accessed settings")
        await message.answer(
            "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:\n\n"
            "üéÆ –ù—ñ–∫–Ω–µ–π–º: –ó–º—ñ–Ω–∏—Ç–∏\n"
            "üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è: –£–≤—ñ–º–∫\n"
            "üåê –ú–æ–≤–∞: –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞",
            reply_markup=get_profile_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in settings handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

@router.message(F.text == "‚ùì –î–æ–ø–æ–º–æ–≥–∞")
async def show_help(message: Message):
    try:
        logger.info(f"User {message.from_user.id} accessed help")
        await message.answer(
            "‚ùì –î–æ–ø–æ–º–æ–≥–∞:\n\n"
            "üë§ –ü—Ä–æ—Ñ—ñ–ª—å - –ø–µ—Ä–µ–≥–ª—è–¥ –≤–∞—à–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é\n"
            "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –≤–∞—à–∞ —ñ–≥—Ä–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
            "üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è - –≤–∞—à—ñ –Ω–∞–≥–æ—Ä–æ–¥–∏\n"
            "üíå –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫ - –∑–≤'—è–∑–æ–∫ –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é\n"
            "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è - –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞",
            reply_markup=get_profile_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in help handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

@router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def back_to_main_from_profile(message: Message):
    try:
        logger.info(f"User {message.from_user.id} returned to main menu from profile")
        await message.answer(
            "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:",
            reply_markup=get_main_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in back to main menu handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
