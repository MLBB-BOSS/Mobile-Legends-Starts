from aiogram import Router, F
from aiogram.types import Message
from keyboards.profile_menu import get_profile_keyboard
import logging

logger = logging.getLogger(__name__)
router = Router()

@router.message(F.text == "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_statistics(message: Message):
    try:
        logger.info(f"User {message.from_user.id} accessed statistics")
        await message.answer(
            "üìà –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
            "üéÆ –Ü–≥–æ—Ä –∑—ñ–≥—Ä–∞–Ω–æ: 0\n"
            "‚ú® –°–µ—Ä–µ–¥–Ω—ñ–π KDA: 0/0/0\n"
            "üèÜ –ü–µ—Ä–µ–º–æ–≥: 0\n"
            "üíî –ü–æ—Ä–∞–∑–æ–∫: 0",
            reply_markup=get_profile_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in statistics handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

@router.message(F.text == "üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è")
async def show_achievements(message: Message):
    try:
        logger.info(f"User {message.from_user.id} accessed achievements")
        await message.answer(
            "üèÜ –í–∞—à—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è:\n\n"
            "–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –¥–æ—Å—è–≥–Ω–µ–Ω—å.\n"
            "–ì—Ä–∞–π—Ç–µ –±—ñ–ª—å—à–µ, —â–æ–± –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–æ–≤—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è!",
            reply_markup=get_profile_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in achievements handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

@router.message(F.text == "üíå –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫")
async def show_feedback(message: Message):
    try:
        logger.info(f"User {message.from_user.id} accessed feedback")
        await message.answer(
            "üíå –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫:\n\n"
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –≤–∞—à—ñ –≤—ñ–¥–≥—É–∫–∏ —Ç–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó.",
            reply_markup=get_profile_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in feedback handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

# Additional handlers...
