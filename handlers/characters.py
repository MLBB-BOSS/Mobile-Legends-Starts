from aiogram import Router, F
from aiogram.types import Message
from keyboards.characters_menu import get_characters_keyboard
from keyboards.navigation_menu import get_navigation_keyboard
import logging

logger = logging.getLogger(__name__)
router = Router()

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —Ç–∏–ø—ñ–≤ –≥–µ—Ä–æ—ó–≤
@router.message(F.text.in_({"üó°Ô∏è –ë—ñ–π—Ü—ñ", "üèπ –°—Ç—Ä—ñ–ª—å—Ü—ñ", "üîÆ –ú–∞–≥–∏", "üõ°Ô∏è –¢–∞–Ω–∫–∏", "üè• –°–∞–ø–ø–æ—Ä—Ç–∏", "üó≤ –ì—ñ–±—Ä–∏–¥–∏"}))
async def show_heroes_by_type(message: Message):
    try:
        hero_type = message.text
        logger.info(f"User {message.from_user.id} selected hero type: {hero_type}")
        
        hero_descriptions = {
            "üó°Ô∏è –ë—ñ–π—Ü—ñ": "–°–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è –Ω–∞ –±–ª–∏–∑—å–∫–æ–º—É –±–æ—é —Ç–∞ –∑–∞–≤–¥–∞–Ω–Ω—ñ –≤–∏—Å–æ–∫–æ—ó —à–∫–æ–¥–∏.",
            "üèπ –°—Ç—Ä—ñ–ª—å—Ü—ñ": "–ó–∞–≤–¥–∞—é—Ç—å –≤–∏—Å–æ–∫–æ—ó —à–∫–æ–¥–∏ –∑ –¥–∞–ª—å–Ω—å–æ—ó –¥–∏—Å—Ç–∞–Ω—Ü—ñ—ó.",
            "üîÆ –ú–∞–≥–∏": "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –º–∞–≥—ñ—á–Ω—ñ –∑–¥—ñ–±–Ω–æ—Å—Ç—ñ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é —Ç–∞ –∑–Ω–∏—â–µ–Ω–Ω—è.",
            "üõ°Ô∏è –¢–∞–Ω–∫–∏": "–í–∏—Ç—Ä–∏–≤–∞–ª—ñ –≥–µ—Ä–æ—ó, —â–æ –∑–∞—Ö–∏—â–∞—é—Ç—å –∫–æ–º–∞–Ω–¥—É.",
            "üè• –°–∞–ø–ø–æ—Ä—Ç–∏": "–î–æ–ø–æ–º–∞–≥–∞—é—Ç—å –∫–æ–º–∞–Ω–¥—ñ —Ö—ñ–ª–æ–º —Ç–∞ –±–∞—Ñ—Ñ–∞–º–∏.",
            "üó≤ –ì—ñ–±—Ä–∏–¥–∏": "–ü–æ—î–¥–Ω—É—é—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ä—ñ–∑–Ω–∏—Ö –∫–ª–∞—Å—ñ–≤."
        }
        
        await message.answer(
            f"{hero_type}\n\n{hero_descriptions[hero_type]}\n\n–†–æ–∑–¥—ñ–ª —É —Ä–æ–∑—Ä–æ–±—Ü—ñ. –°–∫–æ—Ä–æ —Ç—É—Ç –∑'—è–≤–∏—Ç—å—Å—è —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤.",
            reply_markup=get_characters_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in hero type handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

@router.message(F.text == "üîô –ù–∞–∑–∞–¥ –¥–æ –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó")
async def return_to_navigation(message: Message):
    try:
        logger.info(f"User {message.from_user.id} returned to navigation menu")
        await message.answer(
            "–ú–µ–Ω—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:",
            reply_markup=get_navigation_keyboard()
        )
    except Exception as e:
        logger.error(f"Error in return to navigation handler: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
