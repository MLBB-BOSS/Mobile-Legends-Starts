import logging
from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext

from keyboards.inline_menus import get_generic_inline_keyboard, get_main_menu
from texts import (
    GENERIC_ERROR_MESSAGE_TEXT,
    UNHANDLED_INLINE_BUTTON_TEXT,
    MAIN_MENU_TEXT,
    MAIN_MENU_DESCRIPTION
)
from handlers.base import MenuStates

logger = logging.getLogger(__name__)
router = Router()

@router.callback_query(F.data.in_(["menu1", "menu2", "menu_back"]))
async def handle_inline_buttons(callback: CallbackQuery, state: FSMContext, bot: Bot):
    data = callback.data
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {callback.from_user.id} –Ω–∞—Ç–∏—Å–Ω—É–≤ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É: {data}")

    # –û—Ç—Ä–∏–º—É—î–º–æ interactive_message_id –∑ —Å—Ç–∞–Ω—É
    state_data = await state.get_data()
    interactive_message_id = state_data.get('interactive_message_id')

    if not interactive_message_id:
        logger.error("interactive_message_id –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        await callback.answer(GENERIC_ERROR_MESSAGE_TEXT)
        return

    if data == "menu_back":
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        try:
            await bot.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=interactive_message_id,
                text=MAIN_MENU_DESCRIPTION,
                reply_markup=get_generic_inline_keyboard()
            )
            logger.info("–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ")
        except Exception as e:
            logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
            interactive_message = await bot.send_message(
                chat_id=callback.message.chat.id,
                text=MAIN_MENU_DESCRIPTION,
                reply_markup=get_generic_inline_keyboard()
            )
            await state.update_data(interactive_message_id=interactive_message.message_id)

        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ MAIN_MENU
        await state.set_state(MenuStates.MAIN_MENU)
        await callback.answer("üîô –í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")
    elif data in ["menu1", "menu2"]:
        # –û–±—Ä–æ–±–∫–∞ —ñ–Ω—à–∏—Ö –º–µ–Ω—é
        if data == "menu1":
            await callback.answer("–í–∏ –æ–±—Ä–∞–ª–∏ –ú–µ–Ω—é 1")
            # –î–æ–¥–∞–π—Ç–µ –ª–æ–≥—ñ–∫—É –¥–ª—è –ú–µ–Ω—é 1
        elif data == "menu2":
            await callback.answer("–í–∏ –æ–±—Ä–∞–ª–∏ –ú–µ–Ω—é 2")
            # –î–æ–¥–∞–π—Ç–µ –ª–æ–≥—ñ–∫—É –¥–ª—è –ú–µ–Ω—é 2
    else:
        # –ù–µ–æ–±—Ä–æ–±–ª–µ–Ω—ñ –∫–Ω–æ–ø–∫–∏
        await callback.answer(UNHANDLED_INLINE_BUTTON_TEXT)
