from aiogram import Router, types
from utils.visual_utils import (
    generate_matplotlib_bar_chart,
    generate_seaborn_scatter_plot,
    generate_plotly_pie_chart,
    format_table_with_rich
)
import seaborn as sns

router = Router()

@router.message(commands=["plot"])
async def cmd_plot(message: types.Message):
    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Matplotlib –≥—Ä–∞—Ñ—ñ–∫–∞
    matches = ['–ú–∞—á 1', '–ú–∞—á 2', '–ú–∞—á 3', '–ú–∞—á 4', '–ú–∞—á 5']
    wins = [1, 0, 1, 1, 0]
    buf_matplotlib = generate_matplotlib_bar_chart(matches, wins)
    await message.answer_photo(photo=buf_matplotlib, caption="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ü–µ—Ä–µ–º–æ–≥")

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Seaborn –≥—Ä–∞—Ñ—ñ–∫–∞
    data = sns.load_dataset("tips")
    buf_seaborn = generate_seaborn_scatter_plot(data)
    await message.answer_photo(photo=buf_seaborn, caption="üìâ –í—ñ–¥–Ω–æ—à–µ–Ω–Ω—è –ß–µ–∫—É –¥–æ –ß–∞—é")

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Plotly –≥—Ä–∞—Ñ—ñ–∫–∞
    labels = ['–ê—Ç–∞–∫–∞', '–ó–∞—Ö–∏—Å—Ç', '–ú–∞–≥—ñ—è', '–õ—ñ–∫—É–≤–∞–Ω–Ω—è']
    values = [55, 20, 15, 10]
    buf_plotly = generate_plotly_pie_chart(labels, values)
    await message.answer_photo(photo=buf_plotly, caption="üìà –†–æ–∑–ø–æ–¥—ñ–ª –ù–∞–≤–∏—á–æ–∫")

@router.message(commands=["table"])
async def cmd_table(message: types.Message):
    # –î–∞–Ω—ñ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ñ
    data = [
        ["–ú–∞—á 1", "–ü–µ—Ä–µ–º–æ–≥–∞"],
        ["–ú–∞—á 2", "–ü–æ—Ä–∞–∑–∫–∞"],
        ["–ú–∞—á 3", "–ü–µ—Ä–µ–º–æ–≥–∞"],
        ["–ú–∞—á 4", "–ü–µ—Ä–µ–º–æ–≥–∞"],
        ["–ú–∞—á 5", "–ü–æ—Ä–∞–∑–∫–∞"]
    ]
    headers = ["–ú–∞—Ç—á", "–†–µ–∑—É–ª—å—Ç–∞—Ç"]
    
    # –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º Rich
    formatted_table = format_table_with_rich(data, headers)
    await message.answer(f"üìã <b>–¢–∞–±–ª–∏—Ü—è –†–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤:</b>\n<code>{formatted_table}</code>", parse_mode='HTML')
