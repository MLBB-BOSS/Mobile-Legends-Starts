# handlers/profile.py
from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from services.user_service import get_or_create_user
from sqlalchemy.ext.asyncio import AsyncSession
from utils.charts import generate_rating_chart
from models.user_stats import UserStats
import logging

profile_router = Router()
logger = logging.getLogger(__name__)

@profile_router.message(Command("profile"))
async def show_profile(message: types.Message, db: AsyncSession):
    user_id = message.from_user.id
    username = message.from_user.username or "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"

    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user = await get_or_create_user(db, telegram_id=user_id, username=username)
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        stats = user.stats
        if not stats:
            # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, —è–∫—â–æ —ó—ó –Ω–µ–º–∞—î
            stats = UserStats(user_id=user.id, rating=100, achievements_count=0)
            db.add(stats)
            await db.commit()
            await db.refresh(stats)
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–µ–π—Ç–∏–Ω–≥—É (–∑–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ)
        rating_history = [stats.rating]  # –¢—É—Ç –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ä–µ–∞–ª—å–Ω—ñ —ñ—Å—Ç–æ—Ä–∏—á–Ω—ñ –¥–∞–Ω—ñ
        
        if not rating_history:
            rating_history = [stats.rating]  # –í–ø–µ–≤–Ω—ñ—Ç—å—Å—è, —â–æ —î —Ö–æ—á–∞ –± –æ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
        
        # –ì–µ–Ω–µ—Ä—É—î–º–æ –≥—Ä–∞—Ñ—ñ–∫ —Ä–µ–π—Ç–∏–Ω–≥—É
        chart = generate_rating_chart(rating_history)
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ—Ñ—ñ–ª—é
        profile_text = (
            f"üë§ <b>–í–∞—à –ü—Ä–æ—Ñ—ñ–ª—å:</b>\n\n"
            f"‚Ä¢ –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: @{user.username}\n"
            f"‚Ä¢ –†—ñ–≤–µ–Ω—å: {user.level}\n"
            f"‚Ä¢ –°–∫—Ä–∏–Ω—à–æ—Ç—ñ–≤: {user.screenshot_count}\n"
            f"‚Ä¢ –ú—ñ—Å—ñ–π: {user.mission_count}\n"
            f"‚Ä¢ –í—ñ–∫—Ç–æ—Ä–∏–Ω: {user.quiz_count}\n\n"
            f"üìà <b>–†–µ–π—Ç–∏–Ω–≥:</b> {stats.rating}\n"
            f"üéØ <b>–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è:</b> {stats.achievements_count} –¥–æ—Å—è–≥–Ω–µ–Ω—å\n"
        )
        
        # –î–æ–¥–∞—î–º–æ –±–µ–π–¥–∂—ñ
        if user.badges:
            profile_text += "\nüéñ <b>–û—Ç—Ä–∏–º–∞–Ω—ñ –ë–µ–π–¥–∂—ñ:</b>\n"
            for badge in user.badges:
                desc = (badge.description or "").replace('<', '&lt;').replace('>', '&gt;')
                profile_text += f"‚Ä¢ {badge.name} - {desc}\n"
        else:
            profile_text += "\nüéñ –û—Ç—Ä–∏–º–∞–Ω—ñ –ë–µ–π–¥–∂—ñ: –ù–µ–º–∞—î\n"
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
        inline_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üîÑ –û–Ω–æ–≤–∏—Ç–∏ –ë–µ–π–¥–∂—ñ", callback_data="update_badges"),
                InlineKeyboardButton(text="üéñ –î–æ—à–∫–∞ –ù–∞–≥–æ—Ä–æ–¥", callback_data="show_award_board")
            ],
            [
                InlineKeyboardButton(text="üîÑ –û–Ω–æ–≤–∏—Ç–∏ ID", callback_data="update_player_id"),
                InlineKeyboardButton(text="üìú –Ü—Å—Ç–æ—Ä—ñ—è", callback_data="show_activity_history")
            ],
            [
                InlineKeyboardButton(text="üíå –ó–∞–ø—Ä–æ—Å–∏—Ç–∏ –î—Ä—É–∑—ñ–≤", callback_data="invite_friends"),
                InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
            ]
        ])
        
        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –≥—Ä–∞—Ñ—ñ–∫–æ–º —Ç–∞ —Ç–µ–∫—Å—Ç–æ–º –ø—Ä–æ—Ñ—ñ–ª—é —è–∫ –ø—ñ–¥–ø–∏—Å–æ–º
        await message.answer_photo(
            photo=chart,
            caption=profile_text,
            parse_mode="HTML",
            reply_markup=inline_keyboard
        )
        
    except Exception as e:
        logger.error(f"Error in show_profile handler: {e}")
        await message.answer("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")