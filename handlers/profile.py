from PIL import Image, ImageDraw, ImageFont
from io import BytesIO
import matplotlib.pyplot as plt
from aiogram.types import Message, BufferedInputFile
from aiogram import Router
from aiogram.filters import Command
import logging

profile_router = Router()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
async def generate_detailed_profile(username, fullname, level, activity, rating, matches, wins, losses):
    # –ü–æ–ª–æ—Ç–Ω–æ 9:16
    width, height = 1080, 1920
    img = Image.new("RGB", (width, height), "#0F0F0F")  # –ß–æ—Ä–Ω–∏–π —Ñ–æ–Ω
    draw = ImageDraw.Draw(img)

    # –®—Ä–∏—Ñ—Ç–∏
    try:
        title_font = ImageFont.truetype("arial.ttf", 60)
        content_font = ImageFont.truetype("arial.ttf", 40)
        small_font = ImageFont.truetype("arial.ttf", 30)
    except:
        title_font = content_font = small_font = ImageFont.load_default()

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    draw.text((50, 30), "üéÆ –ü—Ä–æ—Ñ—ñ–ª—å –ì—Ä–∞–≤—Ü—è", fill="#FFD700", font=title_font)

    # –ë–ª–æ–∫ –∑–∞–≥–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
    draw.rectangle([50, 120, width - 50, 400], outline="#007BFF", width=5, fill="#1E1E2E")
    draw.text((70, 150), f"üë§ –ù—ñ–∫–Ω–µ–π–º: @{username}", fill="#00CFFF", font=content_font)
    draw.text((70, 220), f"üìù –Ü–º'—è: {fullname}", fill="#FFFFFF", font=content_font)
    draw.text((70, 290), f"‚≠ê –†—ñ–≤–µ–Ω—å: {level}   üî• –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å: {activity}%", fill="#FFD700", font=content_font)

    # –ë–ª–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    draw.rectangle([50, 450, width - 50, 700], outline="#28A745", width=5, fill="#1E1E2E")
    draw.text((70, 480), f"üöÄ –†–µ–π—Ç–∏–Ω–≥: {rating}", fill="#FFD700", font=content_font)
    draw.text((70, 550), f"üéÆ –ú–∞—Ç—á—ñ: {matches}", fill="#FFFFFF", font=content_font)
    draw.text((500, 550), f"üèÜ –ü–µ—Ä–µ–º–æ–≥–∏: {wins}", fill="#28A745", font=content_font)
    draw.text((800, 550), f"‚ùå –ü–æ—Ä–∞–∑–∫–∏: {losses}", fill="#DC3545", font=content_font)

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≥—Ä–∞—Ñ—ñ–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
    fig, ax = plt.subplots(figsize=(5, 3), facecolor="#0F0F0F")
    ax.plot([1, 2, 3, 4, 5], [activity, 50, 60, 70, 80], color="#00CFFF", linewidth=4, marker="o")
    ax.set_title("üìà –ì—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ", fontsize=14, color="white")
    ax.tick_params(colors="white")
    ax.grid(color="#333333")
    for spine in ax.spines.values():
        spine.set_edgecolor("#444444")
    buf = BytesIO()
    plt.savefig(buf, format="PNG", transparent=True)
    plt.close(fig)

    # –í—Å—Ç–∞–≤–ª–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞
    graph = Image.open(buf).resize((900, 500))
    img.paste(graph, (90, 750), mask=graph)

    # –ü—ñ–¥—Å—É–º–æ–∫
    draw.text((50, 1300), "üéØ –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å –∑—Ä–æ—Å—Ç–∞—î! –ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤ —Ç–æ–º—É –∂ –¥—É—Å—ñ!", fill="#FFFFFF", font=small_font)

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É –±—É—Ñ–µ—Ä
    output = BytesIO()
    img.save(output, format="PNG")
    output.seek(0)
    return output

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /profile
@profile_router.message(Command("profile"))
async def show_profile(message: Message):
    try:
        username = message.from_user.username or "Unknown"
        fullname = "–Ü–≤–∞–Ω –Ü–≤–∞–Ω–æ–≤"
        level = 15
        activity = 87
        rating = 1200
        matches = 45
        wins = 30
        losses = 15

        profile_image = await generate_detailed_profile(username, fullname, level, activity, rating, matches, wins, losses)

        input_file = BufferedInputFile(profile_image.read(), filename="profile.png")
        await message.answer_photo(photo=input_file, caption="üñº –î–µ—Ç–∞–ª—å–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å")
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ —É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é: {e}")
        await message.answer("‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é.")