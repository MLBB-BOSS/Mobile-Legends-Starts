from aiogram import Router, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import matplotlib.pyplot as plt
import io

router = Router()

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –ø—Ä–æ—Ñ—ñ–ª—é
def profile_inline_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton("üìä –ó–∞–≥–∞–ª—å–Ω–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="general_stats")],
        [InlineKeyboardButton("üìà –ì—Ä–∞—Ñ—ñ–∫ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ", callback_data="activity_chart")],
        [InlineKeyboardButton("üîÑ –û–Ω–æ–≤–∏—Ç–∏", callback_data="refresh_profile")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ])

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å"
@router.message(lambda message: message.text == "üë§ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å")
async def show_profile(message: types.Message):
    await message.delete()
    await message.answer("üîç *–í–∞—à –ü—Ä–æ—Ñ—ñ–ª—å:*\n\n–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...", 
                         reply_markup=profile_inline_menu(), parse_mode="Markdown")

# –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
@router.callback_query(lambda c: c.data == "general_stats")
async def show_general_stats(callback: types.CallbackQuery):
    text = (
        "üìä *–ó–∞–≥–∞–ª—å–Ω–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"
        "- üß© –í—ñ–∫—Ç–æ—Ä–∏–Ω–∏: 10\n"
        "- üéØ –ú—ñ—Å—ñ—ó: 20\n"
        "- üèÜ –†–µ–π—Ç–∏–Ω–≥: –¢–æ–ø-25\n"
        "- üí¨ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: 250"
    )
    await callback.message.edit_text(text, reply_markup=profile_inline_menu(), parse_mode="Markdown")

# –ì—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
@router.callback_query(lambda c: c.data == "activity_chart")
async def send_activity_chart(callback: types.CallbackQuery):
    x = [1, 2, 3, 4, 5]
    y = [100, 120, 160, 200, 220]

    plt.plot(x, y, marker="o", color="b")
    plt.title("–ì—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ")
    plt.xlabel("–°–µ–∞–Ω—Å")
    plt.ylabel("–†–µ–π—Ç–∏–Ω–≥")
    plt.grid()

    buffer = io.BytesIO()
    plt.savefig(buffer, format="png")
    buffer.seek(0)
    plt.close()

    await callback.message.answer_photo(photo=buffer, caption="üìà –í–∞—à –≥—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ", 
                                        reply_markup=profile_inline_menu())

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
@router.callback_query(lambda c: c.data == "refresh_profile")
async def refresh_profile(callback: types.CallbackQuery):
    await callback.answer("üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö...")
    await show_profile(callback.message)
