# file: handlers/profile.py

from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message, BufferedInputFile
from io import BytesIO
from PIL import Image, ImageDraw, ImageFont
import logging

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Router
profile_router = Router()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
async def generate_profile_image(username, rating, matches, wins, losses):
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è 600x400 –∑ –±—ñ–ª–∏–º —Ñ–æ–Ω–æ–º
    img = Image.new("RGB", (600, 400), "white")
    draw = ImageDraw.Draw(img)

    # –®—Ä–∏—Ñ—Ç–∏ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Å–≤—ñ–π —à—Ä–∏—Ñ—Ç, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, Arial)
    try:
        title_font = ImageFont.truetype("arial.ttf", 28)
        content_font = ImageFont.truetype("arial.ttf", 22)
    except:
        title_font = content_font = ImageFont.load_default()

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    draw.text((20, 20), "üîç –í–∞—à –ü—Ä–æ—Ñ—ñ–ª—å", fill="black", font=title_font)

    # –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    draw.text((20, 80), f"üë§ –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: @{username}", fill="blue", font=content_font)
    draw.text((20, 120), f"üöÄ –†–µ–π—Ç–∏–Ω–≥: {rating}", fill="black", font=content_font)
    draw.text((20, 160), f"üéÆ –ú–∞—Ç—á—ñ: {matches}", fill="black", font=content_font)
    draw.text((20, 200), f"üèÜ –ü–µ—Ä–µ–º–æ–≥–∏: {wins}", fill="green", font=content_font)
    draw.text((20, 240), f"‚ùå –ü–æ—Ä–∞–∑–∫–∏: {losses}", fill="red", font=content_font)

    # –ù–∏–∂–Ω—ñ–π –ø—ñ–¥—Å—É–º–∫–æ–≤–∏–π —Ç–µ–∫—Å—Ç
    draw.text((20, 340), "üïí –û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: 2024-12-15 08:11:39", fill="gray", font=content_font)

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É –ø–∞–º'—è—Ç—å
    buf = BytesIO()
    img.save(buf, format="PNG")
    buf.seek(0)
    return buf

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /profile
@profile_router.message(Command("profile"))
async def show_profile(message: Message):
    try:
        # –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        username = message.from_user.username or "–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á"
        rating = 100
        matches = 10
        wins = 7
        losses = 3

        # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
        profile_img = await generate_profile_image(username, rating, matches, wins, losses)

        # –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        input_file = BufferedInputFile(profile_img.read(), filename="profile.png")

        # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –ø—ñ–¥–ø–∏—Å–æ–º
        await message.answer_photo(photo=input_file, caption="üñº <b>–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å</b>", parse_mode="HTML")
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é: {e}")
        await message.answer("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é.")