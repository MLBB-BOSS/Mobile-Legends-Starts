from PIL import Image, ImageDraw, ImageFont
from io import BytesIO
import matplotlib.pyplot as plt

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é
async def generate_custom_profile(username: str, rating: int, matches: int, wins: int, losses: int):
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ–æ–Ω—É
    img = Image.new("RGB", (800, 1000), "#f8f9fa")  # –°–≤—ñ—Ç–ª–æ-—Å—ñ—Ä–∏–π —Ñ–æ–Ω
    draw = ImageDraw.Draw(img)

    # –®—Ä–∏—Ñ—Ç–∏
    try:
        title_font = ImageFont.truetype("arial.ttf", 40)
        content_font = ImageFont.truetype("arial.ttf", 28)
    except:
        title_font = content_font = ImageFont.load_default()

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    draw.text((50, 30), "üîç –ü—Ä–æ—Ñ—ñ–ª—å –ì—Ä–∞–≤—Ü—è", fill="#333333", font=title_font)

    # –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    y_offset = 150
    spacing = 70
    draw.text((50, y_offset), f"üë§ –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: @{username}", fill="#007BFF", font=content_font)
    draw.text((50, y_offset + spacing), f"üöÄ –†–µ–π—Ç–∏–Ω–≥: {rating}", fill="#212529", font=content_font)
    draw.text((50, y_offset + 2 * spacing), f"üéÆ –ú–∞—Ç—á—ñ: {matches}", fill="#212529", font=content_font)
    draw.text((50, y_offset + 3 * spacing), f"üèÜ –ü–µ—Ä–µ–º–æ–≥–∏: {wins}", fill="#28A745", font=content_font)
    draw.text((50, y_offset + 4 * spacing), f"‚ùå –ü–æ—Ä–∞–∑–∫–∏: {losses}", fill="#DC3545", font=content_font)

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≥—Ä–∞—Ñ—ñ–∫—É
    fig, ax = plt.subplots(figsize=(5, 3), facecolor="#f8f9fa")
    ax.plot([10, 20, 30, 40, 50], [5, 15, 25, 10, 30], color="#007BFF", linewidth=3, marker="o")
    ax.set_title("–ì—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ", fontsize=10, color="#333333")
    ax.grid(True, color="#DDDDDD")
    buf = BytesIO()
    plt.savefig(buf, format="PNG", transparent=True)
    plt.close(fig)

    # –í—Å—Ç–∞–≤–∫–∞ –≥—Ä–∞—Ñ—ñ–∫—É —É –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    graph = Image.open(buf).resize((500, 300))
    img.paste(graph, (150, y_offset + 5 * spacing))

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É –±—É—Ñ–µ—Ä
    output = BytesIO()
    img.save(output, format="PNG")
    output.seek(0)
    return output

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∫–ª–∏–∫—É —É –±–æ—Ç—ñ
@profile_router.message(Command("profile"))
async def show_profile(message: Message):
    username = message.from_user.username or "Unknown"
    profile_image = await generate_custom_profile(username, 100, 20, 15, 5)

    input_file = BufferedInputFile(profile_image.read(), filename="profile.png")
    await message.answer_photo(photo=input_file, caption="üñº –í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å")