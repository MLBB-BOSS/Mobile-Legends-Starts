from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message, BufferedInputFile
from sqlalchemy.ext.asyncio import AsyncSession
from utils.charts import generate_rating_chart
from services.user_service import get_user_profile_text, update_mlbb_id
import logging

profile_router = Router()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)

@profile_router.message(Command("profile"))
async def show_profile(message: Message, db: AsyncSession):
    """–ü–æ–∫–∞–∑—É—î –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –≥—Ä–∞—Ñ—ñ–∫–æ–º —Ä–µ–π—Ç–∏–Ω–≥—É."""
    user_id = message.from_user.id
    logger.info(f"Fetching profile for user {user_id}")

    try:
        profile_text = await get_user_profile_text(db, user_id)
    except Exception as e:
        logger.error(f"Error fetching profile for user {user_id}: {e}")
        await message.answer("‚ùó –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
        return

    if not profile_text:
        profile_text = "üîé <b>–ü—Ä–æ—Ñ—ñ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ —â–µ –Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ.</b>"

    try:
        chart_bytes = generate_rating_chart([100, 120, 140, 180, 210, 230])
        input_file = BufferedInputFile(chart_bytes.getvalue(), filename='rating_chart.png')
        await message.answer_photo(photo=input_file, caption=profile_text)
        logger.info(f"Profile sent successfully to user {user_id}")
    except Exception as e:
        logger.error(f"Failed to generate/send chart for user {user_id}: {e}")
        await message.answer("‚ùó –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≥—Ä–∞—Ñ—ñ–∫—É.")

@profile_router.message(Command("add_mlbb"))
async def add_mlbb_id(message: Message, db: AsyncSession):
    """–î–æ–¥–∞—î –∞–±–æ –æ–Ω–æ–≤–ª—é—î MLBB ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
    user_id = message.from_user.id
    args = message.get_args()

    if not args.isdigit() or len(args) > 10:
        await message.answer("üö® –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π MLBB ID. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —Ü–µ —á–∏—Å–ª–æ–≤–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–æ 10 —Ü–∏—Ñ—Ä.")
        return

    try:
        response = await update_mlbb_id(db, user_id, args)
        await message.answer(response)
        logger.info(f"MLBB ID updated for user {user_id}")
    except Exception as e:
        logger.error(f"Failed to update MLBB ID for user {user_id}: {e}")
        await message.answer("‚ùó –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ MLBB ID.")
