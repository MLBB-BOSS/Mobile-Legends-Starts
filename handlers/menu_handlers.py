from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from keyboards import NavigationMenu, ProfileMenu
import logging

router = Router()
logger = logging.getLogger(__name__)

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä—à–æ–≥–æ —Ä—ñ–≤–Ω—è
@router.message(F.text == "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è")
async def show_navigation_menu(message: Message):
    try:
        keyboard = NavigationMenu.get_navigation_menu()
        await message.answer(
            "–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:",
            reply_markup=keyboard
        )
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ –º–µ–Ω—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó: {e}")
        await message.answer("–í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞.")

@router.message(F.text == "ü™ß –ú—ñ–π –ö–∞–±—ñ–Ω–µ—Ç")
async def show_profile_menu(message: Message):
    try:
        keyboard = ProfileMenu.get_profile_menu()
        await message.answer(
            "–í–∞—à –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç:",
            reply_markup=keyboard
        )
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ –æ—Å–æ–±–∏—Å—Ç–æ–≥–æ –∫–∞–±—ñ–Ω–µ—Ç—É: {e}")
        await message.answer("–í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞.")

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–æ–≥–æ –º–µ–Ω—é
@router.callback_query(F.data == "guides")
async def show_guides(callback: CallbackQuery):
    await callback.answer("–†–æ–∑–¥—ñ–ª –≥–∞–π–¥—ñ–≤ —É —Ä–æ–∑—Ä–æ–±—Ü—ñ")

@router.callback_query(F.data == "heroes")
async def show_heroes(callback: CallbackQuery):
    await callback.answer("–†–æ–∑–¥—ñ–ª –≥–µ—Ä–æ—ó–≤ —É —Ä–æ–∑—Ä–æ–±—Ü—ñ")

@router.callback_query(F.data == "counter_picks")
async def show_counter_picks(callback: CallbackQuery):
    await callback.answer("–†–æ–∑–¥—ñ–ª –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤ —É —Ä–æ–∑—Ä–æ–±—Ü—ñ")

@router.callback_query(F.data == "builds")
async def show_builds(callback: CallbackQuery):
    await callback.answer("–†–æ–∑–¥—ñ–ª –∑–±—ñ—Ä–æ–∫ —É —Ä–æ–∑—Ä–æ–±—Ü—ñ")

@router.callback_query(F.data == "voting")
async def show_voting(callback: CallbackQuery):
    await callback.answer("–†–æ–∑–¥—ñ–ª –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è —É —Ä–æ–∑—Ä–æ–±—Ü—ñ")

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –æ—Å–æ–±–∏—Å—Ç–æ–≥–æ –∫–∞–±—ñ–Ω–µ—Ç—É
@router.callback_query(F.data == "statistics")
async def show_statistics(callback: CallbackQuery):
    await callback.answer("–†–æ–∑–¥—ñ–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É —Ä–æ–∑—Ä–æ–±—Ü—ñ")

@router.callback_query(F.data == "achievements")
async def show_achievements(callback: CallbackQuery):
    await callback.answer("–†–æ–∑–¥—ñ–ª –¥–æ—Å—è–≥–Ω–µ–Ω—å —É —Ä–æ–∑—Ä–æ–±—Ü—ñ")

@router.callback_query(F.data == "settings")
async def show_settings(callback: CallbackQuery):
    await callback.answer("–†–æ–∑–¥—ñ–ª –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —É —Ä–æ–∑—Ä–æ–±—Ü—ñ")

# –ó–∞–≥–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@router.callback_query(F.data == "back_to_main")
async def back_to_main_menu(callback: CallbackQuery):
    try:
        await callback.message.delete()  # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ inline –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
        await callback.message.answer(
            "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:",
            reply_markup=MainMenu.get_main_menu()
        )
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é: {e}")
        await callback.answer("–í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞")
