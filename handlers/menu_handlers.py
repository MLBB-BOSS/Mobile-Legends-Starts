# –®–ª—è—Ö: handlers/menu_handlers.py
# –¶–µ–π —Ñ–∞–π–ª –º—ñ—Å—Ç–∏—Ç—å –≤—Å—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –º–µ–Ω—é
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from typing import Optional
import logging

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–∞—à—ñ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
from keyboards.main_menu import MainMenu

# –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)

# –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–æ—É—Ç–µ—Ä –¥–ª—è –º–µ–Ω—é
router = Router(name="menu_router")

# –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞—Å –¥–ª—è —Å—Ç–∞–Ω—ñ–≤ –º–µ–Ω—é
class MenuStates(StatesGroup):
    main = State()
    heroes = State()
    builds = State()
    guides = State()
    statistics = State()
    profile = State()
    settings = State()

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /menu
@router.message(Command("menu"))
@router.message(F.text == "üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é")
async def show_main_menu(message: Message, state: FSMContext):
    """–ü–æ–∫–∞–∑—É—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"""
    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        menu = MainMenu()
        # –û—Ç—Ä–∏–º—É—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É —Ç–∞ —Ç–µ–∫—Å—Ç
        keyboard = await menu.get_keyboard()
        text = await menu.get_text()
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        await state.set_state(MenuStates.main)
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –º–µ–Ω—é
        await message.answer(text, reply_markup=keyboard)
        logger.info(f"–ü–æ–∫–∞–∑–∞–Ω–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {message.from_user.id}")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é: {e}")
        await message.answer("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
@router.callback_query(F.data.startswith("menu_"))
async def handle_menu_navigation(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é –ø–æ –º–µ–Ω—é"""
    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ –Ω–∞–∑–≤—É —Ä–æ–∑–¥—ñ–ª—É –º–µ–Ω—é –∑ callback_data
        section = callback.data.split('_')[1]
        await callback.answer(f"–†–æ–∑–¥—ñ–ª {section} –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ!")
        
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {callback.from_user.id} –Ω–∞–º–∞–≥–∞–≤—Å—è –ø–µ—Ä–µ–π—Ç–∏ –¥–æ —Ä–æ–∑–¥—ñ–ª—É {section}")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –ø–æ –º–µ–Ω—é: {e}")
        await callback.answer("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.", show_alert=True)
