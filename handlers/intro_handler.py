from aiogram import Router
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from keyboards.inline_menus import (
    get_intro_page_1_keyboard,
    get_intro_page_2_keyboard,
    get_intro_page_3_keyboard,
    get_main_menu_keyboard,
)

router = Router()

@router.callback_query(lambda callback: callback.data == "intro_page_2")
async def intro_page_2(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –¥—Ä—É–≥–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —ñ–Ω—Ç—Ä–æ.
    """
    await callback.message.edit_text(
        text="üõ†Ô∏è –¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º:\n\n"
             "‚Ä¢ üìä –í—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
             "‚Ä¢ üèÜ –û—Ä–≥–∞–Ω—ñ–∑–æ–≤—É–≤–∞—Ç–∏ —Ç—É—Ä–Ω—ñ—Ä–∏\n"
             "‚Ä¢ ü•∑ –î—ñ–∑–Ω–∞–≤–∞—Ç–∏—Å—å –ø—Ä–æ –≥–µ—Ä–æ—ó–≤\n"
             "‚Ä¢ üìö –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –≥–∞–π–¥–∏ —Ç–∞ –ø–æ—Ä–∞–¥–∏",
        reply_markup=get_intro_page_2_keyboard(),
    )
    await state.set_state("intro_page_2")


@router.callback_query(lambda callback: callback.data == "intro_page_3")
async def intro_page_3(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —Ç—Ä–µ—Ç—å–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —ñ–Ω—Ç—Ä–æ.
    """
    await callback.message.edit_text(
        text="üéÆ –ì–æ—Ç–æ–≤—ñ –ø–æ—á–∞—Ç–∏ –≥—Ä—É?\n\n"
             "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–†–æ–∑–ø–æ—á–∞—Ç–∏¬ª, —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.",
        reply_markup=get_intro_page_3_keyboard(),
    )
    await state.set_state("intro_page_3")


@router.callback_query(lambda callback: callback.data == "intro_finish")
async def complete_intro(callback: CallbackQuery, state: FSMContext):
    """
    –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —ñ–Ω—Ç—Ä–æ.
    """
    await callback.message.edit_text(
        text="üëã –í—ñ—Ç–∞—î–º–æ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é!\n\n"
             "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –Ω–∏–∂—á–µ:",
        reply_markup=get_main_menu_keyboard(),
    )
    await state.set_state("main_menu")
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é, —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–≤–µ—Ä—à–∏–≤ —ñ–Ω—Ç—Ä–æ
    await state.update_data(intro_completed=True)


@router.callback_query(lambda callback: callback.data == "intro_page_1")
async def intro_page_1(callback: CallbackQuery, state: FSMContext):
    """
    –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–µ—Ä—à–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —ñ–Ω—Ç—Ä–æ.
    """
    await callback.message.edit_text(
        text="üëã –í—ñ—Ç–∞—î–º–æ —É –±–æ—Ç—ñ!\n\n"
             "–î–∞–≤–∞–π—Ç–µ –ø–æ—á–Ω–µ–º–æ –∑–Ω–∞–π–æ–º—Å—Ç–≤–æ –∑ –æ—Å–Ω–æ–≤–Ω–∏–º–∏ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏.",
        reply_markup=get_intro_page_1_keyboard(),
    )
    await state.set_state("intro_page_1")
