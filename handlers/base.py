# handlers/base.py

import logging
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from keyboards.menus import (
    MenuButton,
    menu_button_to_class,
    get_main_menu,
    get_navigation_menu,
    get_heroes_menu,
    get_hero_class_menu,
    get_guides_menu,
    get_counter_picks_menu,
    get_builds_menu,
    get_voting_menu,
    get_profile_menu,
    get_statistics_menu,
    get_achievements_menu,
    get_settings_menu,
    get_feedback_menu,
    get_help_menu,
    heroes_by_class,
)
from keyboards.inline_menus import get_generic_inline_keyboard, get_hero_class_inline_keyboard

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)
router = Router()

# –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞–Ω–∏ –º–µ–Ω—é
class MenuStates(StatesGroup):
    MAIN_MENU = State()
    NAVIGATION_MENU = State()
    HEROES_MENU = State()
    HERO_CLASS_MENU = State()
    GUIDES_MENU = State()
    COUNTER_PICKS_MENU = State()
    BUILDS_MENU = State()
    VOTING_MENU = State()
    PROFILE_MENU = State()
    STATISTICS_MENU = State()
    ACHIEVEMENTS_MENU = State()
    SETTINGS_MENU = State()
    FEEDBACK_MENU = State()
    HELP_MENU = State()
    SEARCH_HERO = State()
    CHANGE_USERNAME = State()
    REPORT_BUG = State()
    SEND_FEEDBACK = State()
    SUGGEST_TOPIC = State()

async def send_menu_response(message: Message, description: str, detailed_text: str, reply_markup: types.InlineKeyboardMarkup):
    """
    –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–∞—Ä–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å:
    1. –û–ø–∏—Å –º–µ–Ω—é.
    2. –î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å —Ç–∞ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏.
    """
    await message.answer(
        description,
        parse_mode="HTML"
    )
    await message.answer(
        detailed_text,
        parse_mode="HTML",
        reply_markup=reply_markup
    )

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    user_name = message.from_user.first_name
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –≤–∏–∫–ª–∏–∫–∞–≤ /start")
    await state.set_state(MenuStates.MAIN_MENU)
    
    description = f"üëã <b>–í—ñ—Ç–∞—î–º–æ, {user_name}, —É Mobile Legends Tournament Bot!</b>"
    detailed_text = (
        "üéÆ <b>–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º:</b>\n"
        "‚Ä¢ –û—Ä–≥–∞–Ω—ñ–∑–æ–≤—É–≤–∞—Ç–∏ —Ç—É—Ä–Ω—ñ—Ä–∏\n"
        "‚Ä¢ –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ —Å–∫—Ä—ñ–Ω—à–æ—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤\n"
        "‚Ä¢ –í—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å\n"
        "‚Ä¢ –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è\n\n"
        "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ üëá"
    )
    await send_menu_response(message, description, detailed_text, get_main_menu())
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é - –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
@router.message(MenuStates.MAIN_MENU, F.text == MenuButton.NAVIGATION.value)
async def cmd_navigation(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–∞–≤—ñ–≥–∞—Ü—ñ—é")
    await state.set_state(MenuStates.NAVIGATION_MENU)
    
    description = "üß≠ <b>–ù–∞–≤—ñ–≥–∞—Ü—ñ—è:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É –º–µ–Ω—é –≤–∏ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ —Ä–æ–∑–¥—ñ–ª–∏, —Ç–∞–∫—ñ —è–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ, –ì–∞–π–¥–∏, –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏, –ë—ñ–ª–¥–∏, —Ç–∞ –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è.\n\n"
        "–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ, —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –±—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó."
    )
    await send_menu_response(message, description, detailed_text, get_navigation_menu())
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é - –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å
@router.message(MenuStates.MAIN_MENU, F.text == MenuButton.PROFILE.value)
async def cmd_profile(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å")
    await state.set_state(MenuStates.PROFILE_MENU)
    
    description = "ü™™ <b>–ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —Ç–∞ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Å–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å, –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è, –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ —ñ–Ω—à–µ.\n\n"
        "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –ø—Ä–æ—Ñ—ñ–ª—é –Ω–∏–∂—á–µ –¥–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π."
    )
    await send_menu_response(message, description, detailed_text, get_profile_menu())
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –†–æ–∑–¥—ñ–ª "–ù–∞–≤—ñ–≥–∞—Ü—ñ—è" - –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ
@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.HEROES.value)
async def cmd_heroes(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ")
    await state.set_state(MenuStates.HEROES_MENU)
    
    description = "üõ°Ô∏è <b>–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏ —Ä—ñ–∑–Ω–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ –≥—Ä–∏, –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ó—Ö–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–∞ —ñ–Ω—à—ñ –¥–µ—Ç–∞–ª—ñ.\n\n"
        "–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≥–µ—Ä–æ—è –Ω–∏–∂—á–µ, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤."
    )
    await send_menu_response(message, description, detailed_text, get_heroes_menu())
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –†–æ–∑–¥—ñ–ª "–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ" - –í–∏–±—ñ—Ä –∫–ª–∞—Å—É –≥–µ—Ä–æ—è
@router.message(MenuStates.HEROES_MENU, F.text.in_([
    MenuButton.TANK.value,
    MenuButton.MAGE.value,
    MenuButton.MARKSMAN.value,
    MenuButton.ASSASSIN.value,
    MenuButton.SUPPORT.value,
    MenuButton.FIGHTER.value
]))
async def cmd_hero_class(message: Message, state: FSMContext):
    hero_class = menu_button_to_class.get(message.text)
    if hero_class:
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –∫–ª–∞—Å {hero_class}")
        await state.set_state(MenuStates.HERO_CLASS_MENU)
        await state.update_data(hero_class=hero_class)  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–ª–∞—Å –≥–µ—Ä–æ—è –≤ —Å—Ç–∞–Ω—ñ
        
        description = f"üßô‚Äç‚ôÇÔ∏è <b>{hero_class} –ì–µ—Ä–æ—ó:</b>"
        detailed_text = (
            f"–í–∏–±–µ—Ä—ñ—Ç—å –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É **{hero_class}**, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –π–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–∞ —ñ–Ω—à—ñ –¥–µ—Ç–∞–ª—ñ."
        )
        await send_menu_response(message, description, detailed_text, get_hero_class_inline_keyboard(hero_class))
    else:
        logger.warning(f"–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–ª–∞—Å –≥–µ—Ä–æ—ó–≤: {message.text}")
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ, —â–æ–± –æ–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–ø—Ü—ñ—ó."
        )
        await send_menu_response(message, description, detailed_text, get_heroes_menu())
        
        # –î–æ–¥–∞—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
        await message.answer(
            "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
            reply_markup=get_generic_inline_keyboard()
        )

# –†–æ–∑–¥—ñ–ª "–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ" - –ü–æ—à—É–∫ –≥–µ—Ä–æ—è
@router.message(MenuStates.HEROES_MENU, F.text == MenuButton.SEARCH_HERO.value)
async def cmd_search_hero(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—à—É–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞")
    await state.set_state(MenuStates.SEARCH_HERO)
    
    description = "üîé <b>–ü–æ—à—É–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞:</b>"
    detailed_text = (
        "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –≥–µ—Ä–æ—è, —è–∫–æ–≥–æ –≤–∏ —à—É–∫–∞—î—Ç–µ. –ë–æ—Ç –Ω–∞–¥–∞—Å—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ü—å–æ–≥–æ –≥–µ—Ä–æ—è, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î."
    )
    await send_menu_response(message, description, detailed_text, get_generic_inline_keyboard())
    
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —Å—Ç–∞–Ω—É SEARCH_HERO

# –†–æ–∑–¥—ñ–ª "–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ" - –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
@router.message(MenuStates.HEROES_MENU, F.text == MenuButton.COMPARISON.value)
async def cmd_comparison(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è")
    description = "‚öñÔ∏è <b>–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ì–µ—Ä–æ—ó–≤:</b>"
    detailed_text = (
        "–§—É–Ω–∫—Ü—ñ—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≥–µ—Ä–æ—ó–≤ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ. –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏!"
    )
    await send_menu_response(message, description, detailed_text, get_heroes_menu())
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –†–æ–∑–¥—ñ–ª "–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ" - –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
@router.message(MenuStates.HEROES_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_navigation_from_heroes(message: Message, state: FSMContext):
    await state.set_state(MenuStates.NAVIGATION_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_navigation_menu())
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É
all_heroes = set()
for heroes in heroes_by_class.values():
    all_heroes.update(heroes)

@router.message(MenuStates.HERO_CLASS_MENU, F.text.in_(all_heroes))
async def cmd_select_hero(message: Message, state: FSMContext):
    hero_name = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –≥–µ—Ä–æ—è {hero_name}")
    await state.set_state(MenuStates.MAIN_MENU)
    
    description = f"üéØ <b>{hero_name}:</b>"
    detailed_text = (
        f"–í–∏ –æ–±—Ä–∞–ª–∏ –≥–µ—Ä–æ—è **{hero_name}**. –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥–µ—Ä–æ—è –±—É–¥–µ –¥–æ–¥–∞–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ.\n\n"
        f"–ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–±–æ –æ–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—É –æ–ø—Ü—ñ—é."
    )
    await send_menu_response(message, description, detailed_text, get_main_menu())
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.HERO_CLASS_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_heroes_menu(message: Message, state: FSMContext):
    await state.set_state(MenuStates.HEROES_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≥–µ—Ä–æ—è –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_heroes_menu())
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –†–µ—à—Ç–∞ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω...
# –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —ñ–Ω—à–∏—Ö –º–µ–Ω—é, –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –∫–æ–º–∞–Ω–¥, —Ç–æ—â–æ

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
@router.callback_query(F.data == "button1")
async def handle_button1(call: CallbackQuery, state: FSMContext):
    await call.message.answer("–í–∏ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –Ω–∞ –ö–Ω–æ–ø–∫—É 1")
    await call.answer()

@router.callback_query(F.data == "button2")
async def handle_button2(call: CallbackQuery, state: FSMContext):
    await call.message.answer("–í–∏ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –Ω–∞ –ö–Ω–æ–ø–∫—É 2")
    await call.answer()

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@router.message()
async def unknown_command(message: Message, state: FSMContext):
    logger.warning(f"–ù–µ–≤—ñ–¥–æ–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {message.from_user.id}: {message.text}")
    current_state = await state.get_state()
    
    if current_state == MenuStates.MAIN_MENU.state:
        reply_markup = get_main_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ, —â–æ–± –æ–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–ø—Ü—ñ—ó."
        )
    elif current_state == MenuStates.NAVIGATION_MENU.state:
        reply_markup = get_navigation_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó."
        )
    elif current_state == MenuStates.HEROES_MENU.state:
        reply_markup = get_heroes_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –≥–µ—Ä–æ—ó–≤."
        )
    elif current_state == MenuStates.HERO_CLASS_MENU.state:
        data = await state.get_data()
        hero_class = data.get('hero_class', '–¢–∞–Ω–∫')
        reply_markup = get_hero_class_inline_keyboard(hero_class)
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            f"–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É <b>{hero_class}</b>."
        )
    elif current_state == MenuStates.GUIDES_MENU.state:
        reply_markup = get_guides_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –≥–∞–π–¥—ñ–≤."
        )
    elif current_state == MenuStates.COUNTER_PICKS_MENU.state:
        reply_markup = get_counter_picks_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤."
        )
    elif current_state == MenuStates.BUILDS_MENU.state:
        reply_markup = get_builds_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –±—ñ–ª–¥—ñ–≤."
        )
    elif current_state == MenuStates.VOTING_MENU.state:
        reply_markup = get_voting_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è."
        )
    elif current_state == MenuStates.PROFILE_MENU.state:
        reply_markup = get_profile_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –ø—Ä–æ—Ñ—ñ–ª—é."
        )
    elif current_state == MenuStates.STATISTICS_MENU.state:
        reply_markup = get_statistics_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."
        )
    elif current_state == MenuStates.ACHIEVEMENTS_MENU.state:
        reply_markup = get_achievements_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –¥–æ—Å—è–≥–Ω–µ–Ω—å."
        )
    elif current_state == MenuStates.SETTINGS_MENU.state:
        reply_markup = get_settings_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å."
        )
    elif current_state == MenuStates.FEEDBACK_MENU.state:
        reply_markup = get_feedback_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É."
        )
    elif current_state == MenuStates.HELP_MENU.state:
        reply_markup = get_help_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –¥–æ–ø–æ–º–æ–≥–∏."
        )
    else:
        reply_markup = get_main_menu()
        await state.set_state(MenuStates.MAIN_MENU)
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ, —â–æ–± –æ–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–ø—Ü—ñ—ó."
        )
    
    await message.answer(
        description,
        parse_mode="HTML"
    )
    await message.answer(
        detailed_text,
        parse_mode="HTML",
        reply_markup=reply_markup
    )
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
@router.callback_query(F.data == "button1")
async def handle_button1(call: CallbackQuery, state: FSMContext):
    await call.message.answer("–í–∏ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –Ω–∞ –ö–Ω–æ–ø–∫—É 1")
    await call.answer()

@router.callback_query(F.data == "button2")
async def handle_button2(call: CallbackQuery, state: FSMContext):
    await call.message.answer("–í–∏ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –Ω–∞ –ö–Ω–æ–ø–∫—É 2")
    await call.answer()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
def setup_handlers(dp):
    dp.include_router(router)
