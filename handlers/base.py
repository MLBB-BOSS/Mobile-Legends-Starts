# handlers/base.py

import logging
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from keyboards.menus import (
    MenuButton,
    menu_button_to_class,
    get_main_menu,
    get_navigation_menu,
    get_heroes_menu,
    # get_hero_class_menu,  # –í–∏–¥–∞–ª–µ–Ω–æ
    get_guides_menu,
    get_counter_picks_menu,
    get_builds_menu,
    get_voting_menu,
    get_profile_menu,
    get_statistics_menu,
    get_achievements_menu,
    get_settings_menu,
    get_feedback_menu,
    get_help_menu,
    heroes_by_class,
)
from keyboards.inline_menus import get_generic_inline_keyboard, get_hero_class_inline_keyboard
from utils.message_formatter import MessageFormatter

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)
router = Router()

# –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞–Ω–∏ –º–µ–Ω—é
class MenuStates(StatesGroup):
    MAIN_MENU = State()
    NAVIGATION_MENU = State()
    HEROES_MENU = State()
    HERO_CLASS_MENU = State()
    GUIDES_MENU = State()
    COUNTER_PICKS_MENU = State()
    BUILDS_MENU = State()
    VOTING_MENU = State()
    PROFILE_MENU = State()
    STATISTICS_MENU = State()
    ACHIEVEMENTS_MENU = State()
    SETTINGS_MENU = State()
    FEEDBACK_MENU = State()
    HELP_MENU = State()
    CHANGE_USERNAME = State()
    SEND_FEEDBACK = State()
    REPORT_BUG = State()
    SEARCH_HERO = State()
    # –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ —Å—Ç–∞–Ω–∏ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏

async def send_formatted_menu(message: Message, title: str, description: str, options: list = None, reply_markup=None):
    """
    –ù–∞–¥—Å–∏–ª–∞—î –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ –º–µ–Ω—é
    
    :param message: –û–±'—î–∫—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    :param title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—é
    :param description: –û–ø–∏—Å –º–µ–Ω—é
    :param options: –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
    :param reply_markup: –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
    """
    header, content = MessageFormatter.create_menu_message(title, description, options)
    
    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    await message.answer(text=header, parse_mode="HTML")
    
    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    await message.answer(
        text=content,
        parse_mode="HTML",
        reply_markup=reply_markup
    )

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    user_name = message.from_user.first_name
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –≤–∏–∫–ª–∏–∫–∞–≤ /start")
    await state.set_state(MenuStates.MAIN_MENU)
    
    title = "üëã –í—ñ—Ç–∞—î–º–æ —É Mobile Legends Tournament Bot!"
    description = (
        "üéÆ –¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º:\n"
        "‚Ä¢ –û—Ä–≥–∞–Ω—ñ–∑–æ–≤—É–≤–∞—Ç–∏ —Ç—É—Ä–Ω—ñ—Ä–∏\n"
        "‚Ä¢ –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ —Å–∫—Ä—ñ–Ω—à–æ—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤\n"
        "‚Ä¢ –í—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å\n"
        "‚Ä¢ –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è\n\n"
        "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ üëá"
    )
    options = [
        MenuButton.NAVIGATION.value,
        MenuButton.PROFILE.value
    ]
    await send_formatted_menu(
        message=message,
        title=title,
        description=description,
        options=options,
        reply_markup=get_main_menu()
    )

# ... (—ñ–Ω—à—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω, –æ–∫—Ä—ñ–º —Ç–∏—Ö, —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å get_hero_class_menu)

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@router.message()
async def unknown_command(message: Message, state: FSMContext):
    logger.warning(f"–ù–µ–≤—ñ–¥–æ–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {message.from_user.id}: {message.text}")
    current_state = await state.get_state()
    
    # –í—ñ–¥–ø–æ–≤—ñ–¥—å –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
    if current_state == MenuStates.MAIN_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ, —â–æ–± –æ–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–ø—Ü—ñ—ó."
        options = [
            MenuButton.NAVIGATION.value,
            MenuButton.PROFILE.value
        ]
        reply_markup = get_main_menu()
    elif current_state == MenuStates.NAVIGATION_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó."
        options = [
            MenuButton.HEROES.value,
            MenuButton.GUIDES.value,
            MenuButton.COUNTER_PICKS.value,
            MenuButton.BUILDS.value,
            MenuButton.VOTING.value,
            MenuButton.BACK.value
        ]
        reply_markup = get_navigation_menu()
    elif current_state == MenuStates.HEROES_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –≥–µ—Ä–æ—ó–≤."
        options = [
            "–¢–∞–Ω–∫–∏ - –í–∏—Ç—Ä–∏–≤–∞–ª—ñ –∑–∞—Ö–∏—Å–Ω–∏–∫–∏",
            "–ú–∞–≥–∏ - –ú–∞–π—Å—Ç—Ä–∏ –º–∞–≥—ñ—ó",
            "–°—Ç—Ä—ñ–ª—å—Ü—ñ - –ê—Ç–∞–∫–∞ –∑–¥–∞–ª–µ–∫—É",
            "–ê—Å–∞—Å—ñ–Ω–∏ - –®–≤–∏–¥–∫—ñ –≤–±–∏–≤—Ü—ñ",
            "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ - –î–æ–ø–æ–º–æ–≥–∞ –∫–æ–º–∞–Ω–¥—ñ",
            "–ë—ñ–π—Ü—ñ - –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—ñ –≤–æ—ó–Ω–∏",
            MenuButton.BACK.value
        ]
        reply_markup = get_heroes_menu()
    elif current_state == MenuStates.HERO_CLASS_MENU.state:
        data = await state.get_data()
        hero_class = data.get('hero_class', '–¢–∞–Ω–∫')
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = f"–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É <b>{hero_class}</b>."
        options = heroes_by_class.get(hero_class, []) + [MenuButton.BACK.value]
        reply_markup = get_hero_class_inline_keyboard(hero_class)
    elif current_state == MenuStates.GUIDES_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –≥–∞–π–¥—ñ–≤."
        options = [
            "–ù–æ–≤—ñ –≥–∞–π–¥–∏ - –°–≤—ñ–∂—ñ —Å—Ç–∞—Ç—Ç—ñ",
            "–ü–æ–ø—É–ª—è—Ä–Ω—ñ –≥–∞–π–¥–∏ - –ù–∞–π–∫—Ä–∞—â—ñ –≥–∞–π–¥–∏",
            "–î–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤ - –û—Å–Ω–æ–≤–∏ –≥—Ä–∏",
            "–ü—Ä–æ—Å—É–Ω—É—Ç—ñ —Ç–µ—Ö–Ω—ñ–∫–∏ - –î–ª—è –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏—Ö",
            "–ö–æ–º–∞–Ω–¥–Ω–∞ –≥—Ä–∞ - –í–∑–∞—î–º–æ–¥—ñ—è –≤ –∫–æ–º–∞–Ω–¥—ñ",
            MenuButton.BACK.value
        ]
        reply_markup = get_guides_menu()
    elif current_state == MenuStates.COUNTER_PICKS_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤."
        options = [
            "–ü–æ—à—É–∫ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—É - üîç",
            "–°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ - üìÉ",
            MenuButton.BACK.value
        ]
        reply_markup = get_counter_picks_menu()
    elif current_state == MenuStates.BUILDS_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –±—ñ–ª–¥—ñ–≤."
        options = [
            "–°—Ç–≤–æ—Ä–∏—Ç–∏ –ë—ñ–ª–¥ - ‚ûï",
            "–ú–æ—ó –ë—ñ–ª–¥–∏ - üìÅ",
            "–ü–æ–ø—É–ª—è—Ä–Ω—ñ –ë—ñ–ª–¥–∏ - üåü",
            MenuButton.BACK.value
        ]
        reply_markup = get_builds_menu()
    elif current_state == MenuStates.VOTING_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è."
        options = [
            "–ü–æ—Ç–æ—á–Ω—ñ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è - üó≥Ô∏è",
            "–ú–æ—ó –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è - üó≥Ô∏è",
            "–ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –¢–µ–º—É - üí°",
            MenuButton.BACK.value
        ]
        reply_markup = get_voting_menu()
    elif current_state == MenuStates.PROFILE_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –ø—Ä–æ—Ñ—ñ–ª—é."
        options = [
            MenuButton.STATISTICS.value,
            MenuButton.ACHIEVEMENTS.value,
            MenuButton.SETTINGS.value,
            MenuButton.FEEDBACK.value,
            MenuButton.HELP.value,
            MenuButton.BACK_TO_MAIN_MENU.value
        ]
        reply_markup = get_profile_menu()
    elif current_state == MenuStates.STATISTICS_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."
        options = [
            MenuButton.ACTIVITY.value,
            MenuButton.RANKING.value,
            MenuButton.GAME_STATS.value,
            MenuButton.BACK_TO_PROFILE.value
        ]
        reply_markup = get_statistics_menu()
    elif current_state == MenuStates.ACHIEVEMENTS_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –¥–æ—Å—è–≥–Ω–µ–Ω—å."
        options = [
            "–ú–æ—ó –ë–µ–π–¥–∂—ñ - üèÖ",
            "–ü—Ä–æ–≥—Ä–µ—Å - üìä",
            "–¢—É—Ä–Ω—ñ—Ä–Ω–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - üèÜ",
            "–û—Ç—Ä–∏–º–∞–Ω—ñ –ù–∞–≥–æ—Ä–æ–¥–∏ - üèÜ",
            MenuButton.BACK_TO_PROFILE.value
        ]
        reply_markup = get_achievements_menu()
    elif current_state == MenuStates.SETTINGS_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å."
        options = [
            "–ú–æ–≤–∞ –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É - üåê",
            "–ó–º—ñ–Ω–∏—Ç–∏ Username - ‚úèÔ∏è",
            "–û–Ω–æ–≤–∏—Ç–∏ ID –ì—Ä–∞–≤—Ü—è - üîÑ",
            "–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è - üîî",
            MenuButton.BACK_TO_PROFILE.value
        ]
        reply_markup = get_settings_menu()
    elif current_state == MenuStates.FEEDBACK_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É."
        options = [
            "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –í—ñ–¥–≥—É–∫ - üì§",
            "–ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ü–æ–º–∏–ª–∫—É - üêû",
            MenuButton.BACK_TO_PROFILE.value
        ]
        reply_markup = get_feedback_menu()
    elif current_state == MenuStates.HELP_MENU.state:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –¥–æ–ø–æ–º–æ–≥–∏."
        options = [
            "–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó - üìñ",
            "FAQ - ‚ùì",
            "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ - üÜò",
            MenuButton.BACK_TO_PROFILE.value
        ]
        reply_markup = get_help_menu()
    else:
        title = "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞"
        description = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ, —â–æ–± –æ–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–ø—Ü—ñ—ó."
        options = [
            MenuButton.NAVIGATION.value,
            MenuButton.PROFILE.value
        ]
        reply_markup = get_main_menu()
        await state.set_state(MenuStates.MAIN_MENU)
    
    await send_formatted_menu(
        message=message,
        title=title,
        description=description,
        options=options,
        reply_markup=reply_markup
    )

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É —á–µ—Ä–µ–∑ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
@router.callback_query(F.data.startswith("hero:"))
async def cmd_select_hero_callback(call: CallbackQuery, state: FSMContext):
    hero_name = call.data.split("hero:")[1]
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {call.from_user.id} –æ–±—Ä–∞–≤ –≥–µ—Ä–æ—è {hero_name}")
    await state.set_state(MenuStates.MAIN_MENU)
    
    title = f"üéØ {hero_name}"
    description = (
        f"–í–∏ –æ–±—Ä–∞–ª–∏ –≥–µ—Ä–æ—è <b>{hero_name}</b>. –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥–µ—Ä–æ—è –±—É–¥–µ –¥–æ–¥–∞–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ.\n\n"
        f"–ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–±–æ –æ–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—É –æ–ø—Ü—ñ—é."
    )
    options = [
        MenuButton.NAVIGATION.value,
        MenuButton.PROFILE.value
    ]
    await send_formatted_menu(
        message=call.message,
        title=title,
        description=description,
        options=options,
        reply_markup=get_main_menu()
    )
    await call.answer()

# –î–æ–¥–∞—Ç–∫–æ–≤—ñ –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –ù–æ–≤–∏—Ö –°—Ç–∞–Ω—ñ–≤
@router.message(MenuStates.CHANGE_USERNAME)
async def handle_change_username(message: Message, state: FSMContext):
    new_username = message.text.strip()
    # –î–æ–¥–∞–π—Ç–µ –ª–æ–≥—ñ–∫—É –¥–ª—è –∑–º—ñ–Ω–∏ Username, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –∑–º—ñ–Ω—é—î Username –Ω–∞ {new_username}")
    await message.answer(
        f"–í–∞—à Username –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ <b>{new_username}</b>.",
        parse_mode="HTML",
        reply_markup=get_profile_menu()
    )
    await state.set_state(MenuStates.PROFILE_MENU)

@router.message(MenuStates.SEND_FEEDBACK)
async def handle_send_feedback(message: Message, state: FSMContext):
    feedback = message.text.strip()
    # –î–æ–¥–∞–π—Ç–µ –ª–æ–≥—ñ–∫—É –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥–≥—É–∫—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∞–±–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –Ω–∞–¥—ñ—Å–ª–∞–≤ –≤—ñ–¥–≥—É–∫: {feedback}")
    await message.answer(
        "–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫! –ú–∏ —Ü—ñ–Ω—É—î–º–æ –≤–∞—à—ñ –¥—É–º–∫–∏.",
        parse_mode="HTML",
        reply_markup=get_profile_menu()
    )
    await state.set_state(MenuStates.PROFILE_MENU)

@router.message(MenuStates.REPORT_BUG)
async def handle_report_bug(message: Message, state: FSMContext):
    bug_report = message.text.strip()
    # –î–æ–¥–∞–π—Ç–µ –ª–æ–≥—ñ–∫—É –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∑–≤—ñ—Ç—É –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤—ñ–¥–æ–º–∏–≤ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É: {bug_report}")
    await message.answer(
        "–î—è–∫—É—î–º–æ –∑–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É! –ú–∏ —à–≤–∏–¥–∫–æ —ó—ó –≤–∏–ø—Ä–∞–≤–∏–º–æ.",
        parse_mode="HTML",
        reply_markup=get_profile_menu()
    )
    await state.set_state(MenuStates.PROFILE_MENU)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
def setup_handlers(dp):
    dp.include_router(router)
