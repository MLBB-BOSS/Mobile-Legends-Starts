# handlers/base.py

import logging
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from keyboards.menus import (
    MenuButton,
    menu_button_to_class,
    get_main_menu,
    get_navigation_menu,
    get_heroes_menu,
    get_hero_class_menu,
    get_guides_menu,
    get_counter_picks_menu,
    get_builds_menu,
    get_voting_menu,
    get_profile_menu,
    get_statistics_menu,
    get_achievements_menu,
    get_settings_menu,
    get_feedback_menu,
    get_help_menu,
    heroes_by_class,
)
from keyboards.inline_menus import get_generic_inline_keyboard
from utils.message_formatter import MessageFormatter  # –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å, —â–æ —Ü–µ–π —Ñ–∞–π–ª —ñ—Å–Ω—É—î —Ç–∞ –º—ñ—Å—Ç–∏—Ç—å –∫–ª–∞—Å

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Router
router = Router()

# –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞–Ω–∏ –º–µ–Ω—é
class MenuStates(StatesGroup):
    MAIN_MENU = State()
    NAVIGATION_MENU = State()
    HEROES_MENU = State()
    HERO_CLASS_MENU = State()
    GUIDES_MENU = State()
    COUNTER_PICKS_MENU = State()
    BUILDS_MENU = State()
    VOTING_MENU = State()
    PROFILE_MENU = State()
    STATISTICS_MENU = State()
    ACHIEVEMENTS_MENU = State()
    SETTINGS_MENU = State()
    FEEDBACK_MENU = State()
    HELP_MENU = State()
    SEARCH_HERO = State()  # –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω –¥–ª—è –ø–æ—à—É–∫—É –≥–µ—Ä–æ—è
    CHANGE_USERNAME = State()
    REPORT_BUG = State()
    SEND_FEEDBACK = State()
    SUGGEST_TOPIC = State()
    # –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ —Å—Ç–∞–Ω–∏ –∑–∞ –ø–æ—Ç—Ä–µ–±–æ—é

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    await state.set_state(MenuStates.MAIN_MENU)
    await MessageFormatter.update_menu_message(
        message=message,
        title="üéÆ –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ Mobile Legends Bot!",
        description=(
            "–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º:\n"
            "üîπ –ó–Ω–∞–π—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥–µ—Ä–æ—ó–≤\n"
            "üîπ –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å–Ω—ñ –≥–∞–π–¥–∏\n"
            "üîπ –°—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Ç–∞ –¥—ñ–ª–∏—Ç–∏—Å—è –±—ñ–ª–¥–∞–º–∏\n"
            "üîπ –í—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
        ),
        keyboard=get_main_menu()
    )
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(
        "„Ö§„Ö§„Ö§„Ö§      ‚îà MLS ‚îà„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§",
        reply_markup=get_generic_inline_keyboard()
    )

# –ö–æ–º–∞–Ω–¥–∞ /help
@router.message(Command("help"))
async def cmd_help(message: Message, state: FSMContext):
    """–ö–æ–º–∞–Ω–¥–∞ /help"""
    help_text = (
        "<b>üìã –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:</b>\n\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞\n"
        "/heroes - –ú–µ–Ω—é –≥–µ—Ä–æ—ó–≤\n"
        "/guides - –ì–∞–π–¥–∏ –ø–æ –≥—Ä—ñ\n"
        "/builds - –ú–µ–Ω–µ–¥–∂–µ—Ä –±—ñ–ª–¥—ñ–≤\n"
        "/stats - –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"
    )
    await message.answer(help_text, parse_mode="HTML")

# –ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é
@router.message(MenuStates.MAIN_MENU, F.text == MenuButton.NAVIGATION.value)
async def cmd_navigation(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–∞–≤—ñ–≥–∞—Ü—ñ—é")
    await state.set_state(MenuStates.NAVIGATION_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:",
        reply_markup=get_navigation_menu(),
    )
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(
        "„Ö§„Ö§„Ö§  „Ö§    ‚îà MLS ‚îà„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.MAIN_MENU, F.text == MenuButton.PROFILE.value)
async def cmd_profile(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å")
    await state.set_state(MenuStates.PROFILE_MENU)
    await message.answer(
        "„Ö§„Ö§„Ö§  „Ö§    ‚îà MLS ‚îà„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§",
        reply_markup=get_profile_menu(),
    )
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(
        "„Ö§„Ö§„Ö§  „Ö§    ‚îà MLS ‚îà„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§:",
        reply_markup=get_generic_inline_keyboard()
    )

# –†–æ–∑–¥—ñ–ª "–ù–∞–≤—ñ–≥–∞—Ü—ñ—è"
@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.HEROES.value)
async def cmd_heroes(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ")
    await state.set_state(MenuStates.HEROES_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≥–µ—Ä–æ—ó–≤:",
        reply_markup=get_heroes_menu(),
    )
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.GUIDES.value)
async def cmd_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ì–∞–π–¥–∏")
    await state.set_state(MenuStates.GUIDES_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª –≥–∞–π–¥—ñ–≤:",
        reply_markup=get_guides_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.COUNTER_PICKS.value)
async def cmd_counter_picks(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏")
    await state.set_state(MenuStates.COUNTER_PICKS_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤:",
        reply_markup=get_counter_picks_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.BUILDS.value)
async def cmd_builds(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ë—ñ–ª–¥–∏")
    await state.set_state(MenuStates.BUILDS_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –±—ñ–ª–¥—ñ–≤:",
        reply_markup=get_builds_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.VOTING.value)
async def cmd_voting(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è")
    await state.set_state(MenuStates.VOTING_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è:",
        reply_markup=get_voting_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_main_from_navigation(message: Message, state: FSMContext):
    await state.set_state(MenuStates.MAIN_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:",
        reply_markup=get_main_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –†–æ–∑–¥—ñ–ª "–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ"
@router.message(MenuStates.HEROES_MENU, F.text.in_([
    MenuButton.TANK.value,
    MenuButton.MAGE.value,
    MenuButton.MARKSMAN.value,
    MenuButton.ASSASSIN.value,
    MenuButton.SUPPORT.value,
    MenuButton.FIGHTER.value
]))
async def cmd_hero_class(message: Message, state: FSMContext):
    hero_class = menu_button_to_class.get(message.text)
    if hero_class:
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –∫–ª–∞—Å {hero_class}")
        await state.set_state(MenuStates.HERO_CLASS_MENU)
        await state.update_data(hero_class=hero_class)  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–ª–∞—Å –≥–µ—Ä–æ—è –≤ —Å—Ç–∞–Ω—ñ
        await message.answer(
            f"–í–∏–±–µ—Ä—ñ—Ç—å –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É {hero_class}:",
            reply_markup=get_hero_class_menu(hero_class)
        )
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
        await message.answer(
            "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
            reply_markup=get_generic_inline_keyboard()
        )
    else:
        logger.warning(f"–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–ª–∞—Å –≥–µ—Ä–æ—ó–≤: {message.text}")
        await message.answer(
            "‚ùó –í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ.",
            reply_markup=get_heroes_menu(),
        )
        await message.answer(
            "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
            reply_markup=get_generic_inline_keyboard()
        )

@router.message(MenuStates.HEROES_MENU, F.text == MenuButton.SEARCH_HERO.value)
async def cmd_search_hero(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—à—É–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞")
    await state.set_state(MenuStates.SEARCH_HERO)
    await message.answer(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è –≥–µ—Ä–æ—è –¥–ª—è –ø–æ—à—É–∫—É:",
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —Å—Ç–∞–Ω—É SEARCH_HERO

@router.message(MenuStates.HEROES_MENU, F.text == MenuButton.COMPARISON.value)
async def cmd_comparison(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è")
    await message.answer(
        "–§—É–Ω–∫—Ü—ñ—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≥–µ—Ä–æ—ó–≤ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_heroes_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.HEROES_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_navigation_from_heroes(message: Message, state: FSMContext):
    await state.set_state(MenuStates.NAVIGATION_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è:",
        reply_markup=get_navigation_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É
all_heroes = set()
for heroes in heroes_by_class.values():
    all_heroes.update(heroes)

@router.message(MenuStates.HERO_CLASS_MENU, F.text.in_(all_heroes))
async def cmd_select_hero(message: Message, state: FSMContext):
    hero_name = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –≥–µ—Ä–æ—è {hero_name}")
    await state.set_state(MenuStates.MAIN_MENU)
    await message.answer(
        f"–í–∏ –æ–±—Ä–∞–ª–∏ –≥–µ—Ä–æ—è {hero_name}. –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥–µ—Ä–æ—è –±—É–¥–µ –¥–æ–¥–∞–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ.",
        reply_markup=get_main_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.HERO_CLASS_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_heroes_menu(message: Message, state: FSMContext):
    await state.set_state(MenuStates.HEROES_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ:",
        reply_markup=get_heroes_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –†–æ–∑–¥—ñ–ª "–ì–∞–π–¥–∏"
@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.NEW_GUIDES.value)
async def cmd_new_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–æ–≤—ñ –ì–∞–π–¥–∏")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –Ω–æ–≤–∏—Ö –≥–∞–π–¥—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_guides_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.POPULAR_GUIDES.value)
async def cmd_popular_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ì–∞–π–¥–∏")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –≥–∞–π–¥—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_guides_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.BEGINNER_GUIDES.value)
async def cmd_beginner_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ì–∞–π–¥–∏ –¥–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –≥–∞–π–¥—ñ–≤ –¥–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_guides_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.ADVANCED_TECHNIQUES.value)
async def cmd_advanced_techniques(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü—Ä–æ—Å—É–Ω—É—Ç—ñ –¢–µ—Ö–Ω—ñ–∫–∏")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Å—É–Ω—É—Ç–∏—Ö —Ç–µ—Ö–Ω—ñ–∫ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_guides_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.TEAMPLAY_GUIDES.value)
async def cmd_teamplay_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ö–æ–º–∞–Ω–¥–Ω—É –ì—Ä—É")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –≥–∞–π–¥—ñ–≤ –ø–æ –∫–æ–º–∞–Ω–¥–Ω—ñ–π –≥—Ä—ñ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_guides_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_navigation_from_guides(message: Message, state: FSMContext):
    await state.set_state(MenuStates.NAVIGATION_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è:",
        reply_markup=get_navigation_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –†–æ–∑–¥—ñ–ª "–ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏"
@router.message(MenuStates.COUNTER_PICKS_MENU, F.text == MenuButton.COUNTER_SEARCH.value)
async def cmd_counter_search(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—à—É–∫ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—É")
    await message.answer(
        "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è –ø–æ—à—É–∫—É –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—É:",
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø–æ—à—É–∫—É –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—É

@router.message(MenuStates.COUNTER_PICKS_MENU, F.text == MenuButton.COUNTER_LIST.value)
async def cmd_counter_list(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ –¥–ª—è –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_counter_picks_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.COUNTER_PICKS_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_navigation_from_counter_picks(message: Message, state: FSMContext):
    await state.set_state(MenuStates.NAVIGATION_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è:",
        reply_markup=get_navigation_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –†–æ–∑–¥—ñ–ª "–ë—ñ–ª–¥–∏"
@router.message(MenuStates.BUILDS_MENU, F.text == MenuButton.CREATE_BUILD.value)
async def cmd_create_build(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –°—Ç–≤–æ—Ä–∏—Ç–∏ –ë—ñ–ª–¥")
    await message.answer(
        "–§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—ñ–ª–¥—É —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_builds_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.BUILDS_MENU, F.text == MenuButton.MY_BUILDS.value)
async def cmd_my_builds(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ—ó –ë—ñ–ª–¥–∏")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –±—ñ–ª–¥—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_builds_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.BUILDS_MENU, F.text == MenuButton.POPULAR_BUILDS.value)
async def cmd_popular_builds(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ë—ñ–ª–¥–∏")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –±—ñ–ª–¥—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_builds_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.BUILDS_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_navigation_from_builds(message: Message, state: FSMContext):
    await state.set_state(MenuStates.NAVIGATION_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è:",
        reply_markup=get_navigation_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –†–æ–∑–¥—ñ–ª "–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
@router.message(MenuStates.VOTING_MENU, F.text == MenuButton.CURRENT_VOTES.value)
async def cmd_current_votes(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—Ç–æ—á–Ω—ñ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –ø–æ—Ç–æ—á–Ω–∏—Ö –æ–ø–∏—Ç—É–≤–∞–Ω—å —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_voting_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.VOTING_MENU, F.text == MenuButton.MY_VOTES.value)
async def cmd_my_votes(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ—ó –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –≥–æ–ª–æ—Å—É–≤–∞–Ω—å —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_voting_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.VOTING_MENU, F.text == MenuButton.SUGGEST_TOPIC.value)
async def cmd_suggest_topic(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –¢–µ–º—É")
    await state.set_state(MenuStates.SUGGEST_TOPIC)
    await message.answer(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç–µ–º—É –¥–ª—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó:",
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–π–æ–º—É —Ç–µ–º–∏

@router.message(MenuStates.VOTING_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_navigation_from_voting(message: Message, state: FSMContext):
    await state.set_state(MenuStates.NAVIGATION_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è:",
        reply_markup=get_navigation_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –†–æ–∑–¥—ñ–ª "–ü—Ä–æ—Ñ—ñ–ª—å"
@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.STATISTICS.value)
async def cmd_statistics(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    await state.set_state(MenuStates.STATISTICS_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:",
        reply_markup=get_statistics_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.ACHIEVEMENTS.value)
async def cmd_achievements(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è")
    await state.set_state(MenuStates.ACHIEVEMENTS_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª –¥–æ—Å—è–≥–Ω–µ–Ω—å:",
        reply_markup=get_achievements_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.SETTINGS.value)
async def cmd_settings(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
    await state.set_state(MenuStates.SETTINGS_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:",
        reply_markup=get_settings_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.FEEDBACK.value)
async def cmd_feedback(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫")
    await state.set_state(MenuStates.FEEDBACK_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É:",
        reply_markup=get_feedback_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.HELP.value)
async def cmd_help_menu(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –î–æ–ø–æ–º–æ–≥—É")
    await state.set_state(MenuStates.HELP_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –¥–æ–ø–æ–º–æ–≥–∏:",
        reply_markup=get_help_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.BACK_TO_MAIN_MENU.value)
async def cmd_back_to_main_from_profile(message: Message, state: FSMContext):
    await state.set_state(MenuStates.MAIN_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:",
        reply_markup=get_main_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
@router.message(MenuStates.STATISTICS_MENU, F.text == MenuButton.ACTIVITY.value)
async def cmd_activity(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ó–∞–≥–∞–ª—å–Ω—É –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å")
    await message.answer(
        "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥–∞–ª—å–Ω–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞.",
        reply_markup=get_statistics_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.STATISTICS_MENU, F.text == MenuButton.RANKING.value)
async def cmd_ranking(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –†–µ–π—Ç–∏–Ω–≥")
    await message.answer(
        "–†–µ–π—Ç–∏–Ω–≥ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_statistics_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.STATISTICS_MENU, F.text == MenuButton.GAME_STATS.value)
async def cmd_game_stats(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –Ü–≥—Ä–æ–≤—É –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    await message.answer(
        "–Ü–≥—Ä–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞.",
        reply_markup=get_statistics_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.STATISTICS_MENU, F.text == MenuButton.BACK_TO_PROFILE.value)
async def cmd_back_to_profile_from_statistics(message: Message, state: FSMContext):
    await state.set_state(MenuStates.PROFILE_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å:",
        reply_markup=get_profile_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è"
@router.message(MenuStates.ACHIEVEMENTS_MENU, F.text == MenuButton.BADGES.value)
async def cmd_badges(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ—ó –ë–µ–π–¥–∂—ñ")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –±–µ–π–¥–∂—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_achievements_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.ACHIEVEMENTS_MENU, F.text == MenuButton.PROGRESS.value)
async def cmd_progress(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü—Ä–æ–≥—Ä–µ—Å")
    await message.answer(
        "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_achievements_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.ACHIEVEMENTS_MENU, F.text == MenuButton.TOURNAMENT_STATS.value)
async def cmd_tournament_stats(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –¢—É—Ä–Ω—ñ—Ä–Ω—É –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    await message.answer(
        "–¢—É—Ä–Ω—ñ—Ä–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞.",
        reply_markup=get_achievements_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.ACHIEVEMENTS_MENU, F.text == MenuButton.AWARDS.value)
async def cmd_awards(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –û—Ç—Ä–∏–º–∞–Ω—ñ –ù–∞–≥–æ—Ä–æ–¥–∏")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –Ω–∞–≥–æ—Ä–æ–¥ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.",
        reply_markup=get_achievements_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.ACHIEVEMENTS_MENU, F.text == MenuButton.BACK_TO_PROFILE.value)
async def cmd_back_to_profile_from_achievements(message: Message, state: FSMContext):
    await state.set_state(MenuStates.PROFILE_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å:",
        reply_markup=get_profile_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
@router.message(MenuStates.SETTINGS_MENU, F.text == MenuButton.LANGUAGE.value)
async def cmd_language(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ–≤—É –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É")
    await message.answer(
        "–§—É–Ω–∫—Ü—ñ—è –∑–º—ñ–Ω–∏ –º–æ–≤–∏ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_settings_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.SETTINGS_MENU, F.text == MenuButton.CHANGE_USERNAME.value)
async def cmd_change_username(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ó–º—ñ–Ω–∏—Ç–∏ Username")
    await state.set_state(MenuStates.CHANGE_USERNAME)
    await message.answer(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π Username:",
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∑–º—ñ–Ω–∏ Username

@router.message(MenuStates.SETTINGS_MENU, F.text == MenuButton.UPDATE_ID.value)
async def cmd_update_id(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –û–Ω–æ–≤–∏—Ç–∏ ID –ì—Ä–∞–≤—Ü—è")
    await message.answer(
        "–§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ID —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_settings_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.SETTINGS_MENU, F.text == MenuButton.NOTIFICATIONS.value)
async def cmd_notifications(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è")
    await message.answer(
        "–§—É–Ω–∫—Ü—ñ—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_settings_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.SETTINGS_MENU, F.text == MenuButton.BACK_TO_PROFILE.value)
async def cmd_back_to_profile_from_settings(message: Message, state: FSMContext):
    await state.set_state(MenuStates.PROFILE_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å:",
        reply_markup=get_profile_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫"
@router.message(MenuStates.FEEDBACK_MENU, F.text == MenuButton.SEND_FEEDBACK.value)
async def cmd_send_feedback(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –í—ñ–¥–≥—É–∫")
    await state.set_state(MenuStates.SEND_FEEDBACK)
    await message.answer(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à –≤—ñ–¥–≥—É–∫:",
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–π–æ–º—É –≤—ñ–¥–≥—É–∫—É

@router.message(MenuStates.FEEDBACK_MENU, F.text == MenuButton.REPORT_BUG.value)
async def cmd_report_bug(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ü–æ–º–∏–ª–∫—É")
    await state.set_state(MenuStates.REPORT_BUG)
    await message.answer(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–ø–∏—à—ñ—Ç—å –ø–æ–º–∏–ª–∫—É, —è–∫—É –≤–∏ –∑–Ω–∞–π—à–ª–∏:",
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–π–æ–º—É –∑–≤—ñ—Ç—É –ø—Ä–æ –ø–æ–º–∏–ª–∫—É

@router.message(MenuStates.FEEDBACK_MENU, F.text == MenuButton.BACK_TO_PROFILE.value)
async def cmd_back_to_profile_from_feedback(message: Message, state: FSMContext):
    await state.set_state(MenuStates.PROFILE_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å:",
        reply_markup=get_profile_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–î–æ–ø–æ–º–æ–≥–∞"
@router.message(MenuStates.HELP_MENU, F.text == MenuButton.INSTRUCTIONS.value)
async def cmd_instructions(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó")
    await message.answer(
        "–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ñ.",
        reply_markup=get_help_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.HELP_MENU, F.text == MenuButton.FAQ.value)
async def cmd_faq(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ FAQ")
    await message.answer(
        "FAQ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–µ.",
        reply_markup=get_help_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.HELP_MENU, F.text == MenuButton.HELP_SUPPORT.value)
async def cmd_help_support(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü—ñ–¥—Ç—Ä–∏–º–∫—É")
    await message.answer(
        "–ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é —á–µ—Ä–µ–∑ –Ω–∞—à –∫–∞–Ω–∞–ª –∞–±–æ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É.",
        reply_markup=get_help_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

@router.message(MenuStates.HELP_MENU, F.text == MenuButton.BACK_TO_PROFILE.value)
async def cmd_back_to_profile_from_help(message: Message, state: FSMContext):
    await state.set_state(MenuStates.PROFILE_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å:",
        reply_markup=get_profile_menu(),
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
@router.callback_query(F.data == "button1")
async def handle_button1(call: CallbackQuery, state: FSMContext):
    await call.message.answer("–í–∏ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –Ω–∞ –ö–Ω–æ–ø–∫—É 1")
    await call.answer()

@router.callback_query(F.data == "button2")
async def handle_button2(call: CallbackQuery, state: FSMContext):
    await call.message.answer("–í–∏ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –Ω–∞ –ö–Ω–æ–ø–∫—É 2")
    await call.answer()

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@router.message()
async def unknown_command(message: Message, state: FSMContext):
    logger.warning(f"–ù–µ–≤—ñ–¥–æ–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {message.from_user.id}: {message.text}")
    current_state = await state.get_state()
    reply_markup = get_main_menu()  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º

    if current_state:
        state_mapping = {
            MenuStates.MAIN_MENU.state: get_main_menu(),
            MenuStates.NAVIGATION_MENU.state: get_navigation_menu(),
            MenuStates.HEROES_MENU.state: get_heroes_menu(),
            MenuStates.HERO_CLASS_MENU.state: get_hero_class_menu(
                (await state.get_data()).get('hero_class', '–¢–∞–Ω–∫')
            ),
            MenuStates.GUIDES_MENU.state: get_guides_menu(),
            MenuStates.COUNTER_PICKS_MENU.state: get_counter_picks_menu(),
            MenuStates.BUILDS_MENU.state: get_builds_menu(),
            MenuStates.VOTING_MENU.state: get_voting_menu(),
            MenuStates.PROFILE_MENU.state: get_profile_menu(),
            MenuStates.STATISTICS_MENU.state: get_statistics_menu(),
            MenuStates.ACHIEVEMENTS_MENU.state: get_achievements_menu(),
            MenuStates.SETTINGS_MENU.state: get_settings_menu(),
            MenuStates.FEEDBACK_MENU.state: get_feedback_menu(),
            MenuStates.HELP_MENU.state: get_help_menu(),
            # –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ —Å—Ç–∞–Ω–∏ –∑–∞ –ø–æ—Ç—Ä–µ–±–æ—é
        }
        reply_markup = state_mapping.get(current_state, get_main_menu())

    await message.answer(
        "‚ùó –í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ.",
        reply_markup=reply_markup,
    )
    await message.answer(
        "–û—Å—å –≤–∞—à—ñ —ñ–Ω–ª–∞–π–Ω-–æ–ø—Ü—ñ—ó:",
        reply_markup=get_generic_inline_keyboard()
    )

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
def setup_handlers(dp):
    dp.include_router(router)
