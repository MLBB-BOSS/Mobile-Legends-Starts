# handlers/base.py

import logging
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from keyboards.menus import (
    MenuButton,
    menu_button_to_class,
    get_main_menu,
    get_navigation_menu,
    get_heroes_menu,
    get_guides_menu,
    get_counter_picks_menu,
    get_builds_menu,
    get_voting_menu,
    get_profile_menu,
    get_hero_class_menu,
    heroes_by_class,
    get_language_selection_menu,
    get_notifications_menu,
    get_statistics_menu,
    get_achievements_menu,
    get_settings_menu,
    get_feedback_menu,
    get_help_menu,
)
from keyboards.inline_menus import (
    get_navigation_inline_menu,
    get_profile_inline_menu,
)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)
router = Router()

# –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞–Ω–∏ –º–µ–Ω—é
class MenuStates(StatesGroup):
    MAIN_MENU = State()
    NAVIGATION_MENU = State()
    HEROES_MENU = State()
    HERO_CLASS_MENU = State()
    GUIDES_MENU = State()
    COUNTER_PICKS_MENU = State()
    BUILDS_MENU = State()
    VOTING_MENU = State()
    PROFILE_MENU = State()
    STATISTICS_MENU = State()
    ACHIEVEMENTS_MENU = State()
    SETTINGS_MENU = State()
    FEEDBACK_MENU = State()
    HELP_MENU = State()
    CHANGE_USERNAME = State()
    UPDATE_ID = State()
    NOTIFICATIONS_MENU = State()

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start.
    –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –ø–æ–∫–∞–∑—É—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.
    """
    user_name = message.from_user.first_name
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –≤–∏–∫–ª–∏–∫–∞–≤ /start")
    await state.set_state(MenuStates.MAIN_MENU)  # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
    await message.answer(
        f"üëã –í—ñ—Ç–∞—î–º–æ, {user_name}, —É Mobile Legends Tournament Bot!\n\n"
        "üéÆ –¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º:\n"
        "‚Ä¢ –û—Ä–≥–∞–Ω—ñ–∑–æ–≤—É–≤–∞—Ç–∏ —Ç—É—Ä–Ω—ñ—Ä–∏\n"
        "‚Ä¢ –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ —Å–∫—Ä—ñ–Ω—à–æ—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤\n"
        "‚Ä¢ –í—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å\n"
        "‚Ä¢ –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è\n\n"
        "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ üëá",
        reply_markup=get_main_menu(),
    )

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–≤—ñ–≥–∞—Ü—ñ—è"
@router.message(F.text == MenuButton.NAVIGATION.value)
async def cmd_navigation(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–∞–≤—ñ–≥–∞—Ü—ñ—é")
    await state.set_state(MenuStates.NAVIGATION_MENU)
    await message.answer(
        "–£ —Ä–æ–∑–¥—ñ–ª—ñ '–ù–∞–≤—ñ–≥–∞—Ü—ñ—è' –≤–∏ –º–æ–∂–µ—Ç–µ –∑–Ω–∞–π—Ç–∏ —Ä—ñ–∑–Ω—ñ –æ–ø—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –≥–µ—Ä–æ—ó–≤, –≥–∞–π–¥—ñ–≤, –±—ñ–ª–¥—ñ–≤ —Ç–æ—â–æ.",
        reply_markup=get_navigation_menu()
    )

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å"
@router.message(F.text == MenuButton.PROFILE.value)
async def cmd_profile(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å")
    await state.set_state(MenuStates.PROFILE_MENU)
    await message.answer(
        "–£ —Ä–æ–∑–¥—ñ–ª—ñ '–ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å' –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è, –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ —ñ–Ω—à—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.",
        reply_markup=get_profile_menu()
    )

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–¥—ñ–ª—É "–ù–∞–≤—ñ–≥–∞—Ü—ñ—è"
@router.message(F.text == MenuButton.HEROES.value)
async def cmd_heroes(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ")
    await state.set_state(MenuStates.HEROES_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≥–µ—Ä–æ—ó–≤:",
        reply_markup=get_heroes_menu(),
    )

@router.message(F.text == MenuButton.GUIDES.value)
async def cmd_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ì–∞–π–¥–∏")
    await state.set_state(MenuStates.GUIDES_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≥–∞–π–¥—ñ–≤:",
        reply_markup=get_guides_menu(),
    )

@router.message(F.text == MenuButton.COUNTER_PICKS.value)
async def cmd_counter_picks(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏")
    await state.set_state(MenuStates.COUNTER_PICKS_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤:",
        reply_markup=get_counter_picks_menu(),
    )

@router.message(F.text == MenuButton.BUILDS.value)
async def cmd_builds(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ë—ñ–ª–¥–∏")
    await state.set_state(MenuStates.BUILDS_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –ë—ñ–ª–¥—ñ–≤:",
        reply_markup=get_builds_menu(),
    )

@router.message(F.text == MenuButton.VOTING.value)
async def cmd_voting(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è")
    await state.set_state(MenuStates.VOTING_MENU)
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è:",
        reply_markup=get_voting_menu(),
    )

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É "–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ"
@router.message(F.text == MenuButton.SEARCH_HERO.value)
async def cmd_search_hero(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—à—É–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞")
    await message.answer(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è –ø–æ—à—É–∫—É:",
    )
    await state.set_state(MenuStates.HERO_CLASS_MENU)  # –ú–æ–∂–ª–∏–≤–æ, —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–∫—Ä–µ–º–∏–π —Å—Ç–∞–Ω

@router.message(F.text.in_(heroes_by_class.keys()))
async def cmd_select_class(message: Message, state: FSMContext):
    hero_class = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –∫–ª–∞—Å {hero_class}")
    await state.set_state(MenuStates.HERO_CLASS_MENU)
    await message.answer(
        f"–í–∏–±–µ—Ä—ñ—Ç—å –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É {hero_class}:",
        reply_markup=get_hero_class_menu(hero_class)
    )

@router.message(F.text == MenuButton.COMPARISON.value)
async def cmd_comparison(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è")
    await message.answer(
        "–§—É–Ω–∫—Ü—ñ—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≥–µ—Ä–æ—ó–≤ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_heroes_menu(),
    )

# –û–±—Ä–æ–±–Ω–∏–∫ –≤–∏–±–æ—Ä—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≥–µ—Ä–æ—è
@router.message(F.text.in_(sum(heroes_by_class.values(), [])))
async def cmd_hero_selected(message: Message, state: FSMContext):
    hero_name = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –≥–µ—Ä–æ—è {hero_name}")
    await state.set_state(MenuStates.MAIN_MENU)
    await message.answer(
        f"–í–∏ –æ–±—Ä–∞–ª–∏ –≥–µ—Ä–æ—è {hero_name}. –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥–µ—Ä–æ—è –±—É–¥–µ –¥–æ–¥–∞–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ.",
        reply_markup=get_main_menu(),
    )

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É "–ì–∞–π–¥–∏"
@router.message(F.text == MenuButton.NEW_GUIDES.value)
async def cmd_new_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–æ–≤—ñ –ì–∞–π–¥–∏")
    await message.answer(
        "–ù–æ–≤—ñ –≥–∞–π–¥–∏ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_guides_menu(),
    )

@router.message(F.text == MenuButton.POPULAR_GUIDES.value)
async def cmd_popular_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ì–∞–π–¥–∏")
    await message.answer(
        "–ü–æ–ø—É–ª—è—Ä–Ω—ñ –≥–∞–π–¥–∏ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_guides_menu(),
    )

@router.message(F.text == MenuButton.BEGINNER_GUIDES.value)
async def cmd_beginner_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –î–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤")
    await message.answer(
        "–ì–∞–π–¥–∏ –¥–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_guides_menu(),
    )

@router.message(F.text == MenuButton.ADVANCED_TECHNIQUES.value)
async def cmd_advanced_techniques(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü—Ä–æ—Å—É–Ω—É—Ç—ñ –¢–µ—Ö–Ω—ñ–∫–∏")
    await message.answer(
        "–ü—Ä–æ—Å—É–Ω—É—Ç—ñ —Ç–µ—Ö–Ω—ñ–∫–∏ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_guides_menu(),
    )

@router.message(F.text == MenuButton.TEAMPLAY_GUIDES.value)
async def cmd_teamplay_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ö–æ–º–∞–Ω–¥–Ω–∞ –ì—Ä–∞")
    await message.answer(
        "–ì–∞–π–¥–∏ –ø–æ –∫–æ–º–∞–Ω–¥–Ω—ñ–π –≥—Ä—ñ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_guides_menu(),
    )

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É "–ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏"
@router.message(F.text == MenuButton.COUNTER_SEARCH.value)
async def cmd_counter_search(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—à—É–∫ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—É")
    await message.answer(
        "–§—É–Ω–∫—Ü—ñ—è –ø–æ—à—É–∫—É –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_counter_picks_menu(),
    )

@router.message(F.text == MenuButton.COUNTER_LIST.value)
async def cmd_counter_list(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤")
    await message.answer(
        "–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_counter_picks_menu(),
    )

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É "–ë—ñ–ª–¥–∏"
@router.message(F.text == MenuButton.CREATE_BUILD.value)
async def cmd_create_build(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –°—Ç–≤–æ—Ä–∏—Ç–∏ –ë—ñ–ª–¥")
    await message.answer(
        "–§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—ñ–ª–¥—ñ–≤ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_builds_menu(),
    )

@router.message(F.text == MenuButton.MY_BUILDS.value)
async def cmd_my_builds(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ—ó –ë—ñ–ª–¥–∏")
    await message.answer(
        "–í–∞—à—ñ –±—ñ–ª–¥–∏ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_builds_menu(),
    )

@router.message(F.text == MenuButton.POPULAR_BUILDS.value)
async def cmd_popular_builds(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ë—ñ–ª–¥–∏")
    await message.answer(
        "–ü–æ–ø—É–ª—è—Ä–Ω—ñ –±—ñ–ª–¥–∏ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_builds_menu(),
    )

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É "–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
@router.message(F.text == MenuButton.CURRENT_VOTES.value)
async def cmd_current_votes(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—Ç–æ—á–Ω—ñ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è")
    await message.answer(
        "–ü–æ—Ç–æ—á–Ω—ñ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_voting_menu(),
    )

@router.message(F.text == MenuButton.MY_VOTES.value)
async def cmd_my_votes(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ—ó –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è")
    await message.answer(
        "–í–∞—à—ñ –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_voting_menu(),
    )

@router.message(F.text == MenuButton.SUGGEST_TOPIC.value)
async def cmd_suggest_topic(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –¢–µ–º—É")
    await message.answer(
        "–§—É–Ω–∫—Ü—ñ—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó —Ç–µ–º —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
        reply_markup=get_voting_menu(),
    )

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É "–ü—Ä–æ—Ñ—ñ–ª—å"
@router.message(F.text == MenuButton.ACTIVITY.value)
async def cmd_activity(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ó–∞–≥–∞–ª—å–Ω–∞ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å")
    await message.answer(
        "–í–∞—à–∞ –∑–∞–≥–∞–ª—å–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å: [–¥–∞–Ω—ñ –±—É–¥—É—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—ñ–∑–Ω—ñ—à–µ]",
        reply_markup=get_profile_menu(),
    )

@router.message(F.text == MenuButton.RANKING.value)
async def cmd_ranking(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –†–µ–π—Ç–∏–Ω–≥")
    await message.answer(
        "–í–∞—à –ø–æ—Ç–æ—á–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: [–¥–∞–Ω—ñ –±—É–¥—É—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—ñ–∑–Ω—ñ—à–µ]",
        reply_markup=get_profile_menu(),
    )

@router.message(F.text == MenuButton.GAME_STATS.value)
async def cmd_game_stats(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –Ü–≥—Ä–æ–≤–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    await message.answer(
        "–í–∞—à–∞ —ñ–≥—Ä–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: [–¥–∞–Ω—ñ –±—É–¥—É—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—ñ–∑–Ω—ñ—à–µ]",
        reply_markup=get_profile_menu(),
    )

@router.message(F.text == MenuButton.BADGES.value)
async def cmd_badges(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ—ó –ë–µ–π–¥–∂—ñ")
    await message.answer(
        "–í–∞—à—ñ –±–µ–π–¥–∂—ñ: [–¥–∞–Ω—ñ –±—É–¥—É—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—ñ–∑–Ω—ñ—à–µ]",
        reply_markup=get_profile_menu(),
    )

@router.message(F.text == MenuButton.PROGRESS.value)
async def cmd_progress(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü—Ä–æ–≥—Ä–µ—Å")
    await message.answer(
        "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å: [–¥–∞–Ω—ñ –±—É–¥—É—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—ñ–∑–Ω—ñ—à–µ]",
        reply_markup=get_profile_menu(),
    )

@router.message(F.text == MenuButton.TOURNAMENT_STATS.value)
async def cmd_tournament_stats(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –¢—É—Ä–Ω—ñ—Ä–Ω–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    await message.answer(
        "–¢—É—Ä–Ω—ñ—Ä–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: [–¥–∞–Ω—ñ –±—É–¥—É—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—ñ–∑–Ω—ñ—à–µ]",
        reply_markup=get_profile_menu(),
    )

@router.message(F.text == MenuButton.AWARDS.value)
async def cmd_awards(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –û—Ç—Ä–∏–º–∞–Ω—ñ –ù–∞–≥–æ—Ä–æ–¥–∏")
    await message.answer(
        "–û—Ç—Ä–∏–º–∞–Ω—ñ –Ω–∞–≥–æ—Ä–æ–¥–∏: [–¥–∞–Ω—ñ –±—É–¥—É—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—ñ–∑–Ω—ñ—à–µ]",
        reply_markup=get_profile_menu(),
    )

@router.message(F.text == MenuButton.LANGUAGE.value)
async def cmd_language_selection(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ–≤–∞ –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É")
    await message.answer(
        "–í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É:",
        reply_markup=get_language_selection_menu(),
    )
    await state.set_state(MenuStates.SETTINGS_MENU)

@router.message(F.text == MenuButton.CHANGE_USERNAME.value)
async def cmd_change_username(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ó–º—ñ–Ω–∏—Ç–∏ Username")
    await message.answer(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π Username:",
    )
    await state.set_state(MenuStates.CHANGE_USERNAME)

@router.message(F.text == MenuButton.UPDATE_ID.value)
async def cmd_update_id(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –û–Ω–æ–≤–∏—Ç–∏ ID –ì—Ä–∞–≤—Ü—è")
    await message.answer(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à ID –≥—Ä–∞–≤—Ü—è:",
    )
    await state.set_state(MenuStates.UPDATE_ID)

@router.message(F.text == MenuButton.NOTIFICATIONS.value)
async def cmd_notifications(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è")
    await message.answer(
        "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å:",
        reply_markup=get_notifications_menu(),
    )
    await state.set_state(MenuStates.NOTIFICATIONS_MENU)

@router.message(F.text == MenuButton.SEND_FEEDBACK.value)
async def cmd_send_feedback(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –í—ñ–¥–≥—É–∫")
    await message.answer(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è —Å–≤–æ—ó–º –≤—ñ–¥–≥—É–∫–æ–º –∞–±–æ —ñ–¥–µ—î—é:",
    )
    await state.set_state(MenuStates.FEEDBACK_MENU)

@router.message(F.text == MenuButton.REPORT_BUG.value)
async def cmd_report_bug(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ü–æ–º–∏–ª–∫—É")
    await message.answer(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–ø–∏—à—ñ—Ç—å –∑–Ω–∞–π–¥–µ–Ω—É –ø–æ–º–∏–ª–∫—É:",
    )
    await state.set_state(MenuStates.FEEDBACK_MENU)

@router.message(F.text == MenuButton.INSTRUCTIONS.value)
async def cmd_instructions(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó")
    await message.answer(
        "–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó: [–¥–∞–Ω—ñ –±—É–¥—É—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—ñ–∑–Ω—ñ—à–µ]",
        reply_markup=get_help_menu(),
    )

@router.message(F.text == MenuButton.FAQ.value)
async def cmd_faq(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ FAQ")
    await message.answer(
        "FAQ: [–¥–∞–Ω—ñ –±—É–¥—É—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—ñ–∑–Ω—ñ—à–µ]",
        reply_markup=get_help_menu(),
    )

@router.message(F.text == MenuButton.HELP_SUPPORT.value)
async def cmd_help_support(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü—ñ–¥—Ç—Ä–∏–º–∫—É")
    await message.answer(
        "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞: [–¥–∞–Ω—ñ –±—É–¥—É—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—ñ–∑–Ω—ñ—à–µ]",
        reply_markup=get_help_menu(),
    )

# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
@router.message(F.text == MenuButton.BACK.value)
async def cmd_back(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –Ω–∞—Ç–∏—Å–Ω—É–≤ '–ù–∞–∑–∞–¥'")
    current_state = await state.get_state()
    
    if current_state == MenuStates.NAVIGATION_MENU.state:
        await state.set_state(MenuStates.MAIN_MENU)
        await message.answer(
            "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:",
            reply_markup=get_main_menu(),
        )
    elif current_state in [MenuStates.HEROES_MENU.state, MenuStates.GUIDES_MENU.state,
                           MenuStates.COUNTER_PICKS_MENU.state, MenuStates.BUILDS_MENU.state,
                           MenuStates.VOTING_MENU.state]:
        await state.set_state(MenuStates.NAVIGATION_MENU)
        await message.answer(
            "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é '–ù–∞–≤—ñ–≥–∞—Ü—ñ—è':",
            reply_markup=get_navigation_menu(),
        )
    elif current_state == MenuStates.HERO_CLASS_MENU.state:
        await state.set_state(MenuStates.HEROES_MENU)
        await message.answer(
            "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é '–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ':",
            reply_markup=get_heroes_menu(),
        )
    elif current_state in [MenuStates.PROFILE_MENU.state, MenuStates.STATISTICS_MENU.state,
                           MenuStates.ACHIEVEMENTS_MENU.state, MenuStates.SETTINGS_MENU.state,
                           MenuStates.FEEDBACK_MENU.state, MenuStates.HELP_MENU.state]:
        await state.set_state(MenuStates.PROFILE_MENU)
        await message.answer(
            "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é '–ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å':",
            reply_markup=get_profile_menu(),
        )
    elif current_state in [MenuStates.CHANGE_USERNAME.state, MenuStates.UPDATE_ID.state,
                           MenuStates.NOTIFICATIONS_MENU.state]:
        await state.set_state(MenuStates.SETTINGS_MENU)
        await message.answer(
            "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è':",
            reply_markup=get_settings_menu(),
        )
    else:
        # –Ø–∫—â–æ —Å—Ç–∞–Ω –Ω–µ–≤—ñ–¥–æ–º–∏–π, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        await state.set_state(MenuStates.MAIN_MENU)
        await message.answer(
            "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:",
            reply_markup=get_main_menu(),
        )

# –ö–Ω–æ–ø–∫–∞ "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ì–æ–ª–æ–≤–Ω–æ–≥–æ –ú–µ–Ω—é"
@router.message(F.text == MenuButton.RETURN_TO_MAIN.value)
async def cmd_return_to_main(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ì–æ–ª–æ–≤–Ω–æ–≥–æ –ú–µ–Ω—é")
    await state.set_state(MenuStates.MAIN_MENU)
    await message.answer(
        "üîô –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:",
        reply_markup=get_main_menu(),
    )

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@router.message()
async def unknown_command(message: Message, state: FSMContext):
    logger.warning(f"–ù–µ–≤—ñ–¥–æ–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {message.from_user.id}: {message.text}")
    await state.set_state(MenuStates.MAIN_MENU)
    await message.answer(
        "‚ùó –í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ.",
        reply_markup=get_main_menu(),
    )

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
def setup_handlers(dp):
    dp.include_router(router)
