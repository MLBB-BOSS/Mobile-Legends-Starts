# handlers/base.py

import logging
from aiogram import Router, Bot
from aiogram.filters import Command, Text
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

# –Ü–º–ø–æ—Ä—Ç –∫–ª–∞–≤—ñ–∞—Ç—É—Ä
from keyboards.menus import (
    get_main_menu,
    get_navigation_menu,
    get_characters_menu,
    get_builds_menu,
    get_counter_picks_menu,
    get_guides_menu,
    get_voting_menu,
    get_m6_menu,
    get_gpt_menu,
    get_meta_menu,
    get_profile_menu,
    get_statistics_menu,
    get_achievements_menu,
    get_settings_menu,
    get_feedback_menu,
    get_help_menu,
    get_generic_inline_keyboard,
    get_character_inline_keyboard,
    get_guide_inline_keyboard
)

# –Ü–º–ø–æ—Ä—Ç —Ç–µ–∫—Å—Ç—ñ–≤
from keyboards.menus import (
    MainMenuButtons,
    NavigationMenuButtons,
    CharactersMenuButtons,
    BuildsMenuButtons,
    CounterPicksMenuButtons,
    GuidesMenuButtons,
    VotingMenuButtons,
    M6MenuButtons,
    GPTMenuButtons,
    MetaMenuButtons,
    ProfileMenuButtons,
    StatisticsMenuButtons,
    AchievementsMenuButtons,
    SettingsMenuButtons,
    FeedbackMenuButtons,
    HelpMenuButtons,
    InlineMenuButtons
)

# –Ü–º–ø–æ—Ä—Ç GPT —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó
from gpt_integration import get_gpt_response

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

router = Router()


# –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞–Ω–∏ –º–µ–Ω—é
class MenuStates(StatesGroup):
    MAIN_MENU = State()
    NAVIGATION_MENU = State()
    CHARACTERS_MENU = State()
    BUILDS_MENU = State()
    COUNTER_PICKS_MENU = State()
    GUIDES_MENU = State()
    VOTING_MENU = State()
    M6_MENU = State()
    GPT_MENU = State()
    META_MENU = State()
    PROFILE_MENU = State()
    STATISTICS_MENU = State()
    ACHIEVEMENTS_MENU = State()
    SETTINGS_MENU = State()
    FEEDBACK_MENU = State()
    HELP_MENU = State()
    CHARACTER_VIEW = State()
    GUIDE_VIEW = State()
    GPT_ASK_QUESTION = State()
    SEARCH_HERO = State()


# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext, bot: Bot):
    user_first_name = message.from_user.first_name
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –≤–∏–∫–ª–∏–∫–∞–≤ /start")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ /start
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    main_menu_text = f"–ü—Ä–∏–≤—ñ—Ç, {user_first_name}! –í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –Ω–∏–∂—á–µ:"
    main_menu_message = await bot.send_message(
        chat_id=message.chat.id,
        text=main_menu_text,
        reply_markup=get_main_menu(),
        parse_mode="HTML"
    )

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    interactive_text = "–¶–µ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω –≤–∞—à–æ–≥–æ –±–æ—Ç–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó."
    interactive_message = await bot.send_message(
        chat_id=message.chat.id,
        text=interactive_text,
        reply_markup=get_generic_inline_keyboard(),
        parse_mode="HTML"
    )

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    await state.update_data(
        bot_message_id=main_menu_message.message_id,
        interactive_message_id=interactive_message.message_id
    )

    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ MAIN_MENU
    await state.set_state(MenuStates.MAIN_MENU)


# –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
@router.message(MenuStates.MAIN_MENU, Text(equals=[button.value for button in MainMenuButtons]))
async def handle_main_menu(message: Message, state: FSMContext, bot: Bot):
    user_choice = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ '{user_choice}' –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    # –û—Ç—Ä–∏–º—É—î–º–æ IDs –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ —Å—Ç–∞–Ω—É
    data = await state.get_data()
    bot_message_id = data.get('bot_message_id')
    interactive_message_id = data.get('interactive_message_id')

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    new_main_text = ""
    new_main_keyboard = None
    new_interactive_text = ""
    new_state = None

    if user_choice == MainMenuButtons.NAVIGATION.value:
        new_main_text = "üß≠ <b>–ú–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó</b>"
        new_main_keyboard = get_navigation_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó –Ω–∏–∂—á–µ:"
        new_state = MenuStates.NAVIGATION_MENU
    elif user_choice == MainMenuButtons.PROFILE.value:
        new_main_text = "ü™™ <b>–ú–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—é</b>"
        new_main_keyboard = get_profile_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –ü—Ä–æ—Ñ—ñ–ª—é –Ω–∏–∂—á–µ:"
        new_state = MenuStates.PROFILE_MENU
    else:
        # –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ."
        new_main_keyboard = get_main_menu()
        new_interactive_text = "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"
        new_state = MenuStates.MAIN_MENU

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    new_main_message = await bot.send_message(
        chat_id=message.chat.id,
        text=new_main_text,
        reply_markup=new_main_keyboard,
        parse_mode="HTML"
    )
    new_bot_message_id = new_main_message.message_id

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    try:
        await bot.delete_message(chat_id=message.chat.id, message_id=bot_message_id)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞: {e}")

    # –û–Ω–æ–≤–ª—é—î–º–æ bot_message_id –≤ —Å—Ç–∞–Ω—ñ
    await state.update_data(bot_message_id=new_bot_message_id)

    # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        await bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=interactive_message_id,
            text=new_interactive_text,
            parse_mode="HTML",
            reply_markup=get_generic_inline_keyboard()
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        new_interactive_message = await bot.send_message(
            chat_id=message.chat.id,
            text=new_interactive_text,
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )
        await state.update_data(interactive_message_id=new_interactive_message.message_id)

    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await state.set_state(new_state)


# –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó
@router.message(MenuStates.NAVIGATION_MENU, Text(equals=[button.value for button in NavigationMenuButtons]))
async def handle_navigation_menu(message: Message, state: FSMContext, bot: Bot):
    user_choice = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ '{user_choice}' –≤ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    # –û—Ç—Ä–∏–º—É—î–º–æ IDs –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ —Å—Ç–∞–Ω—É
    data = await state.get_data()
    bot_message_id = data.get('bot_message_id')
    interactive_message_id = data.get('interactive_message_id')

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
    new_main_text = ""
    new_main_keyboard = None
    new_interactive_text = ""
    new_state = None

    if user_choice == NavigationMenuButtons.CHARACTERS.value:
        new_main_text = "ü•∑ <b>–ú–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤</b>"
        new_main_keyboard = get_characters_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∏–∂—á–µ:"
        new_state = MenuStates.CHARACTERS_MENU
    elif user_choice == NavigationMenuButtons.BUILDS.value:
        new_main_text = "üõ°Ô∏è <b>–ú–µ–Ω—é –ë—ñ–ª–¥</b>"
        new_main_keyboard = get_builds_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –±—ñ–ª–¥–∞–º–∏ –Ω–∏–∂—á–µ:"
        new_state = MenuStates.BUILDS_MENU
    elif user_choice == NavigationMenuButtons.COUNTER_PICKS.value:
        new_main_text = "‚öñÔ∏è <b>–ú–µ–Ω—é –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤</b>"
        new_main_keyboard = get_counter_picks_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –∫–æ–Ω—Ç—Ä-–ø—ñ–∫–∞–º–∏ –Ω–∏–∂—á–µ:"
        new_state = MenuStates.COUNTER_PICKS_MENU
    elif user_choice == NavigationMenuButtons.GUIDES.value:
        new_main_text = "üìö <b>–ú–µ–Ω—é –ì–∞–π–¥—ñ–≤</b>"
        new_main_keyboard = get_guides_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –≥–∞–π–¥—É –Ω–∏–∂—á–µ:"
        new_state = MenuStates.GUIDES_MENU
    elif user_choice == NavigationMenuButtons.VOTING.value:
        new_main_text = "üìä <b>–ú–µ–Ω—é –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è</b>"
        new_main_keyboard = get_voting_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è–º–∏ –Ω–∏–∂—á–µ:"
        new_state = MenuStates.VOTING_MENU
    elif user_choice == NavigationMenuButtons.M6.value:
        new_main_text = "üèÜ <b>–ú–µ–Ω—é M6</b>"
        new_main_keyboard = get_m6_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ M6 –Ω–∏–∂—á–µ:"
        new_state = MenuStates.M6_MENU
    elif user_choice == NavigationMenuButtons.GPT.value:
        new_main_text = "üëæ <b>–ú–µ–Ω—é GPT</b>"
        new_main_keyboard = get_gpt_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ GPT –Ω–∏–∂—á–µ:"
        new_state = MenuStates.GPT_MENU
    elif user_choice == NavigationMenuButtons.META.value:
        new_main_text = "üî• <b>–ú–µ–Ω—é META</b>"
        new_main_keyboard = get_meta_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ META –Ω–∏–∂—á–µ:"
        new_state = MenuStates.META_MENU
    elif user_choice == NavigationMenuButtons.BACK.value:
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        new_main_text = f"–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}! –í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –Ω–∏–∂—á–µ:"
        new_main_keyboard = get_main_menu()
        new_interactive_text = "–¶–µ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω –≤–∞—à–æ–≥–æ –±–æ—Ç–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó."
        new_state = MenuStates.MAIN_MENU
    else:
        # –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ."
        new_main_keyboard = get_navigation_menu()
        new_interactive_text = "–ú–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó"
        new_state = MenuStates.NAVIGATION_MENU

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    new_main_message = await bot.send_message(
        chat_id=message.chat.id,
        text=new_main_text,
        reply_markup=new_main_keyboard,
        parse_mode="HTML"
    )
    new_bot_message_id = new_main_message.message_id

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    try:
        await bot.delete_message(chat_id=message.chat.id, message_id=bot_message_id)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞: {e}")

    # –û–Ω–æ–≤–ª—é—î–º–æ bot_message_id –≤ —Å—Ç–∞–Ω—ñ
    await state.update_data(bot_message_id=new_bot_message_id)

    # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        await bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=interactive_message_id,
            text=new_interactive_text,
            parse_mode="HTML",
            reply_markup=get_generic_inline_keyboard()
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        new_interactive_message = await bot.send_message(
            chat_id=message.chat.id,
            text=new_interactive_text,
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )
        await state.update_data(interactive_message_id=new_interactive_message.message_id)

    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await state.set_state(new_state)


# –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—é
@router.message(MenuStates.PROFILE_MENU, Text(equals=[button.value for button in ProfileMenuButtons]))
async def handle_profile_menu(message: Message, state: FSMContext, bot: Bot):
    user_choice = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ '{user_choice}' –≤ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—é")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    # –û—Ç—Ä–∏–º—É—î–º–æ IDs –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ —Å—Ç–∞–Ω—É
    data = await state.get_data()
    bot_message_id = data.get('bot_message_id')
    interactive_message_id = data.get('interactive_message_id')

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
    new_main_text = ""
    new_main_keyboard = None
    new_interactive_text = ""
    new_state = None

    if user_choice == ProfileMenuButtons.STATISTICS.value:
        new_main_text = "üìà <b>–ú–µ–Ω—é –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</b>"
        new_main_keyboard = get_statistics_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∏–∂—á–µ:"
        new_state = MenuStates.STATISTICS_MENU
    elif user_choice == ProfileMenuButtons.ACHIEVEMENTS.value:
        new_main_text = "üèÜ <b>–ú–µ–Ω—é –î–æ—Å—è–≥–Ω–µ–Ω—å</b>"
        new_main_keyboard = get_achievements_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –î–æ—Å—è–≥–Ω–µ–Ω—å –Ω–∏–∂—á–µ:"
        new_state = MenuStates.ACHIEVEMENTS_MENU
    elif user_choice == ProfileMenuButtons.SETTINGS.value:
        new_main_text = "‚öôÔ∏è <b>–ú–µ–Ω—é –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω—å</b>"
        new_main_keyboard = get_settings_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –Ω–∏–∂—á–µ:"
        new_state = MenuStates.SETTINGS_MENU
    elif user_choice == ProfileMenuButtons.FEEDBACK.value:
        new_main_text = "üíå <b>–ú–µ–Ω—é –ó–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –ó–≤'—è–∑–∫—É</b>"
        new_main_keyboard = get_feedback_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑—ñ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É –Ω–∏–∂—á–µ:"
        new_state = MenuStates.FEEDBACK_MENU
    elif user_choice == ProfileMenuButtons.HELP.value:
        new_main_text = "‚ùì <b>–ú–µ–Ω—é –î–æ–ø–æ–º–æ–≥–∏</b>"
        new_main_keyboard = get_help_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –î–æ–ø–æ–º–æ–≥–∏ –Ω–∏–∂—á–µ:"
        new_state = MenuStates.HELP_MENU
    elif user_choice == ProfileMenuButtons.BACK_TO_MAIN.value:
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        new_main_text = f"–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}! –í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –Ω–∏–∂—á–µ:"
        new_main_keyboard = get_main_menu()
        new_interactive_text = "–¶–µ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω –≤–∞—à–æ–≥–æ –±–æ—Ç–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó."
        new_state = MenuStates.MAIN_MENU
    else:
        # –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ."
        new_main_keyboard = get_profile_menu()
        new_interactive_text = "–ú–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—é"
        new_state = MenuStates.PROFILE_MENU

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    new_main_message = await bot.send_message(
        chat_id=message.chat.id,
        text=new_main_text,
        reply_markup=new_main_keyboard,
        parse_mode="HTML"
    )
    new_bot_message_id = new_main_message.message_id

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    try:
        await bot.delete_message(chat_id=message.chat.id, message_id=bot_message_id)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞: {e}")

    # –û–Ω–æ–≤–ª—é—î–º–æ bot_message_id –≤ —Å—Ç–∞–Ω—ñ
    await state.update_data(bot_message_id=new_bot_message_id)

    # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        await bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=interactive_message_id,
            text=new_interactive_text,
            parse_mode="HTML",
            reply_markup=get_generic_inline_keyboard()
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        new_interactive_message = await bot.send_message(
            chat_id=message.chat.id,
            text=new_interactive_text,
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )
        await state.update_data(interactive_message_id=new_interactive_message.message_id)

    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await state.set_state(new_state)


# –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤
@router.message(MenuStates.CHARACTERS_MENU, Text(equals=[button.value for button in CharactersMenuButtons]))
async def handle_characters_menu(message: Message, state: FSMContext, bot: Bot):
    user_choice = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ '{user_choice}' –≤ –º–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    # –û—Ç—Ä–∏–º—É—î–º–æ IDs –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ —Å—Ç–∞–Ω—É
    data = await state.get_data()
    bot_message_id = data.get('bot_message_id')
    interactive_message_id = data.get('interactive_message_id')

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
    new_main_text = ""
    new_main_keyboard = None
    new_interactive_text = ""
    new_state = None

    if user_choice == CharactersMenuButtons.COMPARISON.value:
        # –û–±—Ä–æ–±–∫–∞ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≥–µ—Ä–æ—ó–≤
        comparison_text = "‚öñÔ∏è –§—É–Ω–∫—Ü—ñ—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≥–µ—Ä–æ—ó–≤ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ."
        new_main_text = comparison_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = comparison_text
        new_state = MenuStates.CHARACTER_VIEW  # –ú–æ–∂–ª–∏–≤–æ, –æ–∫—Ä–µ–º–∏–π —Å—Ç–∞–Ω
    elif user_choice == CharactersMenuButtons.SEARCH_HERO.value:
        # –û–±—Ä–æ–±–∫–∞ –ø–æ—à—É–∫—É –≥–µ—Ä–æ—è
        search_text = "üîé –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –≥–µ—Ä–æ—è –¥–ª—è –ø–æ—à—É–∫—É:"
        new_main_text = search_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = search_text
        new_state = MenuStates.SEARCH_HERO
    elif user_choice == CharactersMenuButtons.BACK.value:
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó
        new_main_text = "üß≠ <b>–ú–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó</b>"
        new_main_keyboard = get_navigation_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó –Ω–∏–∂—á–µ:"
        new_state = MenuStates.NAVIGATION_MENU
    else:
        # –í–∏–±—ñ—Ä –∫–ª–∞—Å—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        selected_class = user_choice.replace("ü•∑ ", "").replace("üõ°Ô∏è ", "").replace("üßô‚Äç‚ôÇÔ∏è ", "").replace("üèπ ", "").replace("‚öîÔ∏è ", "").replace("‚ù§Ô∏è ", "").replace("üó°Ô∏è ", "")
        logger.info(f"–í–∏–±—Ä–∞–Ω–æ –∫–ª–∞—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {selected_class}")

        # –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —É –≤–∞—Å —î —Å–ª–æ–≤–Ω–∏–∫ –∫–ª–∞—Å—ñ–≤ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö –≥–µ—Ä–æ—ó–≤
        heroes_by_class = {
            "–¢–∞–Ω–∫": ["Alice", "Tigreal", "Akai", "Franco", "Minotaur", "Lolia", "Gatotkaca", "Grock", "Hylos", "Uranus", "Belerick", "Khufra", "Esmeralda", "Terizla", "Baxia", "Masha", "Atlas", "Barats", "Edith", "Fredrinn", "Johnson", "Hilda", "Carmilla", "Gloo", "Chip"],
            "–ú–∞–≥": ["–ú–∞–≥ 1", "–ú–∞–≥ 2"],  # –î–æ–¥–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω–∏—Ö –≥–µ—Ä–æ—ó–≤
            "–°—Ç—Ä—ñ–ª–µ—Ü—å": ["–°—Ç—Ä—ñ–ª–µ—Ü—å 1", "–°—Ç—Ä—ñ–ª–µ—Ü—å 2"],  # –î–æ–¥–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω–∏—Ö –≥–µ—Ä–æ—ó–≤
            "–ê—Å–∞—Å—ñ–Ω": ["–ê—Å–∞—Å—ñ–Ω 1", "–ê—Å–∞—Å—ñ–Ω 2"],  # –î–æ–¥–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω–∏—Ö –≥–µ—Ä–æ—ó–≤
            "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞": ["–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ 1", "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ 2"],  # –î–æ–¥–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω–∏—Ö –≥–µ—Ä–æ—ó–≤
            "–ë–æ—î—Ü—å": ["–ë–æ—î—Ü—å 1", "–ë–æ—î—Ü—å 2"],  # –î–æ–¥–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω–∏—Ö –≥–µ—Ä–æ—ó–≤
        }

        heroes = heroes_by_class.get(selected_class, [])

        if heroes:
            # –§–æ—Ä–º—É—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –≥–µ—Ä–æ—è–º–∏
            keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            hero_buttons = [KeyboardButton(text=hero) for hero in heroes]
            keyboard.add(*hero_buttons)
            # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
            keyboard.add(KeyboardButton(text=CharactersMenuButtons.BACK.value))

            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤
            heroes_text = f"ü¶∏‚Äç‚ôÇÔ∏è <b>–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ –∫–ª–∞—Å—É {selected_class}</b>:\n" + "\n".join(f"‚Ä¢ {hero}" for hero in heroes)
            new_main_text = heroes_text
            new_main_keyboard = keyboard
            new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å –≥–µ—Ä–æ—è –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó:"
            new_state = MenuStates.CHARACTER_VIEW
        else:
            # –Ø–∫—â–æ –≥–µ—Ä–æ—ó —â–µ –Ω–µ –¥–æ–¥–∞–Ω—ñ
            new_main_text = "–¶–µ–π –∫–ª–∞—Å –≥–µ—Ä–æ—ó–≤ —â–µ –Ω–µ –¥–æ–¥–∞–Ω–∏–π."
            new_main_keyboard = get_characters_menu()
            new_interactive_text = "–ú–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤"
            new_state = MenuStates.CHARACTERS_MENU

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    new_main_message = await bot.send_message(
        chat_id=message.chat.id,
        text=new_main_text,
        reply_markup=new_main_keyboard,
        parse_mode="HTML"
    )
    new_bot_message_id = new_main_message.message_id

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    try:
        await bot.delete_message(chat_id=message.chat.id, message_id=bot_message_id)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞: {e}")

    # –û–Ω–æ–≤–ª—é—î–º–æ bot_message_id –≤ —Å—Ç–∞–Ω—ñ
    await state.update_data(bot_message_id=new_bot_message_id)

    # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        await bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=interactive_message_id,
            text=new_interactive_text,
            parse_mode="HTML",
            reply_markup=get_generic_inline_keyboard()
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        new_interactive_message = await bot.send_message(
            chat_id=message.chat.id,
            text=new_interactive_text,
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )
        await state.update_data(interactive_message_id=new_interactive_message.message_id)

    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await state.set_state(new_state)


# –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é –ë—ñ–ª–¥
@router.message(MenuStates.BUILDS_MENU, Text(equals=[button.value for button in BuildsMenuButtons]))
async def handle_builds_menu(message: Message, state: FSMContext, bot: Bot):
    user_choice = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ '{user_choice}' –≤ –º–µ–Ω—é –ë—ñ–ª–¥")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    # –û—Ç—Ä–∏–º—É—î–º–æ IDs –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ —Å—Ç–∞–Ω—É
    data = await state.get_data()
    bot_message_id = data.get('bot_message_id')
    interactive_message_id = data.get('interactive_message_id')

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
    new_main_text = ""
    new_main_keyboard = None
    new_interactive_text = ""
    new_state = None

    if user_choice == BuildsMenuButtons.CREATE_BUILD.value:
        # –û–±—Ä–æ–±–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—ñ–ª–¥–∞
        create_build_text = "üèóÔ∏è <b>–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ë—ñ–ª–¥–∞</b>\n–í–≤–µ–¥—ñ—Ç—å –¥–µ—Ç–∞–ª—ñ –≤–∞—à–æ–≥–æ –±—ñ–ª–¥–∞..."
        new_main_text = create_build_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = "–í–≤–µ–¥—ñ—Ç—å –¥–µ—Ç–∞–ª—ñ –≤–∞—à–æ–≥–æ –±—ñ–ª–¥–∞:"
        new_state = MenuStates.CHARACTER_VIEW  # –ú–æ–∂–ª–∏–≤–æ, –æ–∫—Ä–µ–º–∏–π —Å—Ç–∞–Ω
    elif user_choice == BuildsMenuButtons.MY_BUILDS.value:
        # –û–±—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–≥–ª—è–¥—É –æ–±—Ä–∞–Ω–∏—Ö –±—ñ–ª–¥—ñ–≤
        my_builds_text = "üìÑ <b>–û–±—Ä–∞–Ω—ñ –ë—ñ–ª–¥–∏</b>\n–í–∞—à—ñ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –±—ñ–ª–¥–∏..."
        new_main_text = my_builds_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = "–í–∞—à—ñ –æ–±—Ä–∞–Ω—ñ –±—ñ–ª–¥–∏:"
        new_state = MenuStates.CHARACTER_VIEW  # –ú–æ–∂–ª–∏–≤–æ, –æ–∫—Ä–µ–º–∏–π —Å—Ç–∞–Ω
    elif user_choice == BuildsMenuButtons.POPULAR_BUILDS.value:
        # –û–±—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–≥–ª—è–¥—É –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –±—ñ–ª–¥—ñ–≤
        popular_builds_text = "üî• <b>–ü–æ–ø—É–ª—è—Ä–Ω—ñ –ë—ñ–ª–¥–∏</b>\n–ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ –±—ñ–ª–¥–∏ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏..."
        new_main_text = popular_builds_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = "–ü–æ–ø—É–ª—è—Ä–Ω—ñ –±—ñ–ª–¥–∏:"
        new_state = MenuStates.CHARACTER_VIEW  # –ú–æ–∂–ª–∏–≤–æ, –æ–∫—Ä–µ–º–∏–π —Å—Ç–∞–Ω
    elif user_choice == BuildsMenuButtons.BACK.value:
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó
        new_main_text = "üß≠ <b>–ú–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó</b>"
        new_main_keyboard = get_navigation_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó –Ω–∏–∂—á–µ:"
        new_state = MenuStates.NAVIGATION_MENU
    else:
        # –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ."
        new_main_keyboard = get_builds_menu()
        new_interactive_text = "–ú–µ–Ω—é –ë—ñ–ª–¥"
        new_state = MenuStates.BUILDS_MENU

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    new_main_message = await bot.send_message(
        chat_id=message.chat.id,
        text=new_main_text,
        reply_markup=new_main_keyboard,
        parse_mode="HTML"
    )
    new_bot_message_id = new_main_message.message_id

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    try:
        await bot.delete_message(chat_id=message.chat.id, message_id=bot_message_id)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞: {e}")

    # –û–Ω–æ–≤–ª—é—î–º–æ bot_message_id –≤ —Å—Ç–∞–Ω—ñ
    await state.update_data(bot_message_id=new_bot_message_id)

    # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        await bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=interactive_message_id,
            text=new_interactive_text,
            parse_mode="HTML",
            reply_markup=get_generic_inline_keyboard()
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        new_interactive_message = await bot.send_message(
            chat_id=message.chat.id,
            text=new_interactive_text,
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )
        await state.update_data(interactive_message_id=new_interactive_message.message_id)

    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await state.set_state(new_state)


# –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤
@router.message(MenuStates.COUNTER_PICKS_MENU, Text(equals=[button.value for button in CounterPicksMenuButtons]))
async def handle_counter_picks_menu(message: Message, state: FSMContext, bot: Bot):
    user_choice = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ '{user_choice}' –≤ –º–µ–Ω—é –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    # –û—Ç—Ä–∏–º—É—î–º–æ IDs –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ —Å—Ç–∞–Ω—É
    data = await state.get_data()
    bot_message_id = data.get('bot_message_id')
    interactive_message_id = data.get('interactive_message_id')

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
    new_main_text = ""
    new_main_keyboard = None
    new_interactive_text = ""
    new_state = None

    if user_choice == CounterPicksMenuButtons.COUNTER_SEARCH.value:
        # –û–±—Ä–æ–±–∫–∞ –ø–æ—à—É–∫—É –∫–æ–Ω—Ç—Ä-–ø—ñ–∫–∞
        search_text = "üîé –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –≥–µ—Ä–æ—è –¥–ª—è –ø–æ—à—É–∫—É –∫–æ–Ω—Ç—Ä-–ø—ñ–∫–∞:"
        new_main_text = search_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = search_text
        new_state = MenuStates.SEARCH_HERO
    elif user_choice == CounterPicksMenuButtons.COUNTER_LIST.value:
        # –û–±—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–≥–ª—è–¥—É —Å–ø–∏—Å–∫—É –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤
        counter_list_text = "üìù <b>–°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤</b>\n–û—Å—å —Å–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ –¥–ª—è –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤..."
        new_main_text = counter_list_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = "–°–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ –¥–ª—è –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤:"
        new_state = MenuStates.CHARACTER_VIEW  # –ú–æ–∂–ª–∏–≤–æ, –æ–∫—Ä–µ–º–∏–π —Å—Ç–∞–Ω
    elif user_choice == CounterPicksMenuButtons.BACK.value:
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó
        new_main_text = "üß≠ <b>–ú–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó</b>"
        new_main_keyboard = get_navigation_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó –Ω–∏–∂—á–µ:"
        new_state = MenuStates.NAVIGATION_MENU
    else:
        # –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ."
        new_main_keyboard = get_counter_picks_menu()
        new_interactive_text = "–ú–µ–Ω—é –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤"
        new_state = MenuStates.COUNTER_PICKS_MENU

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    new_main_message = await bot.send_message(
        chat_id=message.chat.id,
        text=new_main_text,
        reply_markup=new_main_keyboard,
        parse_mode="HTML"
    )
    new_bot_message_id = new_main_message.message_id

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    try:
        await bot.delete_message(chat_id=message.chat.id, message_id=bot_message_id)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞: {e}")

    # –û–Ω–æ–≤–ª—é—î–º–æ bot_message_id –≤ —Å—Ç–∞–Ω—ñ
    await state.update_data(bot_message_id=new_bot_message_id)

    # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        await bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=interactive_message_id,
            text=new_interactive_text,
            parse_mode="HTML",
            reply_markup=get_generic_inline_keyboard()
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        new_interactive_message = await bot.send_message(
            chat_id=message.chat.id,
            text=new_interactive_text,
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )
        await state.update_data(interactive_message_id=new_interactive_message.message_id)

    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await state.set_state(new_state)


# –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é –ì–∞–π–¥—ñ–≤
@router.message(MenuStates.GUIDES_MENU, Text(equals=[button.value for button in GuidesMenuButtons]))
async def handle_guides_menu(message: Message, state: FSMContext, bot: Bot):
    user_choice = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ '{user_choice}' –≤ –º–µ–Ω—é –ì–∞–π–¥—ñ–≤")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    # –û—Ç—Ä–∏–º—É—î–º–æ IDs –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ —Å—Ç–∞–Ω—É
    data = await state.get_data()
    bot_message_id = data.get('bot_message_id')
    interactive_message_id = data.get('interactive_message_id')

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
    new_main_text = ""
    new_main_keyboard = None
    new_interactive_text = ""
    new_state = None

    if user_choice == GuidesMenuButtons.NEW_GUIDES.value:
        # –û–±—Ä–æ–±–∫–∞ –Ω–æ–≤–∏—Ö –≥–∞–π–¥—ñ–≤
        new_guides_text = "üÜï <b>–ù–æ–≤—ñ –ì–∞–π–¥–∏</b>\n–û—Å—å —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–∏—Ö –≥–∞–π–¥—ñ–≤..."
        new_main_text = new_guides_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = "–ù–æ–≤—ñ –≥–∞–π–¥–∏:"
        new_state = MenuStates.GUIDE_VIEW
    elif user_choice == GuidesMenuButtons.TOP_GUIDES.value:
        # –û–±—Ä–æ–±–∫–∞ —Ç–æ–ø –≥–∞–π–¥—ñ–≤
        top_guides_text = "üåü <b>–¢–æ–ø –ì–∞–π–¥–∏</b>\n–û—Å—å —Å–ø–∏—Å–æ–∫ —Ç–æ–ø–æ–≤–∏—Ö –≥–∞–π–¥—ñ–≤..."
        new_main_text = top_guides_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = "–¢–æ–ø –≥–∞–π–¥–∏:"
        new_state = MenuStates.GUIDE_VIEW
    elif user_choice == GuidesMenuButtons.BEGINNER_GUIDES.value:
        # –û–±—Ä–æ–±–∫–∞ –≥–∞–π–¥—ñ–≤ –¥–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤
        beginner_guides_text = "üìò <b>–ì–∞–π–¥–∏ –¥–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤</b>\n–û—Å—å –≥–∞–π–¥–∏ –¥–ª—è –Ω–æ–≤–∞—á–∫—ñ–≤..."
        new_main_text = beginner_guides_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = "–ì–∞–π–¥–∏ –¥–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤:"
        new_state = MenuStates.GUIDE_VIEW
    elif user_choice == GuidesMenuButtons.ADVANCED_GUIDES.value:
        # –û–±—Ä–æ–±–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥—ñ–π –≥—Ä–∏
        advanced_guides_text = "üßô <b>–°—Ç—Ä–∞—Ç–µ–≥—ñ—ó –ì—Ä–∏</b>\n–û—Å—å —Å—Ç—Ä–∞—Ç–µ–≥—ñ—á–Ω—ñ –≥–∞–π–¥–∏..."
        new_main_text = advanced_guides_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = "–°—Ç—Ä–∞—Ç–µ–≥—ñ—ó –ì—Ä–∏:"
        new_state = MenuStates.GUIDE_VIEW
    elif user_choice == GuidesMenuButtons.TEAMPLAY_GUIDES.value:
        # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–Ω–æ—ó –≥—Ä–∏
        teamplay_guides_text = "ü§ù <b>–ö–æ–º–∞–Ω–¥–Ω–∞ –ì—Ä–∞</b>\n–û—Å—å –≥–∞–π–¥–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥–Ω–æ—ó –≥—Ä–∏..."
        new_main_text = teamplay_guides_text
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = "–ö–æ–º–∞–Ω–¥–Ω–∞ –ì—Ä–∞:"
        new_state = MenuStates.GUIDE_VIEW
    elif user_choice == GuidesMenuButtons.BACK.value:
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó
        new_main_text = "üß≠ <b>–ú–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó</b>"
        new_main_keyboard = get_navigation_menu()
        new_interactive_text = "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó –Ω–∏–∂—á–µ:"
        new_state = MenuStates.NAVIGATION_MENU
    else:
        # –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ."
        new_main_keyboard = get_guides_menu()
        new_interactive_text = "–ú–µ–Ω—é –ì–∞–π–¥—ñ–≤"
        new_state = MenuStates.GUIDES_MENU

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    new_main_message = await bot.send_message(
        chat_id=message.chat.id,
        text=new_main_text,
        reply_markup=new_main_keyboard,
        parse_mode="HTML"
    )
    new_bot_message_id = new_main_message.message_id

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    try:
        await bot.delete_message(chat_id=message.chat.id, message_id=bot_message_id)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞: {e}")

    # –û–Ω–æ–≤–ª—é—î–º–æ bot_message_id –≤ —Å—Ç–∞–Ω—ñ
    await state.update_data(bot_message_id=new_bot_message_id)

    # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        await bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=interactive_message_id,
            text=new_interactive_text,
            parse_mode="HTML",
            reply_markup=get_generic_inline_keyboard()
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        new_interactive_message = await bot.send_message(
            chat_id=message.chat.id,
            text=new_interactive_text,
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )
        await state.update_data(interactive_message_id=new_interactive_message.message_id)

    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await state.set_state(new_state)


# –û–±—Ä–æ–±–Ω–∏–∫ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
@router.callback_query()
async def handle_inline_buttons(callback: CallbackQuery, state: FSMContext, bot: Bot):
    data = callback.data
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {callback.from_user.id} –Ω–∞—Ç–∏—Å–Ω—É–≤ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É: {data}")

    # –û—Ç—Ä–∏–º—É—î–º–æ interactive_message_id –∑ —Å—Ç–∞–Ω—É
    state_data = await state.get_data()
    interactive_message_id = state_data.get('interactive_message_id')

    if not interactive_message_id:
        logger.error("interactive_message_id –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        await bot.send_message(
            chat_id=callback.message.chat.id,
            text="–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )
        await callback.answer()
        return

    # –û–±—Ä–æ–±–∫–∞ —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
    if data.startswith("guides_"):
        # –û—Ç—Ä–∏–º—É—î–º–æ ID –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        _, character_id = data.split("_")
        character_id = int(character_id)
        # –õ–æ–≥—ñ–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑—É –≥–∞–π–¥—ñ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        guide_info = f"üìö –ì–∞–π–¥–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∑ ID {character_id} —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ."
        # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        try:
            await bot.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=interactive_message_id,
                text=guide_info,
                parse_mode="HTML",
                reply_markup=get_guide_inline_keyboard(character_id)
            )
            await state.set_state(MenuStates.GUIDE_VIEW)
        except Exception as e:
            logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
            await bot.send_message(
                chat_id=callback.message.chat.id,
                text="–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
                reply_markup=get_generic_inline_keyboard(),
                parse_mode="HTML"
            )
    elif data.startswith("next_"):
        # –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        _, current_id = data.split("_")
        next_id = int(current_id) + 1  # –õ–æ–≥—ñ–∫–∞ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ ID

        # –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ —É –≤–∞—Å —î —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –æ—Ç—Ä–∏–º—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∑–∞ ID
        # –¢—É—Ç –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ –∑–∞–≥–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–∫–ª–∞–¥—É
        character_info = f"ü¶∏‚Äç‚ôÇÔ∏è <b>–ü–µ—Ä—Å–æ–Ω–∞–∂:</b> –ì–µ—Ä–æ–π –∑ ID {next_id}\nüÜî <b>ID:</b> {next_id}\n–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è..."
        try:
            await bot.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=interactive_message_id,
                text=character_info,
                parse_mode="HTML",
                reply_markup=get_character_inline_keyboard(next_id)
            )
            await state.set_state(MenuStates.CHARACTER_VIEW)
        except Exception as e:
            logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
            await bot.send_message(
                chat_id=callback.message.chat.id,
                text="–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
                reply_markup=get_generic_inline_keyboard(),
                parse_mode="HTML"
            )
    elif data.startswith("prev_"):
        # –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        _, current_id = data.split("_")
        prev_id = int(current_id) - 1  # –õ–æ–≥—ñ–∫–∞ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ ID

        # –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ —É –≤–∞—Å —î —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –æ—Ç—Ä–∏–º—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∑–∞ ID
        # –¢—É—Ç –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ –∑–∞–≥–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–∫–ª–∞–¥—É
        character_info = f"ü¶∏‚Äç‚ôÇÔ∏è <b>–ü–µ—Ä—Å–æ–Ω–∞–∂:</b> –ì–µ—Ä–æ–π –∑ ID {prev_id}\nüÜî <b>ID:</b> {prev_id}\n–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è..."
        try:
            await bot.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=interactive_message_id,
                text=character_info,
                parse_mode="HTML",
                reply_markup=get_character_inline_keyboard(prev_id)
            )
            await state.set_state(MenuStates.CHARACTER_VIEW)
        except Exception as e:
            logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
            await bot.send_message(
                chat_id=callback.message.chat.id,
                text="–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
                reply_markup=get_generic_inline_keyboard(),
                parse_mode="HTML"
            )
    elif data.startswith("next_guide_"):
        # –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –≥–∞–π–¥—É
        _, guide_id = data.split("_guide_")
        next_guide_id = int(guide_id) + 1  # –õ–æ–≥—ñ–∫–∞ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –≥–∞–π–¥—É

        # –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ —É –≤–∞—Å —î —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –æ—Ç—Ä–∏–º—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥–∞–π–¥ –∑–∞ ID
        # –¢—É—Ç –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ –∑–∞–≥–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–∫–ª–∞–¥—É
        guide_info = f"üìö <b>–ì–∞–π–¥:</b> –ì–∞–π–¥ –∑ ID {next_guide_id}\nüÜî <b>ID:</b> {next_guide_id}\n–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è..."
        try:
            await bot.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=interactive_message_id,
                text=guide_info,
                parse_mode="HTML",
                reply_markup=get_guide_inline_keyboard(next_guide_id)
            )
            await state.set_state(MenuStates.GUIDE_VIEW)
        except Exception as e:
            logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
            await bot.send_message(
                chat_id=callback.message.chat.id,
                text="–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
                reply_markup=get_generic_inline_keyboard(),
                parse_mode="HTML"
            )
    elif data == "additional_info":
        # –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ –î–æ–¥–∞—Ç–∫–æ–≤–∞ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
        additional_info = "üìÑ –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ."
        try:
            await bot.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=interactive_message_id,
                text=additional_info,
                parse_mode="HTML",
                reply_markup=get_generic_inline_keyboard()
            )
        except Exception as e:
            logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
            await bot.send_message(
                chat_id=callback.message.chat.id,
                text="–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
                reply_markup=get_generic_inline_keyboard(),
                parse_mode="HTML"
            )
    elif data == "back_to_menu":
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        user_first_name = callback.from_user.first_name
        main_menu_text = f"–ü—Ä–∏–≤—ñ—Ç, {user_first_name}! –í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –Ω–∏–∂—á–µ:"
        main_menu_message = await bot.send_message(
            chat_id=callback.message.chat.id,
            text=main_menu_text,
            reply_markup=get_main_menu(),
            parse_mode="HTML"
        )
        new_bot_message_id = main_menu_message.message_id

        # –û–Ω–æ–≤–ª—é—î–º–æ bot_message_id
        await state.update_data(bot_message_id=new_bot_message_id)

        # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        new_interactive_text = "–¶–µ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω –≤–∞—à–æ–≥–æ –±–æ—Ç–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó."
        try:
            await bot.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=interactive_message_id,
                text=new_interactive_text,
                parse_mode="HTML",
                reply_markup=get_generic_inline_keyboard()
            )
        except Exception as e:
            logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
            # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            new_interactive_message = await bot.send_message(
                chat_id=callback.message.chat.id,
                text=new_interactive_text,
                reply_markup=get_generic_inline_keyboard(),
                parse_mode="HTML"
            )
            await state.update_data(interactive_message_id=new_interactive_message.message_id)

        # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
        old_bot_message_id = data.get('bot_message_id')
        if old_bot_message_id:
            try:
                await bot.delete_message(chat_id=callback.message.chat.id, message_id=old_bot_message_id)
            except Exception as e:
                logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞: {e}")

        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ MAIN_MENU
        await state.set_state(MenuStates.MAIN_MENU)
    else:
        # –û–±—Ä–æ–±–∫–∞ —ñ–Ω—à–∏—Ö —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫ –∑–∞ –ø–æ—Ç—Ä–µ–±–æ—é
        await bot.answer_callback_query(callback.id, text="–¶—è –∫–Ω–æ–ø–∫–∞ —â–µ –Ω–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞.")

    await callback.answer()


# –û–±—Ä–æ–±–Ω–∏–∫ –ø–µ—Ä–µ–≥–ª—è–¥—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
@router.message(MenuStates.CHARACTER_VIEW)
async def handle_character_view(message: Message, state: FSMContext, bot: Bot):
    hero_name = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –≥–µ—Ä–æ—è: {hero_name}")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    # –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —É –≤–∞—Å —î —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –≥–µ—Ä–æ—è
    # –ù–∞–ø—Ä–∏–∫–ª–∞–¥, get_hero_info(hero_name)
    # –¢—É—Ç –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ –∑–∞–≥–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–∫–ª–∞–¥—É
    hero_id = 123  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π ID –≥–µ—Ä–æ—è
    hero_info = f"ü¶∏‚Äç‚ôÇÔ∏è <b>–ü–µ—Ä—Å–æ–Ω–∞–∂:</b> {hero_name}\nüÜî <b>ID:</b> {hero_id}\n–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {hero_name}..."

    # –û—Ç—Ä–∏–º—É—î–º–æ interactive_message_id –∑ —Å—Ç–∞–Ω—É
    data = await state.get_data()
    interactive_message_id = data.get('interactive_message_id')

    # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –≥–µ—Ä–æ—è
    try:
        await bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=interactive_message_id,
            text=hero_info,
            parse_mode="HTML",
            reply_markup=get_character_inline_keyboard(hero_id)
        )
        await state.set_state(MenuStates.CHARACTER_VIEW)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        await bot.send_message(
            chat_id=message.chat.id,
            text="–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )


# –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ—à—É–∫—É –≥–µ—Ä–æ—è
@router.message(MenuStates.SEARCH_HERO)
async def handle_search_hero(message: Message, state: FSMContext, bot: Bot):
    hero_name = message.text.strip()
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} —à—É–∫–∞—î –≥–µ—Ä–æ—è: {hero_name}")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    if not hero_name:
        await bot.send_message(
            chat_id=message.chat.id,
            text="–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è –≥–µ—Ä–æ—è –¥–ª—è –ø–æ—à—É–∫—É.",
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )
        return

    # –õ–æ–≥—ñ–∫–∞ –ø–æ—à—É–∫—É –≥–µ—Ä–æ—è (–º–æ–∂–ª–∏–≤–æ, –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö)
    # –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ –≥–µ—Ä–æ–π –∑–Ω–∞–π–¥–µ–Ω–∏–π
    hero_id = 124  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π ID –≥–µ—Ä–æ—è
    hero_info = f"ü¶∏‚Äç‚ôÇÔ∏è <b>–ü–µ—Ä—Å–æ–Ω–∞–∂:</b> {hero_name}\nüÜî <b>ID:</b> {hero_id}\n–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {hero_name}..."

    # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –≥–µ—Ä–æ—è
    try:
        await bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=state_data := await state.get_data(),
            text=hero_info,
            parse_mode="HTML",
            reply_markup=get_character_inline_keyboard(hero_id)
        )
        await state.set_state(MenuStates.CHARACTER_VIEW)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        await bot.send_message(
            chat_id=message.chat.id,
            text="–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )


# –û–±—Ä–æ–±–Ω–∏–∫ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–≥—É–∫—É
@router.message(MenuStates.FEEDBACK_MENU, Text(equals=FeedbackMenuButtons.SEND_FEEDBACK.value))
async def handle_send_feedback(message: Message, state: FSMContext, bot: Bot):
    feedback_text = message.text.strip()
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –Ω–∞–¥—Å–∏–ª–∞—î –≤—ñ–¥–≥—É–∫: {feedback_text}")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    if not feedback_text:
        await bot.send_message(
            chat_id=message.chat.id,
            text="–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à –≤—ñ–¥–≥—É–∫.",
            reply_markup=get_feedback_menu(),
            parse_mode="HTML"
        )
        return

    # –õ–æ–≥—ñ–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤—ñ–¥–≥—É–∫—É (–º–æ–∂–ª–∏–≤–æ, –∑–∞–ø–∏—Å —É –±–∞–∑—É –¥–∞–Ω–∏—Ö –∞–±–æ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É)
    # –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ –≤—ñ–¥–≥—É–∫ —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ
    await bot.send_message(
        chat_id=message.chat.id,
        text="–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫!",
        reply_markup=get_generic_inline_keyboard(),
        parse_mode="HTML"
    )

    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ –º–µ–Ω—é –ó–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –ó–≤'—è–∑–∫—É
    await state.set_state(MenuStates.FEEDBACK_MENU)


# –û–±—Ä–æ–±–Ω–∏–∫ –∑–≤—ñ—Ç—É –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
@router.message(MenuStates.FEEDBACK_MENU, Text(equals=FeedbackMenuButtons.REPORT_BUG.value))
async def handle_report_bug(message: Message, state: FSMContext, bot: Bot):
    bug_report = message.text.strip()
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤—ñ–¥–æ–º–∏–≤ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É: {bug_report}")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    if not bug_report:
        await bot.send_message(
            chat_id=message.chat.id,
            text="–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–ø–∏—à—ñ—Ç—å –ø–æ–º–∏–ª–∫—É, —è–∫—É –≤–∏ –∑–Ω–∞–π—à–ª–∏.",
            reply_markup=get_feedback_menu(),
            parse_mode="HTML"
        )
        return

    # –õ–æ–≥—ñ–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∑–≤—ñ—Ç—É –ø—Ä–æ –ø–æ–º–∏–ª–∫—É (–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∞–±–æ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É)
    # –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ –∑–≤—ñ—Ç —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ
    await bot.send_message(
        chat_id=message.chat.id,
        text="–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à –∑–≤—ñ—Ç –ø—Ä–æ –ø–æ–º–∏–ª–∫—É!",
        reply_markup=get_generic_inline_keyboard(),
        parse_mode="HTML"
    )

    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ –º–µ–Ω—é –ó–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –ó–≤'—è–∑–∫—É
    await state.set_state(MenuStates.FEEDBACK_MENU)


# –û–±—Ä–æ–±–Ω–∏–∫ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö —á–µ—Ä–µ–∑ GPT
@router.message(MenuStates.GPT_MENU, Text(equals=GPTMenuButtons.GENERATE_DATA.value))
async def handle_gpt_generate_data(message: Message, state: FSMContext, bot: Bot):
    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
    prompt_text = "ü§ñ <b>–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –î–∞–Ω–∏—Ö</b>\n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –∑–∞–ø–∏—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö:"
    await bot.send_message(
        chat_id=message.chat.id,
        text=prompt_text,
        reply_markup=ReplyKeyboardRemove(),
        parse_mode="HTML"
    )

    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
    await state.set_state(MenuStates.GPT_ASK_QUESTION)


# –û–±—Ä–æ–±–Ω–∏–∫ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –¥–ª—è GPT
@router.message(MenuStates.GPT_ASK_QUESTION)
async def handle_gpt_question(message: Message, state: FSMContext, bot: Bot):
    question = message.text.strip()
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –∑–∞–¥–∞–≤ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è GPT: {question}")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    if not question:
        await bot.send_message(
            chat_id=message.chat.id,
            text="–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è.",
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )
        return

    # –û—Ç—Ä–∏–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ GPT
    response = await get_gpt_response(question)

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
    await bot.send_message(
        chat_id=message.chat.id,
        text=f"<b>–í—ñ–¥–ø–æ–≤—ñ–¥—å AI:</b>\n{response}",
        parse_mode="HTML",
        reply_markup=get_generic_inline_keyboard()
    )

    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ –º–µ–Ω—é GPT
    await state.set_state(MenuStates.GPT_MENU)


# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@router.message()
async def unknown_command(message: Message, state: FSMContext, bot: Bot):
    logger.warning(f"–ù–µ–≤—ñ–¥–æ–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {message.from_user.id}: {message.text}")

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await message.delete()
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω
    current_state = await state.get_state()
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –º–∞—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω: {current_state}")

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å—Ç–∞–Ω—É
    if current_state == MenuStates.MAIN_MENU.state:
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ."
        new_main_keyboard = get_main_menu()
        new_interactive_text = "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"
        new_state = MenuStates.MAIN_MENU
    elif current_state == MenuStates.NAVIGATION_MENU.state:
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ."
        new_main_keyboard = get_navigation_menu()
        new_interactive_text = "–ú–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—ó"
        new_state = MenuStates.NAVIGATION_MENU
    elif current_state == MenuStates.CHARACTERS_MENU.state:
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ."
        new_main_keyboard = get_characters_menu()
        new_interactive_text = "–ú–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤"
        new_state = MenuStates.CHARACTERS_MENU
    elif current_state == MenuStates.CHARACTER_VIEW.state:
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ."
        new_main_keyboard = get_generic_inline_keyboard()
        new_interactive_text = "–ü–µ—Ä–µ–≥–ª—è–¥ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
        new_state = MenuStates.CHARACTER_VIEW
    elif current_state == MenuStates.GUIDE_VIEW.state:
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ."
        new_main_keyboard = get_generic_inline_keyboard()
        new_interactive_text = "–ü–µ—Ä–µ–≥–ª—è–¥ –≥–∞–π–¥—É"
        new_state = MenuStates.GUIDE_VIEW
    elif current_state == MenuStates.GPT_ASK_QUESTION.state:
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è."
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –¥–ª—è GPT:"
        new_state = MenuStates.GPT_ASK_QUESTION
    elif current_state == MenuStates.SEARCH_HERO.state:
        new_main_text = "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è –≥–µ—Ä–æ—è –¥–ª—è –ø–æ—à—É–∫—É."
        new_main_keyboard = ReplyKeyboardRemove()
        new_interactive_text = "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –≥–µ—Ä–æ—è –¥–ª—è –ø–æ—à—É–∫—É:"
        new_state = MenuStates.SEARCH_HERO
    else:
        # –í —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        new_main_text = f"–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}! –í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –Ω–∏–∂—á–µ:"
        new_main_keyboard = get_main_menu()
        new_interactive_text = "–¶–µ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω –≤–∞—à–æ–≥–æ –±–æ—Ç–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó."
        new_state = MenuStates.MAIN_MENU

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    new_main_message = await bot.send_message(
        chat_id=message.chat.id,
        text=new_main_text,
        reply_markup=new_main_keyboard,
        parse_mode="HTML"
    )
    new_bot_message_id = new_main_message.message_id

    # –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é, —è–∫—â–æ —î
    if 'bot_message_id' in data := await state.get_data():
        old_bot_message_id = data.get('bot_message_id')
        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=old_bot_message_id)
        except Exception as e:
            logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞: {e}")

    # –†–µ–¥–∞–≥—É—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        await bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=interactive_message_id,
            text=new_interactive_text,
            parse_mode="HTML",
            reply_markup=get_generic_inline_keyboard()
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        new_interactive_message = await bot.send_message(
            chat_id=message.chat.id,
            text=new_interactive_text,
            reply_markup=get_generic_inline_keyboard(),
            parse_mode="HTML"
        )
        await state.update_data(interactive_message_id=new_interactive_message.message_id)

    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await state.set_state(new_state)


# –ó–∞–≥–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
@router.errors()
async def handle_error(update: object, exception: Exception):
    logger.error(f"–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {exception}")
    # –ú–æ–∂–Ω–∞ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É —Ç—É—Ç
    # –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:
    if isinstance(update, CallbackQuery):
        await update.message.answer("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
    elif isinstance(update, Message):
        await update.answer("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")