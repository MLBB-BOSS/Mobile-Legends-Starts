# keyboards/menus.py

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from enum import Enum
import logging

logger = logging.getLogger(__name__)

class MenuButton(Enum):
    # –ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é
    NAVIGATION = "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è"
    PROFILE = "ü™™ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å"

    # –†–æ–∑–¥—ñ–ª –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
    HEROES = "üõ°Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ"
    GUIDES = "üìö –ì–∞–π–¥–∏"
    COUNTER_PICKS = "‚öñÔ∏è –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏"
    BUILDS = "‚öúÔ∏è –ë—ñ–ª–¥–∏"
    VOTING = "üìä –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
    BACK = "üîÑ –ù–∞–∑–∞–¥"

    # –†–æ–∑–¥—ñ–ª –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ
    TANK = "üõ°Ô∏è –¢–∞–Ω–∫"
    MAGE = "üßô‚Äç‚ôÇÔ∏è –ú–∞–≥"
    MARKSMAN = "üéØ –°—Ç—Ä—ñ–ª–µ—Ü—å"
    ASSASSIN = "üó°Ô∏è –ê—Å–∞—Å—ñ–Ω"
    SUPPORT = "‚ù§Ô∏è –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"
    FIGHTER = "ü•ä –ë–æ—î—Ü—å"
    COMPARISON = "‚öñÔ∏è –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è"
    SEARCH_HERO = "üîé –ü–æ—à—É–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞"

    # –†–æ–∑–¥—ñ–ª –ì–∞–π–¥–∏
    NEW_GUIDES = "üÜï –ù–æ–≤—ñ –ì–∞–π–¥–∏"
    POPULAR_GUIDES = "‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ì–∞–π–¥–∏"
    BEGINNER_GUIDES = "üë∂ –ì–∞–π–¥–∏ –¥–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤"
    ADVANCED_TECHNIQUES = "üöÄ –ü—Ä–æ—Å—É–Ω—É—Ç—ñ –¢–µ—Ö–Ω—ñ–∫–∏"
    TEAMPLAY_GUIDES = "ü§ù –ö–æ–º–∞–Ω–¥–Ω–∞ –ì—Ä–∞"

    # –†–æ–∑–¥—ñ–ª –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏
    COUNTER_SEARCH = "üîç –ü–æ—à—É–∫ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—É"
    COUNTER_LIST = "üìÉ –°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤"

    # –†–æ–∑–¥—ñ–ª –ë—ñ–ª–¥–∏
    CREATE_BUILD = "‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏ –ë—ñ–ª–¥"
    MY_BUILDS = "üìÅ –ú–æ—ó –ë—ñ–ª–¥–∏"
    POPULAR_BUILDS = "üåü –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ë—ñ–ª–¥–∏"

    # –†–æ–∑–¥—ñ–ª –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è
    CURRENT_VOTES = "üó≥Ô∏è –ü–æ—Ç–æ—á–Ω—ñ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è"
    MY_VOTES = "üó≥Ô∏è –ú–æ—ó –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è"
    SUGGEST_TOPIC = "üí° –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –¢–µ–º—É"

    # –†–æ–∑–¥—ñ–ª –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    ACTIVITY = "üìà –ó–∞–≥–∞–ª—å–Ω–∞ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å"
    RANKING = "üèÖ –†–µ–π—Ç–∏–Ω–≥"
    GAME_STATS = "üéÆ –Ü–≥—Ä–æ–≤–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"

    # –†–æ–∑–¥—ñ–ª –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è
    BADGES = "üèÖ –ú–æ—ó –ë–µ–π–¥–∂—ñ"
    PROGRESS = "üìä –ü—Ä–æ–≥—Ä–µ—Å"
    TOURNAMENT_STATS = "üèÜ –¢—É—Ä–Ω—ñ—Ä–Ω–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    AWARDS = "üèÜ –û—Ç—Ä–∏–º–∞–Ω—ñ –ù–∞–≥–æ—Ä–æ–¥–∏"

    # –†–æ–∑–¥—ñ–ª –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    LANGUAGE = "üåê –ú–æ–≤–∞ –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É"
    CHANGE_USERNAME = "‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ Username"
    UPDATE_ID = "üîÑ –û–Ω–æ–≤–∏—Ç–∏ ID –ì—Ä–∞–≤—Ü—è"
    NOTIFICATIONS = "üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è"

    # –†–æ–∑–¥—ñ–ª –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫
    SEND_FEEDBACK = "üì§ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –í—ñ–¥–≥—É–∫"
    REPORT_BUG = "üêû –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ü–æ–º–∏–ª–∫—É"

    # –†–æ–∑–¥—ñ–ª –î–æ–ø–æ–º–æ–≥–∞
    INSTRUCTIONS = "üìñ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó"
    FAQ = "‚ùì FAQ"
    HELP_SUPPORT = "üÜò –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"

    # –ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–±–æ –ø—Ä–æ—Ñ—ñ–ª—é
    BACK_TO_MAIN_MENU = "üîô –ù–∞–∑–∞–¥ –¥–æ –ì–æ–ª–æ–≤–Ω–æ–≥–æ –ú–µ–Ω—é"
    BACK_TO_PROFILE = "üîô –ù–∞–∑–∞–¥ –¥–æ –ü—Ä–æ—Ñ—ñ–ª—é"

def create_menu(buttons, row_width=2):
    """
    –°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏.
    :param buttons: –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ (MenuButton –∞–±–æ str).
    :param row_width: –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ —É —Ä—è–¥–∫—É.
    :return: ReplyKeyboardMarkup
    """
    if not all(isinstance(button, MenuButton) or isinstance(button, str) for button in buttons):
        raise ValueError("–£—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —É —Å–ø–∏—Å–∫—É –∫–Ω–æ–ø–æ–∫ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ MenuButton –∞–±–æ str.")
    logger.info(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏: {[button.value if isinstance(button, MenuButton) else button for button in buttons]}")
    keyboard_buttons = [
        KeyboardButton(text=button.value if isinstance(button, MenuButton) else button) for button in buttons
    ]
    keyboard = [
        keyboard_buttons[i:i + row_width]
        for i in range(0, len(keyboard_buttons), row_width)
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_main_menu():
    return create_menu(
        [
            MenuButton.NAVIGATION,
            MenuButton.PROFILE
        ],
        row_width=2
    )

def get_navigation_menu():
    return create_menu(
        [
            MenuButton.HEROES,
            MenuButton.GUIDES,
            MenuButton.COUNTER_PICKS,
            MenuButton.BUILDS,
            MenuButton.VOTING,
            MenuButton.BACK
        ],
        row_width=3
    )

def get_heroes_menu():
    return create_menu(
        [
            MenuButton.TANK,
            MenuButton.MAGE,
            MenuButton.MARKSMAN,
            MenuButton.ASSASSIN,
            MenuButton.SUPPORT,
            MenuButton.FIGHTER,
            MenuButton.COMPARISON,
            MenuButton.SEARCH_HERO,
            MenuButton.BACK
        ],
        row_width=3
    )

def get_guides_menu():
    return create_menu(
        [
            MenuButton.NEW_GUIDES,
            MenuButton.POPULAR_GUIDES,
            MenuButton.BEGINNER_GUIDES,
            MenuButton.ADVANCED_TECHNIQUES,
            MenuButton.TEAMPLAY_GUIDES,
            MenuButton.BACK
        ],
        row_width=2
    )

def get_counter_picks_menu():
    return create_menu(
        [
            MenuButton.COUNTER_SEARCH,
            MenuButton.COUNTER_LIST,
            MenuButton.BACK
        ],
        row_width=2
    )

def get_builds_menu():
    return create_menu(
        [
            MenuButton.CREATE_BUILD,
            MenuButton.MY_BUILDS,
            MenuButton.POPULAR_BUILDS,
            MenuButton.BACK
        ],
        row_width=2
    )

def get_voting_menu():
    return create_menu(
        [
            MenuButton.CURRENT_VOTES,
            MenuButton.MY_VOTES,
            MenuButton.SUGGEST_TOPIC,
            MenuButton.BACK
        ],
        row_width=2
    )

def get_profile_menu():
    return create_menu(
        [
            MenuButton.STATISTICS,
            MenuButton.ACHIEVEMENTS,
            MenuButton.SETTINGS,
            MenuButton.FEEDBACK,
            MenuButton.HELP,
            MenuButton.BACK_TO_MAIN_MENU
        ],
        row_width=3
    )

def get_statistics_menu():
    return create_menu(
        [
            MenuButton.ACTIVITY,
            MenuButton.RANKING,
            MenuButton.GAME_STATS,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=2
    )

def get_achievements_menu():
    return create_menu(
        [
            MenuButton.BADGES,
            MenuButton.PROGRESS,
            MenuButton.TOURNAMENT_STATS,
            MenuButton.AWARDS,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=2
    )

def get_settings_menu():
    return create_menu(
        [
            MenuButton.LANGUAGE,
            MenuButton.CHANGE_USERNAME,
            MenuButton.UPDATE_ID,
            MenuButton.NOTIFICATIONS,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=2
    )

def get_feedback_menu():
    return create_menu(
        [
            MenuButton.SEND_FEEDBACK,
            MenuButton.REPORT_BUG,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=2
    )

def get_help_menu():
    return create_menu(
        [
            MenuButton.INSTRUCTIONS,
            MenuButton.FAQ,
            MenuButton.HELP_SUPPORT,
            MenuButton.BACK_TO_PROFILE
        ],
        row_width=2
    )

def get_hero_class_menu(hero_class: str) -> ReplyKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—É –≥–µ—Ä–æ—ó–≤.

    :param hero_class: –ö–ª–∞—Å –≥–µ—Ä–æ—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "–¢–∞–Ω–∫", "–ú–∞–≥" —ñ —Ç.–¥.)
    :return: ReplyKeyboardMarkup
    """
    heroes_by_class = {
        "–ë–æ—î—Ü—å": [
            "Balmond", "Alucard", "Bane", "Zilong", "Freya",
            # ... (–≤–∞—à —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤)
        ],
        "–¢–∞–Ω–∫": [
            "Tigreal", "Akai", "Franco", "Minotaur",
            # ... (–≤–∞—à —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤)
        ],
        "–ú–∞–≥": [
            "Vale", "Lunox", "Kadita", "Cecillion", "Luo Yi", "Xavier",
            # ... (–≤–∞—à —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤)
        ],
        "–°—Ç—Ä—ñ–ª–µ—Ü—å": [
            "Yi Sun-shin", "Granger", "Brody",
            # ... (–≤–∞—à —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤)
        ],
        "–ê—Å–∞—Å—ñ–Ω": [
            "Hayabusa", "Helcurt",
            # ... (–≤–∞—à —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤)
        ],
        "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞": [
            "Angela", "Estes",
            # ... (–≤–∞—à —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤)
        ],
        # ... (—ñ–Ω—à—ñ –∫–ª–∞—Å–∏, —è–∫—â–æ —î)
    }

    heroes = heroes_by_class.get(hero_class, [])
    buttons = [KeyboardButton(text=hero) for hero in heroes]
    keyboard = []

    # –†–æ–∑–º—ñ—â—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø–æ 3 –≤ —Ä—è–¥
    for i in range(0, len(buttons), 3):
        keyboard.append(buttons[i:i + 3])

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard.append([KeyboardButton(text=MenuButton.BACK.value)])

    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True
    )
