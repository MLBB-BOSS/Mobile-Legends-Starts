# handlers/base.py

import logging
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from keyboards.menus import (
    MenuButton,
    menu_button_to_class,
    get_main_menu,
    get_navigation_menu,
    get_heroes_menu,
    get_hero_class_menu,
    get_guides_menu,
    get_counter_picks_menu,
    get_builds_menu,
    get_voting_menu,
    get_profile_menu,
    get_statistics_menu,
    get_achievements_menu,
    get_settings_menu,
    get_feedback_menu,
    get_help_menu,
    heroes_by_class,
)
from keyboards.inline_menus import get_generic_inline_keyboard, get_hero_class_inline_keyboard

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)
router = Router()

# –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞–Ω–∏ –º–µ–Ω—é
class MenuStates(StatesGroup):
    MAIN_MENU = State()
    NAVIGATION_MENU = State()
    HEROES_MENU = State()
    HERO_CLASS_MENU = State()
    GUIDES_MENU = State()
    COUNTER_PICKS_MENU = State()
    BUILDS_MENU = State()
    VOTING_MENU = State()
    PROFILE_MENU = State()
    STATISTICS_MENU = State()
    ACHIEVEMENTS_MENU = State()
    SETTINGS_MENU = State()
    FEEDBACK_MENU = State()
    HELP_MENU = State()
    SEARCH_HERO = State()
    # –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ —Å—Ç–∞–Ω–∏ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏

async def send_menu_response(message: Message, description: str, detailed_text: str, reply_markup: types.InlineKeyboardMarkup):
    """
    –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–∞—Ä–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å:
    1. –û–ø–∏—Å –º–µ–Ω—é.
    2. –î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å —Ç–∞ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏.
    """
    await message.answer(
        description,
        parse_mode="HTML"
    )
    await message.answer(
        detailed_text,
        parse_mode="HTML",
        reply_markup=reply_markup
    )

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    user_name = message.from_user.first_name
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –≤–∏–∫–ª–∏–∫–∞–≤ /start")
    await state.set_state(MenuStates.MAIN_MENU)
    
    description = f"üëã <b>–í—ñ—Ç–∞—î–º–æ, {user_name}, —É Mobile Legends Tournament Bot!</b>"
    detailed_text = (
        "üéÆ <b>–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º:</b>\n"
        "‚Ä¢ –û—Ä–≥–∞–Ω—ñ–∑–æ–≤—É–≤–∞—Ç–∏ —Ç—É—Ä–Ω—ñ—Ä–∏\n"
        "‚Ä¢ –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ —Å–∫—Ä—ñ–Ω—à–æ—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤\n"
        "‚Ä¢ –í—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å\n"
        "‚Ä¢ –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è\n\n"
        "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ üëá"
    )
    await send_menu_response(message, description, detailed_text, get_main_menu())

# –ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é - –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
@router.message(MenuStates.MAIN_MENU, F.text == MenuButton.NAVIGATION.value)
async def cmd_navigation(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–∞–≤—ñ–≥–∞—Ü—ñ—é")
    await state.set_state(MenuStates.NAVIGATION_MENU)
    
    description = "üß≠ <b>–ù–∞–≤—ñ–≥–∞—Ü—ñ—è:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É –º–µ–Ω—é –≤–∏ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ —Ä–æ–∑–¥—ñ–ª–∏, —Ç–∞–∫—ñ —è–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ, –ì–∞–π–¥–∏, –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏, –ë—ñ–ª–¥–∏, —Ç–∞ –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è.\n\n"
        "–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ, —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –±—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó."
    )
    await send_menu_response(message, description, detailed_text, get_navigation_menu())

# –ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é - –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å
@router.message(MenuStates.MAIN_MENU, F.text == MenuButton.PROFILE.value)
async def cmd_profile(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å")
    await state.set_state(MenuStates.PROFILE_MENU)
    
    description = "ü™™ <b>–ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —Ç–∞ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Å–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å, –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è, –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ —ñ–Ω—à–µ.\n\n"
        "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –ø—Ä–æ—Ñ—ñ–ª—é –Ω–∏–∂—á–µ –¥–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π."
    )
    await send_menu_response(message, description, detailed_text, get_profile_menu())

# –†–æ–∑–¥—ñ–ª "–ù–∞–≤—ñ–≥–∞—Ü—ñ—è" - –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ
@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.HEROES.value)
async def cmd_heroes(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ")
    await state.set_state(MenuStates.HEROES_MENU)
    
    description = "üõ°Ô∏è <b>–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏ —Ä—ñ–∑–Ω–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ –≥—Ä–∏, –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ó—Ö–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–∞ —ñ–Ω—à—ñ –¥–µ—Ç–∞–ª—ñ.\n\n"
        "–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≥–µ—Ä–æ—è –Ω–∏–∂—á–µ, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤."
    )
    await send_menu_response(message, description, detailed_text, get_heroes_menu())

# –†–æ–∑–¥—ñ–ª "–ù–∞–≤—ñ–≥–∞—Ü—ñ—è" - –ì–∞–π–¥–∏
@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.GUIDES.value)
async def cmd_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ì–∞–π–¥–∏")
    await state.set_state(MenuStates.GUIDES_MENU)
    
    description = "üìö <b>–ì–∞–π–¥–∏:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–Ω–∞–π—Ç–∏ —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω—ñ –≥–∞–π–¥–∏ –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –≤–∞—à–æ—ó –≥—Ä–∏, –Ω–∞–≤—á–∞–Ω–Ω—è –Ω–æ–≤–∏–º —Å—Ç—Ä–∞—Ç–µ–≥—ñ—è–º —Ç–∞ —Ç–µ—Ö–Ω—ñ–∫–∞–º.\n\n"
        "–í–∏–±–µ—Ä—ñ—Ç—å –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª –≥–∞–π–¥—ñ–≤ –Ω–∏–∂—á–µ –¥–ª—è –±—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó."
    )
    await send_menu_response(message, description, detailed_text, get_guides_menu())

# –†–æ–∑–¥—ñ–ª "–ù–∞–≤—ñ–≥–∞—Ü—ñ—è" - –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏
@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.COUNTER_PICKS.value)
async def cmd_counter_picks(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏")
    await state.set_state(MenuStates.COUNTER_PICKS_MENU)
    
    description = "‚öñÔ∏è <b>–ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è, —è–∫—ñ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ —î –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏–º–∏ –∫–æ–Ω—Ç—Ä-–ø—ñ–∫–∞–º–∏ –ø—Ä–æ—Ç–∏ —ñ–Ω—à–∏—Ö –≥–µ—Ä–æ—ó–≤.\n\n"
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤ –Ω–∏–∂—á–µ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Å–ø–∏—Å–∫—É."
    )
    await send_menu_response(message, description, detailed_text, get_counter_picks_menu())

# –†–æ–∑–¥—ñ–ª "–ù–∞–≤—ñ–≥–∞—Ü—ñ—è" - –ë—ñ–ª–¥–∏
@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.BUILDS.value)
async def cmd_builds(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ë—ñ–ª–¥–∏")
    await state.set_state(MenuStates.BUILDS_MENU)
    
    description = "‚öúÔ∏è <b>–ë—ñ–ª–¥–∏:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —Ç–∞ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –±—ñ–ª–¥–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤.\n\n"
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –±—ñ–ª–¥—ñ–≤ –Ω–∏–∂—á–µ –¥–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π."
    )
    await send_menu_response(message, description, detailed_text, get_builds_menu())

# –†–æ–∑–¥—ñ–ª "–ù–∞–≤—ñ–≥–∞—Ü—ñ—è" - –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è
@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.VOTING.value)
async def cmd_voting(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è")
    await state.set_state(MenuStates.VOTING_MENU)
    
    description = "üìä <b>–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –±—Ä–∞—Ç–∏ —É—á–∞—Å—Ç—å —É –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è—Ö, –ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ —Ç–µ–º–∏ –¥–ª—è –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏.\n\n"
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –Ω–∏–∂—á–µ –¥–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π."
    )
    await send_menu_response(message, description, detailed_text, get_voting_menu())

# –†–æ–∑–¥—ñ–ª "–ù–∞–≤—ñ–≥–∞—Ü—ñ—è" - –ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
@router.message(MenuStates.NAVIGATION_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_main_from_navigation(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")
    await state.set_state(MenuStates.MAIN_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_main_menu())

# –†–æ–∑–¥—ñ–ª "–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ" - –í–∏–±—ñ—Ä –∫–ª–∞—Å—É –≥–µ—Ä–æ—è
@router.message(MenuStates.HEROES_MENU, F.text.in_([
    MenuButton.TANK.value,
    MenuButton.MAGE.value,
    MenuButton.MARKSMAN.value,
    MenuButton.ASSASSIN.value,
    MenuButton.SUPPORT.value,
    MenuButton.FIGHTER.value
]))
async def cmd_hero_class(message: Message, state: FSMContext):
    hero_class = menu_button_to_class.get(message.text)
    if hero_class:
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –∫–ª–∞—Å {hero_class}")
        await state.set_state(MenuStates.HERO_CLASS_MENU)
        await state.update_data(hero_class=hero_class)  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–ª–∞—Å –≥–µ—Ä–æ—è –≤ —Å—Ç–∞–Ω—ñ
        
        description = f"üßô‚Äç‚ôÇÔ∏è <b>{hero_class} –ì–µ—Ä–æ—ó:</b>"
        detailed_text = (
            f"–í–∏–±–µ—Ä—ñ—Ç—å –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É <b>{hero_class}</b>, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –π–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–∞ —ñ–Ω—à—ñ –¥–µ—Ç–∞–ª—ñ."
        )
        await send_menu_response(message, description, detailed_text, get_hero_class_inline_keyboard(hero_class))
    else:
        logger.warning(f"–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–ª–∞—Å –≥–µ—Ä–æ—ó–≤: {message.text}")
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ, —â–æ–± –æ–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–ø—Ü—ñ—ó."
        )
        await send_menu_response(message, description, detailed_text, get_heroes_menu())

# –†–æ–∑–¥—ñ–ª "–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ" - –ü–æ—à—É–∫ –≥–µ—Ä–æ—è
@router.message(MenuStates.HEROES_MENU, F.text == MenuButton.SEARCH_HERO.value)
async def cmd_search_hero(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—à—É–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞")
    await state.set_state(MenuStates.SEARCH_HERO)
    
    description = "üîé <b>–ü–æ—à—É–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞:</b>"
    detailed_text = (
        "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –≥–µ—Ä–æ—è, —è–∫–æ–≥–æ –≤–∏ —à—É–∫–∞—î—Ç–µ. –ë–æ—Ç –Ω–∞–¥–∞—Å—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ü—å–æ–≥–æ –≥–µ—Ä–æ—è, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î."
    )
    await send_menu_response(message, description, detailed_text, get_generic_inline_keyboard())

# –†–æ–∑–¥—ñ–ª "–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ" - –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
@router.message(MenuStates.HEROES_MENU, F.text == MenuButton.COMPARISON.value)
async def cmd_comparison(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è")
    description = "‚öñÔ∏è <b>–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ì–µ—Ä–æ—ó–≤:</b>"
    detailed_text = (
        "–§—É–Ω–∫—Ü—ñ—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≥–µ—Ä–æ—ó–≤ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ. –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏!"
    )
    await send_menu_response(message, description, detailed_text, get_heroes_menu())

# –†–æ–∑–¥—ñ–ª "–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ" - –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
@router.message(MenuStates.HEROES_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_navigation_from_heroes(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è")
    await state.set_state(MenuStates.NAVIGATION_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_navigation_menu())

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É
all_heroes = set()
for heroes in heroes_by_class.values():
    all_heroes.update(heroes)

@router.message(MenuStates.HERO_CLASS_MENU, F.text.in_(all_heroes))
async def cmd_select_hero(message: Message, state: FSMContext):
    hero_name = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –≥–µ—Ä–æ—è {hero_name}")
    await state.set_state(MenuStates.MAIN_MENU)
    
    description = f"üéØ <b>{hero_name}:</b>"
    detailed_text = (
        f"–í–∏ –æ–±—Ä–∞–ª–∏ –≥–µ—Ä–æ—è <b>{hero_name}</b>. –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥–µ—Ä–æ—è –±—É–¥–µ –¥–æ–¥–∞–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ.\n\n"
        f"–ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–±–æ –æ–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—É –æ–ø—Ü—ñ—é."
    )
    await send_menu_response(message, description, detailed_text, get_main_menu())

@router.message(MenuStates.HERO_CLASS_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_heroes_menu(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –º–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ")
    await state.set_state(MenuStates.HEROES_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≥–µ—Ä–æ—è –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_heroes_menu())

# –†–æ–∑–¥—ñ–ª "–ì–∞–π–¥–∏" - –ù–æ–≤—ñ –ì–∞–π–¥–∏
@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.NEW_GUIDES.value)
async def cmd_new_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–æ–≤—ñ –ì–∞–π–¥–∏")
    description = "üÜï <b>–ù–æ–≤—ñ –ì–∞–π–¥–∏:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –Ω–æ–≤–∏—Ö –≥–∞–π–¥—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_guides_menu())

# –†–æ–∑–¥—ñ–ª "–ì–∞–π–¥–∏" - –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ì–∞–π–¥–∏
@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.POPULAR_GUIDES.value)
async def cmd_popular_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ì–∞–π–¥–∏")
    description = "üåü <b>–ü–æ–ø—É–ª—è—Ä–Ω—ñ –ì–∞–π–¥–∏:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –≥–∞–π–¥—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_guides_menu())

# –†–æ–∑–¥—ñ–ª "–ì–∞–π–¥–∏" - –ì–∞–π–¥–∏ –¥–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤
@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.BEGINNER_GUIDES.value)
async def cmd_beginner_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ì–∞–π–¥–∏ –¥–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤")
    description = "üë∂ <b>–ì–∞–π–¥–∏ –¥–ª—è –ü–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –≥–∞–π–¥—ñ–≤ –¥–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_guides_menu())

# –†–æ–∑–¥—ñ–ª "–ì–∞–π–¥–∏" - –ü—Ä–æ—Å—É–Ω—É—Ç—ñ –¢–µ—Ö–Ω—ñ–∫–∏
@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.ADVANCED_TECHNIQUES.value)
async def cmd_advanced_techniques(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü—Ä–æ—Å—É–Ω—É—Ç—ñ –¢–µ—Ö–Ω—ñ–∫–∏")
    description = "üöÄ <b>–ü—Ä–æ—Å—É–Ω—É—Ç—ñ –¢–µ—Ö–Ω—ñ–∫–∏:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Å—É–Ω—É—Ç–∏—Ö —Ç–µ—Ö–Ω—ñ–∫ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_guides_menu())

# –†–æ–∑–¥—ñ–ª "–ì–∞–π–¥–∏" - –ö–æ–º–∞–Ω–¥–Ω–∞ –ì—Ä–∞
@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.TEAMPLAY_GUIDES.value)
async def cmd_teamplay_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ö–æ–º–∞–Ω–¥–Ω—É –ì—Ä—É")
    description = "ü§ù <b>–ö–æ–º–∞–Ω–¥–Ω–∞ –ì—Ä–∞:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –≥–∞–π–¥—ñ–≤ –ø–æ –∫–æ–º–∞–Ω–¥–Ω—ñ–π –≥—Ä—ñ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_guides_menu())

# –†–æ–∑–¥—ñ–ª "–ì–∞–π–¥–∏" - –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
@router.message(MenuStates.GUIDES_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_navigation_from_guides(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –∑ –ì–∞–π–¥—ñ–≤")
    await state.set_state(MenuStates.NAVIGATION_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_navigation_menu())

# –†–æ–∑–¥—ñ–ª "–ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏" - –ü–æ—à—É–∫ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—É
@router.message(MenuStates.COUNTER_PICKS_MENU, F.text == MenuButton.COUNTER_SEARCH.value)
async def cmd_counter_search(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—à—É–∫ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—É")
    description = "üîç <b>–ü–æ—à—É–∫ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—É:</b>"
    detailed_text = (
        "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –¥–ª—è —è–∫–æ–≥–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –∑–Ω–∞–π—Ç–∏ –∫–æ–Ω—Ç—Ä-–ø—ñ–∫. –ë–æ—Ç –Ω–∞–¥–∞—Å—Ç—å —Å–ø–∏—Å–æ–∫ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤."
    )
    await send_menu_response(message, description, detailed_text, get_generic_inline_keyboard())
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø–æ—à—É–∫—É –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—É

# –†–æ–∑–¥—ñ–ª "–ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏" - –°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤
@router.message(MenuStates.COUNTER_PICKS_MENU, F.text == MenuButton.COUNTER_LIST.value)
async def cmd_counter_list(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ –¥–ª—è –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤")
    description = "üìú <b>–°–ø–∏—Å–æ–∫ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ –¥–ª—è –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_counter_picks_menu())

# –†–æ–∑–¥—ñ–ª "–ö–æ–Ω—Ç—Ä-–ø—ñ–∫–∏" - –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
@router.message(MenuStates.COUNTER_PICKS_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_navigation_from_counter_picks(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –∑ –ö–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤")
    await state.set_state(MenuStates.NAVIGATION_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_navigation_menu())

# –†–æ–∑–¥—ñ–ª "–ë—ñ–ª–¥–∏" - –°—Ç–≤–æ—Ä–∏—Ç–∏ –ë—ñ–ª–¥
@router.message(MenuStates.BUILDS_MENU, F.text == MenuButton.CREATE_BUILD.value)
async def cmd_create_build(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –°—Ç–≤–æ—Ä–∏—Ç–∏ –ë—ñ–ª–¥")
    description = "üõ†Ô∏è <b>–°—Ç–≤–æ—Ä–∏—Ç–∏ –ë—ñ–ª–¥:</b>"
    detailed_text = (
        "–§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—ñ–ª–¥—ñ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ. –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏!"
    )
    await send_menu_response(message, description, detailed_text, get_builds_menu())

# –†–æ–∑–¥—ñ–ª "–ë—ñ–ª–¥–∏" - –ú–æ—ó –ë—ñ–ª–¥–∏
@router.message(MenuStates.BUILDS_MENU, F.text == MenuButton.MY_BUILDS.value)
async def cmd_my_builds(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ—ó –ë—ñ–ª–¥–∏")
    description = "üìÅ <b>–ú–æ—ó –ë—ñ–ª–¥–∏:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –±—ñ–ª–¥—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_builds_menu())

# –†–æ–∑–¥—ñ–ª "–ë—ñ–ª–¥–∏" - –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ë—ñ–ª–¥–∏
@router.message(MenuStates.BUILDS_MENU, F.text == MenuButton.POPULAR_BUILDS.value)
async def cmd_popular_builds(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ë—ñ–ª–¥–∏")
    description = "üî• <b>–ü–æ–ø—É–ª—è—Ä–Ω—ñ –ë—ñ–ª–¥–∏:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –±—ñ–ª–¥—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_builds_menu())

# –†–æ–∑–¥—ñ–ª "–ë—ñ–ª–¥–∏" - –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
@router.message(MenuStates.BUILDS_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_navigation_from_builds(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –∑ –ë—ñ–ª–¥—ñ–≤")
    await state.set_state(MenuStates.NAVIGATION_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_navigation_menu())

# –†–æ–∑–¥—ñ–ª "–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è" - –ü–æ—Ç–æ—á–Ω—ñ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è
@router.message(MenuStates.VOTING_MENU, F.text == MenuButton.CURRENT_VOTES.value)
async def cmd_current_votes(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ—Ç–æ—á–Ω—ñ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è")
    description = "üó≥Ô∏è <b>–ü–æ—Ç–æ—á–Ω—ñ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –ø–æ—Ç–æ—á–Ω–∏—Ö –æ–ø–∏—Ç—É–≤–∞–Ω—å —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_voting_menu())

# –†–æ–∑–¥—ñ–ª "–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è" - –ú–æ—ó –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è
@router.message(MenuStates.VOTING_MENU, F.text == MenuButton.MY_VOTES.value)
async def cmd_my_votes(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ—ó –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è")
    description = "üìà <b>–ú–æ—ó –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –≥–æ–ª–æ—Å—É–≤–∞–Ω—å —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_voting_menu())

# –†–æ–∑–¥—ñ–ª "–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è" - –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –¢–µ–º—É
@router.message(MenuStates.VOTING_MENU, F.text == MenuButton.SUGGEST_TOPIC.value)
async def cmd_suggest_topic(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –¢–µ–º—É")
    description = "üìù <b>–ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –¢–µ–º—É:</b>"
    detailed_text = (
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç–µ–º—É –¥–ª—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó. –í–∞—à–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –±—É–¥–µ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é."
    )
    await send_menu_response(message, description, detailed_text, get_generic_inline_keyboard())
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–π–æ–º—É —Ç–µ–º–∏

# –†–æ–∑–¥—ñ–ª "–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è" - –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
@router.message(MenuStates.VOTING_MENU, F.text == MenuButton.BACK.value)
async def cmd_back_to_navigation_from_voting(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –∑ –ì–æ–ª–æ—Å—É–≤–∞–Ω—å")
    await state.set_state(MenuStates.NAVIGATION_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ù–∞–≤—ñ–≥–∞—Ü—ñ—è. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_navigation_menu())

# –†–æ–∑–¥—ñ–ª "–ü—Ä–æ—Ñ—ñ–ª—å" - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.STATISTICS.value)
async def cmd_statistics(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    await state.set_state(MenuStates.STATISTICS_MENU)
    
    description = "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –ø–æ–≤'—è–∑–∞–Ω—É –∑ –≤–∞—à–æ—é –≥—Ä–æ—é.\n\n"
        "–í–∏–±–µ—Ä—ñ—Ç—å –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∏–∂—á–µ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –¥–µ—Ç–∞–ª–µ–π."
    )
    await send_menu_response(message, description, detailed_text, get_statistics_menu())

# –†–æ–∑–¥—ñ–ª "–ü—Ä–æ—Ñ—ñ–ª—å" - –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è
@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.ACHIEVEMENTS.value)
async def cmd_achievements(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è")
    await state.set_state(MenuStates.ACHIEVEMENTS_MENU)
    
    description = "üèÜ <b>–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —Å–≤–æ—ó –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è —Ç–∞ –±–µ–π–¥–∂—ñ, –∞ —Ç–∞–∫–æ–∂ –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ —Å–≤—ñ–π –ø—Ä–æ–≥—Ä–µ—Å.\n\n"
        "–í–∏–±–µ—Ä—ñ—Ç—å –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª –¥–æ—Å—è–≥–Ω–µ–Ω—å –Ω–∏–∂—á–µ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –¥–µ—Ç–∞–ª–µ–π."
    )
    await send_menu_response(message, description, detailed_text, get_achievements_menu())

# –†–æ–∑–¥—ñ–ª "–ü—Ä–æ—Ñ—ñ–ª—å" - –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.SETTINGS.value)
async def cmd_settings(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
    await state.set_state(MenuStates.SETTINGS_MENU)
    
    description = "‚öôÔ∏è <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤–∞—à–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é, –∑–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É, –æ–Ω–æ–≤–∏—Ç–∏ —Å–≤—ñ–π Username —Ç–∞ —ñ–Ω—à–µ.\n\n"
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –Ω–∏–∂—á–µ –¥–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π."
    )
    await send_menu_response(message, description, detailed_text, get_settings_menu())

# –†–æ–∑–¥—ñ–ª "–ü—Ä–æ—Ñ—ñ–ª—å" - –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫
@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.FEEDBACK.value)
async def cmd_feedback(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫")
    await state.set_state(MenuStates.FEEDBACK_MENU)
    
    description = "üíå <b>–ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –≤—ñ–¥–≥—É–∫–∏, –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –∞–±–æ –ø–æ–≤—ñ–¥–æ–º–ª—è—Ç–∏ –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏.\n\n"
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É –Ω–∏–∂—á–µ –¥–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π."
    )
    await send_menu_response(message, description, detailed_text, get_feedback_menu())

# –†–æ–∑–¥—ñ–ª "–ü—Ä–æ—Ñ—ñ–ª—å" - –î–æ–ø–æ–º–æ–≥–∞
@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.HELP.value)
async def cmd_help(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –î–æ–ø–æ–º–æ–≥—É")
    await state.set_state(MenuStates.HELP_MENU)
    
    description = "‚ùì <b>–î–æ–ø–æ–º–æ–≥–∞:</b>"
    detailed_text = (
        "–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–Ω–∞–π—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó, FAQ –∞–±–æ –∑–≤'—è–∑–∞—Ç–∏—Å—è –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–ø–æ–º–æ–≥–∏.\n\n"
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –¥–æ–ø–æ–º–æ–≥–∏ –Ω–∏–∂—á–µ –¥–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π."
    )
    await send_menu_response(message, description, detailed_text, get_help_menu())

# –†–æ–∑–¥—ñ–ª "–ü—Ä–æ—Ñ—ñ–ª—å" - –ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
@router.message(MenuStates.PROFILE_MENU, F.text == MenuButton.BACK_TO_MAIN_MENU.value)
async def cmd_back_to_main_from_profile(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∑ –ü—Ä–æ—Ñ—ñ–ª—é")
    await state.set_state(MenuStates.MAIN_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_main_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" - –ó–∞–≥–∞–ª—å–Ω–∞ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
@router.message(MenuStates.STATISTICS_MENU, F.text == MenuButton.ACTIVITY.value)
async def cmd_activity(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ó–∞–≥–∞–ª—å–Ω—É –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å")
    description = "üìà <b>–ó–∞–≥–∞–ª—å–Ω–∞ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:</b>"
    detailed_text = (
        "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥–∞–ª—å–Ω–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_statistics_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" - –†–µ–π—Ç–∏–Ω–≥
@router.message(MenuStates.STATISTICS_MENU, F.text == MenuButton.RANKING.value)
async def cmd_ranking(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –†–µ–π—Ç–∏–Ω–≥")
    description = "üèÖ <b>–†–µ–π—Ç–∏–Ω–≥:</b>"
    detailed_text = (
        "–†–µ–π—Ç–∏–Ω–≥ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_statistics_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" - –Ü–≥—Ä–æ–≤–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
@router.message(MenuStates.STATISTICS_MENU, F.text == MenuButton.GAME_STATS.value)
async def cmd_game_stats(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –Ü–≥—Ä–æ–≤—É –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    description = "üéÆ <b>–Ü–≥—Ä–æ–≤–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>"
    detailed_text = (
        "–Ü–≥—Ä–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_statistics_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" - –ù–∞–∑–∞–¥ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é
@router.message(MenuStates.STATISTICS_MENU, F.text == MenuButton.BACK_TO_PROFILE.value)
async def cmd_back_to_profile_from_statistics(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –ü—Ä–æ—Ñ—ñ–ª—é –∑ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    await state.set_state(MenuStates.PROFILE_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_profile_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è" - –ú–æ—ó –ë–µ–π–¥–∂—ñ
@router.message(MenuStates.ACHIEVEMENTS_MENU, F.text == MenuButton.BADGES.value)
async def cmd_badges(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ—ó –ë–µ–π–¥–∂—ñ")
    description = "üéñÔ∏è <b>–ú–æ—ó –ë–µ–π–¥–∂—ñ:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –±–µ–π–¥–∂—ñ–≤ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_achievements_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è" - –ü—Ä–æ–≥—Ä–µ—Å
@router.message(MenuStates.ACHIEVEMENTS_MENU, F.text == MenuButton.PROGRESS.value)
async def cmd_progress(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü—Ä–æ–≥—Ä–µ—Å")
    description = "üìà <b>–ü—Ä–æ–≥—Ä–µ—Å:</b>"
    detailed_text = (
        "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_achievements_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è" - –¢—É—Ä–Ω—ñ—Ä–Ω–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
@router.message(MenuStates.ACHIEVEMENTS_MENU, F.text == MenuButton.TOURNAMENT_STATS.value)
async def cmd_tournament_stats(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –¢—É—Ä–Ω—ñ—Ä–Ω—É –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    description = "üìä <b>–¢—É—Ä–Ω—ñ—Ä–Ω–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>"
    detailed_text = (
        "–¢—É—Ä–Ω—ñ—Ä–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_achievements_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è" - –û—Ç—Ä–∏–º–∞–Ω—ñ –ù–∞–≥–æ—Ä–æ–¥–∏
@router.message(MenuStates.ACHIEVEMENTS_MENU, F.text == MenuButton.AWARDS.value)
async def cmd_awards(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –û—Ç—Ä–∏–º–∞–Ω—ñ –ù–∞–≥–æ—Ä–æ–¥–∏")
    description = "üéñÔ∏è <b>–û—Ç—Ä–∏–º–∞–Ω—ñ –ù–∞–≥–æ—Ä–æ–¥–∏:</b>"
    detailed_text = (
        "–°–ø–∏—Å–æ–∫ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –Ω–∞–≥–æ—Ä–æ–¥ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_achievements_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è" - –ù–∞–∑–∞–¥ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é
@router.message(MenuStates.ACHIEVEMENTS_MENU, F.text == MenuButton.BACK_TO_PROFILE.value)
async def cmd_back_to_profile_from_achievements(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –ü—Ä–æ—Ñ—ñ–ª—é –∑ –î–æ—Å—è–≥–Ω–µ–Ω—å")
    await state.set_state(MenuStates.PROFILE_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_profile_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è" - –ú–æ–≤–∞ –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
@router.message(MenuStates.SETTINGS_MENU, F.text == MenuButton.LANGUAGE.value)
async def cmd_language(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ú–æ–≤—É –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É")
    description = "üåê <b>–ú–æ–≤–∞ –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É:</b>"
    detailed_text = (
        "–§—É–Ω–∫—Ü—ñ—è –∑–º—ñ–Ω–∏ –º–æ–≤–∏ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_settings_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è" - –ó–º—ñ–Ω–∏—Ç–∏ Username
@router.message(MenuStates.SETTINGS_MENU, F.text == MenuButton.CHANGE_USERNAME.value)
async def cmd_change_username(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ó–º—ñ–Ω–∏—Ç–∏ Username")
    description = "üîÑ <b>–ó–º—ñ–Ω–∏—Ç–∏ Username:</b>"
    detailed_text = (
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π Username:"
    )
    await send_menu_response(message, description, detailed_text, get_generic_inline_keyboard())
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∑–º—ñ–Ω–∏ Username

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è" - –û–Ω–æ–≤–∏—Ç–∏ ID –ì—Ä–∞–≤—Ü—è
@router.message(MenuStates.SETTINGS_MENU, F.text == MenuButton.UPDATE_ID.value)
async def cmd_update_id(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –û–Ω–æ–≤–∏—Ç–∏ ID –ì—Ä–∞–≤—Ü—è")
    description = "üÜî <b>–û–Ω–æ–≤–∏—Ç–∏ ID –ì—Ä–∞–≤—Ü—è:</b>"
    detailed_text = (
        "–§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ID —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_settings_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è" - –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è
@router.message(MenuStates.SETTINGS_MENU, F.text == MenuButton.NOTIFICATIONS.value)
async def cmd_notifications(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è")
    description = "üîî <b>–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è:</b>"
    detailed_text = (
        "–§—É–Ω–∫—Ü—ñ—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_settings_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è" - –ù–∞–∑–∞–¥ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é
@router.message(MenuStates.SETTINGS_MENU, F.text == MenuButton.BACK_TO_PROFILE.value)
async def cmd_back_to_profile_from_settings(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –ü—Ä–æ—Ñ—ñ–ª—é –∑ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω—å")
    await state.set_state(MenuStates.PROFILE_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_profile_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫" - –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –í—ñ–¥–≥—É–∫
@router.message(MenuStates.FEEDBACK_MENU, F.text == MenuButton.SEND_FEEDBACK.value)
async def cmd_send_feedback(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –í—ñ–¥–≥—É–∫")
    description = "‚úâÔ∏è <b>–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –í—ñ–¥–≥—É–∫:</b>"
    detailed_text = (
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à –≤—ñ–¥–≥—É–∫. –í–∞—à—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –Ω–∞–º –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –±–æ—Ç."
    )
    await send_menu_response(message, description, detailed_text, get_generic_inline_keyboard())
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–π–æ–º—É –≤—ñ–¥–≥—É–∫—É

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫" - –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ü–æ–º–∏–ª–∫—É
@router.message(MenuStates.FEEDBACK_MENU, F.text == MenuButton.REPORT_BUG.value)
async def cmd_report_bug(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ü–æ–º–∏–ª–∫—É")
    description = "üêû <b>–ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ü–æ–º–∏–ª–∫—É:</b>"
    detailed_text = (
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–ø–∏—à—ñ—Ç—å –ø–æ–º–∏–ª–∫—É, —è–∫—É –≤–∏ –∑–Ω–∞–π—à–ª–∏. –í–∞—à—ñ –∑–≤—ñ—Ç–∏ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –Ω–∞–º –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø—Ä–æ–±–ª–µ–º–∏."
    )
    await send_menu_response(message, description, detailed_text, get_generic_inline_keyboard())
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–π–æ–º—É –∑–≤—ñ—Ç—É –ø—Ä–æ –ø–æ–º–∏–ª–∫—É

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ó–≤'—è–∑–æ–∫" - –ù–∞–∑–∞–¥ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é
@router.message(MenuStates.FEEDBACK_MENU, F.text == MenuButton.BACK_TO_PROFILE.value)
async def cmd_back_to_profile_from_feedback(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –ü—Ä–æ—Ñ—ñ–ª—é –∑ –ó–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –ó–≤'—è–∑–∫—É")
    await state.set_state(MenuStates.PROFILE_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_profile_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–î–æ–ø–æ–º–æ–≥–∞" - –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
@router.message(MenuStates.HELP_MENU, F.text == MenuButton.INSTRUCTIONS.value)
async def cmd_instructions(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó")
    description = "üìÑ <b>–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó:</b>"
    detailed_text = (
        "–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_help_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–î–æ–ø–æ–º–æ–≥–∞" - FAQ
@router.message(MenuStates.HELP_MENU, F.text == MenuButton.FAQ.value)
async def cmd_faq(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ FAQ")
    description = "‚ùì <b>FAQ:</b>"
    detailed_text = (
        "FAQ —â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–µ. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    )
    await send_menu_response(message, description, detailed_text, get_help_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–î–æ–ø–æ–º–æ–≥–∞" - –ü—ñ–¥—Ç—Ä–∏–º–∫–∞
@router.message(MenuStates.HELP_MENU, F.text == MenuButton.HELP_SUPPORT.value)
async def cmd_help_support(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ –ü—ñ–¥—Ç—Ä–∏–º–∫—É")
    description = "üÜò <b>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞:</b>"
    detailed_text = (
        "–ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é —á–µ—Ä–µ–∑ –Ω–∞—à –∫–∞–Ω–∞–ª –∞–±–æ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–ø–æ–º–æ–≥–∏."
    )
    await send_menu_response(message, description, detailed_text, get_help_menu())

# –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏ "–î–æ–ø–æ–º–æ–≥–∞" - –ù–∞–∑–∞–¥ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é
@router.message(MenuStates.HELP_MENU, F.text == MenuButton.BACK_TO_PROFILE.value)
async def cmd_back_to_profile_from_help(message: Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –ü—Ä–æ—Ñ—ñ–ª—é –∑ –î–æ–ø–æ–º–æ–≥–∏")
    await state.set_state(MenuStates.PROFILE_MENU)
    
    description = "üîô <b>–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å:</b>"
    detailed_text = (
        "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –ü—Ä–æ—Ñ—ñ–ª—å. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ."
    )
    await send_menu_response(message, description, detailed_text, get_profile_menu())

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
@router.callback_query(F.data == "button1")
async def handle_button1(call: CallbackQuery, state: FSMContext):
    await call.message.answer("–í–∏ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –Ω–∞ –ö–Ω–æ–ø–∫—É 1")
    await call.answer()

@router.callback_query(F.data == "button2")
async def handle_button2(call: CallbackQuery, state: FSMContext):
    await call.message.answer("–í–∏ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –Ω–∞ –ö–Ω–æ–ø–∫—É 2")
    await call.answer()

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@router.message()
async def unknown_command(message: Message, state: FSMContext):
    logger.warning(f"–ù–µ–≤—ñ–¥–æ–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {message.from_user.id}: {message.text}")
    current_state = await state.get_state()
    
    if current_state == MenuStates.MAIN_MENU.state:
        reply_markup = get_main_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ, —â–æ–± –æ–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–ø—Ü—ñ—ó."
        )
    elif current_state == MenuStates.NAVIGATION_MENU.state:
        reply_markup = get_navigation_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó."
        )
    elif current_state == MenuStates.HEROES_MENU.state:
        reply_markup = get_heroes_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –≥–µ—Ä–æ—ó–≤."
        )
    elif current_state == MenuStates.HERO_CLASS_MENU.state:
        data = await state.get_data()
        hero_class = data.get('hero_class', '–¢–∞–Ω–∫')
        reply_markup = get_hero_class_inline_keyboard(hero_class)
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            f"–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –≥–µ—Ä–æ—è –∑ –∫–ª–∞—Å—É <b>{hero_class}</b>."
        )
    elif current_state == MenuStates.GUIDES_MENU.state:
        reply_markup = get_guides_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –≥–∞–π–¥—ñ–≤."
        )
    elif current_state == MenuStates.COUNTER_PICKS_MENU.state:
        reply_markup = get_counter_picks_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –∫–æ–Ω—Ç—Ä-–ø—ñ–∫—ñ–≤."
        )
    elif current_state == MenuStates.BUILDS_MENU.state:
        reply_markup = get_builds_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –±—ñ–ª–¥—ñ–≤."
        )
    elif current_state == MenuStates.VOTING_MENU.state:
        reply_markup = get_voting_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è."
        )
    elif current_state == MenuStates.PROFILE_MENU.state:
        reply_markup = get_profile_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –ø—Ä–æ—Ñ—ñ–ª—é."
        )
    elif current_state == MenuStates.STATISTICS_MENU.state:
        reply_markup = get_statistics_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."
        )
    elif current_state == MenuStates.ACHIEVEMENTS_MENU.state:
        reply_markup = get_achievements_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –¥–æ—Å—è–≥–Ω–µ–Ω—å."
        )
    elif current_state == MenuStates.SETTINGS_MENU.state:
        reply_markup = get_settings_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å."
        )
    elif current_state == MenuStates.FEEDBACK_MENU.state:
        reply_markup = get_feedback_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É."
        )
    elif current_state == MenuStates.HELP_MENU.state:
        reply_markup = get_help_menu()
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–ø—Ü—ñ–π –¥–æ–ø–æ–º–æ–≥–∏."
        )
    else:
        reply_markup = get_main_menu()
        await state.set_state(MenuStates.MAIN_MENU)
        description = "‚ùó <b>–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞:</b>"
        detailed_text = (
            "–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ, —â–æ–± –æ–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–ø—Ü—ñ—ó."
        )
    
    await message.answer(
        description,
        parse_mode="HTML"
    )
    await message.answer(
        detailed_text,
        parse_mode="HTML",
        reply_markup=reply_markup
    )

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
def setup_handlers(dp):
    dp.include_router(router)
