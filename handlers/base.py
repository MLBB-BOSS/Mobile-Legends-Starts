import logging
from aiogram import Router, Bot, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from keyboards.menus import get_main_menu
from texts import START_TEXT, HELP_TEXT, UNKNOWN_COMMAND_TEXT

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ä–æ—É—Ç–µ—Ä–∞
base_router = Router()

# –°—Ç–∞–Ω –¥–ª—è –±–∞–∑–æ–≤–∏—Ö –∫–æ–º–∞–Ω–¥
class BaseStates(StatesGroup):
    MAIN_MENU = State()

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@base_router.message(F.text == "/start")
async def handle_start_command(message: Message, state: FSMContext, bot: Bot):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –≤–∏–∫–ª–∏–∫–∞–≤ /start")

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        welcome_message = await bot.send_message(
            chat_id=message.chat.id,
            text=START_TEXT.format(user_first_name=message.from_user.first_name),
            reply_markup=get_main_menu()
        )
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        await state.update_data(bot_message_id=welcome_message.message_id)
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –¥–æ MAIN_MENU
        await state.set_state(BaseStates.MAIN_MENU)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è /start: {e}")

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /help
@base_router.message(F.text == "/help")
async def handle_help_command(message: Message, state: FSMContext, bot: Bot):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –≤–∏–∫–ª–∏–∫–∞–≤ /help")

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–æ–≤—ñ–¥–∫–æ—é
    try:
        help_message = await bot.send_message(
            chat_id=message.chat.id,
            text=HELP_TEXT,
            reply_markup=get_main_menu()
        )
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        await state.update_data(bot_message_id=help_message.message_id)
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –¥–æ MAIN_MENU
        await state.set_state(BaseStates.MAIN_MENU)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è /help: {e}")

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –∫–æ–º–∞–Ω–¥
@base_router.message(F.text.startswith("/"))
async def handle_unknown_command(message: Message, state: FSMContext, bot: Bot):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –≤–∏–∫–ª–∏–∫–∞–≤ –Ω–µ–≤—ñ–¥–æ–º—É –∫–æ–º–∞–Ω–¥—É {message.text}")

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–≤—ñ–¥–æ–º—É –∫–æ–º–∞–Ω–¥—É
    try:
        unknown_command_message = await bot.send_message(
            chat_id=message.chat.id,
            text=UNKNOWN_COMMAND_TEXT,
            reply_markup=get_main_menu()
        )
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        await state.update_data(bot_message_id=unknown_command_message.message_id)
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –¥–æ MAIN_MENU
        await state.set_state(BaseStates.MAIN_MENU)
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–≤—ñ–¥–æ–º—É –∫–æ–º–∞–Ω–¥—É: {e}")

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ —É –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é
@base_router.message(BaseStates.MAIN_MENU)
async def handle_main_menu_buttons(message: Message, state: FSMContext, bot: Bot):
    user_choice = message.text
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ–±—Ä–∞–≤ {user_choice} –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é")

    # –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é
    if user_choice == "ü™™ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å":
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –º–æ–¥—É–ª—å –æ–±—Ä–æ–±–∫–∏ –ø—Ä–æ—Ñ—ñ–ª—é
        await state.set_state("profile:PROFILE_MENU")
        await bot.send_message(chat_id=message.chat.id, text="–ü–µ—Ä–µ—Ö—ñ–¥ —É –º–µ–Ω—é –ø—Ä–æ—Ñ—ñ–ª—é...")
    elif user_choice == "üåç –ù–∞–≤—ñ–≥–∞—Ü—ñ—è":
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –º–æ–¥—É–ª—å –æ–±—Ä–æ–±–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
        await state.set_state("navigation:NAVIGATION_MENU")
        await bot.send_message(chat_id=message.chat.id, text="–ü–µ—Ä–µ—Ö—ñ–¥ —É –º–µ–Ω—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó...")
    else:
        await bot.send_message(chat_id=message.chat.id, text=UNKNOWN_COMMAND_TEXT)
