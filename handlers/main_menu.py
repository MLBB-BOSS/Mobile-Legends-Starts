from aiogram import Router
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from states.menu_states import MainMenuState
from utils.interface_manager import safe_delete_message
from constants.menu_texts import MAIN_MENU_TEXT, MAIN_MENU_SCREEN_TEXT

# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    """
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ü—Ä–æ—Ñ—ñ–ª—å", callback_data="profile")],
            [InlineKeyboardButton(text="–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è", callback_data="settings")],
            [InlineKeyboardButton(text="–¢—É—Ä–Ω—ñ—Ä–∏", callback_data="tournaments")],
            [InlineKeyboardButton(text="–°–∫—Ä—ñ–Ω—à–æ—Ç–∏", callback_data="screenshots")],
            [InlineKeyboardButton(text="–î–æ–ø–æ–º–æ–≥–∞", callback_data="help")]
        ]
    )

class MainMenuHandler:
    def __init__(self):
        """–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        self.router = Router()
        self.register_handlers()

    def register_handlers(self):
        """–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        self.router.message.register(self.cmd_start, CommandStart())
        self.router.message.register(self.handle_main_menu, MainMenuState.main)

    async def cmd_start(self, message: Message, state: FSMContext):
        """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start"""
        # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        await safe_delete_message(message.bot, message.chat.id, message.message_id)

        # –õ–æ–≥—É–≤–∞–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏
        print(f"Received /start from user: {message.from_user.id}")

        # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –µ–∫—Ä–∞–Ω
        screen = await message.bot.send_message(
            chat_id=message.chat.id,
            text=MAIN_MENU_SCREEN_TEXT,
            reply_markup=get_main_menu_keyboard()
        )

        # –õ–æ–≥—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–∫—Ä–∞–Ω—É
        print(f"Main menu screen sent to user: {message.from_user.id}")

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω
        await state.set_state(MainMenuState.main)
        await state.update_data(
            bot_message_id=screen.message_id,
            last_text=MAIN_MENU_TEXT,
            last_keyboard=get_main_menu_keyboard()
        )

    async def handle_main_menu(self, message: Message, state: FSMContext):
        """–û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É —Å—Ç–∞–Ω—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        match message.text:
            case "–ü—Ä–æ—Ñ—ñ–ª—å":
                await message.answer("ü™™ –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å...")
            case "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è":
                await message.answer("‚öôÔ∏è –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å...")
            case "–¢—É—Ä–Ω—ñ—Ä–∏":
                await message.answer("üèÜ –ü–µ—Ä–µ–≥–ª—è–¥ —Ç—É—Ä–Ω—ñ—Ä—ñ–≤...")
            case "–°–∫—Ä—ñ–Ω—à–æ—Ç–∏":
                await message.answer("üì∏ –°–ø–∏—Å–æ–∫ —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ–≤...")
            case "–î–æ–ø–æ–º–æ–≥–∞":
                await message.answer("üÜò –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –¥–æ–ø–æ–º–æ–≥—É...")
            case _:
                await message.answer("‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é.")

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Å—Ç–∞–Ω—Å—É MainMenuHandler
main_menu_handler = MainMenuHandler()
# –ï–∫—Å–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞
router = main_menu_handler.router
