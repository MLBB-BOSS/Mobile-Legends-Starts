# handlers/main_menu.py
# UTC:22:00
# 2024-11-25
# Author: MLBB-BOSS
# Description: Main menu message handlers
# The era of artificial intelligence.

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from keyboards.main_menu import get_main_keyboard
from keyboards.navigation_menu import get_navigation_keyboard
from keyboards.profile_menu import get_profile_keyboard
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select
from models.user import User
import logging

logger = logging.getLogger(__name__)
router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message, db: AsyncSession):
    try:
        # –®—É–∫–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ telegram_id
        result = await db.execute(
            select(User).where(User.telegram_id == message.from_user.id)
        )
        user = result.scalar_one_or_none()

        if not user:
            # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            user = User(
                telegram_id=message.from_user.id,
                username=message.from_user.username
            )
            db.add(user)
            await db.commit()

            await message.answer(
                f"–í—ñ—Ç–∞—é, {message.from_user.first_name}! –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ.",
                reply_markup=get_main_keyboard()
            )
        else:
            await message.answer(
                f"–ó –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º, {message.from_user.first_name}!",
                reply_markup=get_main_keyboard()
            )
    except Exception as e:
        logger.error(f"Error in start handler: {e}")
        await db.rollback()
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∫–æ–º–∞–Ω–¥–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

@router.message(F.text == "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è")
async def navigation_menu(message: Message):
    logger.info(f"User {message.from_user.id} selected '–ù–∞–≤—ñ–≥–∞—Ü—ñ—è'")
    await message.answer(
        "–ú–µ–Ω—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:\n–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª:",
        reply_markup=get_navigation_keyboard()
    )

@router.message(F.text == "ü™™ –ü—Ä–æ—Ñ—ñ–ª—å")
async def profile_menu(message: Message):
    logger.info(f"User {message.from_user.id} selected '–ü—Ä–æ—Ñ—ñ–ª—å'")
    await message.answer(
        "–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å:\n–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª:",
        reply_markup=get_profile_keyboard()
    )

@router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def return_to_main(message: Message):
    logger.info(f"User {message.from_user.id} returned to main menu")
    await message.answer(
        "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:",
        reply_markup=get_main_keyboard()
    )
