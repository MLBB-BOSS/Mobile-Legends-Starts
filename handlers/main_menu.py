# handlers/main_menu.py
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from states.menu_states import MainMenuState, NavigationState, ProfileState
from keyboards.main_menu import get_main_menu_keyboard, get_main_menu_inline_keyboard
from constants.menu_texts import MAIN_MENU_TEXT, MAIN_MENU_SCREEN_TEXT
from utils.interface_manager import UIState, update_interface, safe_delete_message
from .base_handler import BaseHandler

from aiogram.types import Message, CallbackQuery
from keyboards.main_menu import (
    get_main_menu_keyboard,
    get_main_menu_inline_keyboard,
    MainMenuCallbacks,
    MainMenuButtons
)

class MainMenuHandler(BaseHandler):
    def __init__(self):
        super().__init__(name="main_menu")
        self.register_handlers()

    def register_handlers(self):
        """–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        self.router.message.register(self.cmd_start, CommandStart())
        self.router.message.register(
            self.handle_main_menu, 
            MainMenuState.main
        )

    async def cmd_start(self, message: Message, state: FSMContext):
        """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start"""
        # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        await safe_delete_message(message.bot, message.chat.id, message.message_id)

        # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –µ–∫—Ä–∞–Ω
        screen = await message.bot.send_message(
            chat_id=message.chat.id,
            text=MAIN_MENU_SCREEN_TEXT,
            reply_markup=get_main_menu_inline_keyboard()
        )

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—É–ª—å—Ç –∫–µ—Ä—É–≤–∞–Ω–Ω—è
        control = await message.bot.send_message(
            chat_id=message.chat.id,
            text=MAIN_MENU_TEXT,
            reply_markup=get_main_menu_keyboard()
        )

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω
        await state.set_state(MainMenuState.main)
        await state.update_data(
            bot_message_id=control.message_id,
            interactive_message_id=screen.message_id,
            last_text=MAIN_MENU_TEXT,
            last_keyboard=get_main_menu_keyboard()
        )

    async def handle_main_menu(self, message: Message, state: FSMContext):
        """–û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        match message.text:
            case "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è":
                await self.handle_transition(
                    message=message,
                    state=state,
                    bot=message.bot,
                    new_state=NavigationState.main,
                    control_text="–ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–µ –º–µ–Ω—é\n–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:",
                    control_markup=get_navigation_menu_keyboard(),
                    screen_text="üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –ø–æ –≥—Ä—ñ\n\n–¢—É—Ç –≤–∏ –∑–Ω–∞–π–¥–µ—Ç–µ:\n- –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥–µ—Ä–æ—ó–≤\n- –ë—ñ–ª–¥–∏ —Ç–∞ –≥–∞–π–¥–∏\n- –¢—É—Ä–Ω—ñ—Ä–∏ —Ç–∞ –∫–æ–º–∞–Ω–¥–∏",
                    screen_markup=get_navigation_inline_keyboard()
                )
                
            case "ü™™ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å":
                await self.handle_transition(
                    message=message,
                    state=state,
                    bot=message.bot,
                    new_state=ProfileState.main,
                    control_text="–ú–µ–Ω—é –ø—Ä–æ—Ñ—ñ–ª—é\n–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:",
                    control_markup=get_profile_menu_keyboard(),
                    screen_text="üë§ –í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å\n\n–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ:\n- –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n- –ö–µ—Ä—É–≤–∞—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏\n- –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è",
                    screen_markup=get_profile_inline_keyboard()
                )
