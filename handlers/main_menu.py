from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from states.menu_states import MainMenuState
from constants.menu_texts import MAIN_MENU_TEXT, MAIN_MENU_SCREEN_TEXT
from utils.interface_manager import update_interface, safe_delete_message
from .base_handler import BaseHandler


# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    """
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è", callback_data="navigation")],
            [InlineKeyboardButton(text="ü™™ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å", callback_data="profile")],
            [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è", callback_data="settings")],
            [InlineKeyboardButton(text="‚ùì –î–æ–ø–æ–º–æ–≥–∞", callback_data="help")]
        ]
    )


class MainMenuHandler(BaseHandler):
    def __init__(self):
        super().__init__(name="main_menu")
        self.register_handlers()

    def register_handlers(self):
        """–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        self.router.message.register(self.cmd_start, CommandStart())
        self.router.message.register(self.handle_main_menu, MainMenuState.main)

    async def cmd_start(self, message: Message, state: FSMContext):
        """
        –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start.
        """
        # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        await safe_delete_message(message.bot, message.chat.id, message.message_id)

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –µ–∫—Ä–∞–Ω –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        screen = await message.bot.send_message(
            chat_id=message.chat.id,
            text=MAIN_MENU_SCREEN_TEXT,
            reply_markup=get_main_menu_keyboard()
        )

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω —ñ –¥–∞–Ω—ñ –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        await state.set_state(MainMenuState.main)
        await state.update_data(
            bot_message_id=screen.message_id,
            last_text=MAIN_MENU_TEXT,
            last_keyboard=get_main_menu_keyboard()
        )

    async def handle_main_menu(self, message: Message, state: FSMContext):
        """
        –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.
        """
        # –û—Ç—Ä–∏–º—É—î–º–æ callback_data –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        user_input = message.text

        # –õ–æ–≥—ñ–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∫–Ω–æ–ø–æ–∫
        match user_input:
            case "üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è":
                await message.answer("üîç –ü–µ—Ä–µ—Ö–æ–¥–∂—É –¥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó...")
                # –õ–æ–≥—ñ–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó (–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ NavigationState)
                await state.set_state(MainMenuState.settings)

            case "ü™™ –ú—ñ–π –ü—Ä–æ—Ñ—ñ–ª—å":
                await message.answer("üë§ –í—ñ–¥–æ–±—Ä–∞–∂–∞—é –ø—Ä–æ—Ñ—ñ–ª—å...")
                # –õ–æ–≥—ñ–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é (–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ ProfileState)
                await state.set_state(MainMenuState.profile)

            case "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è":
                await message.answer("‚öôÔ∏è –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å...")
                # –õ–æ–≥—ñ–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
                await state.set_state(MainMenuState.settings)

            case "‚ùì –î–æ–ø–æ–º–æ–≥–∞":
                await message.answer("üìò –û—Å—å —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –ø–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—é –±–æ—Ç–∞.")
                # –õ–æ–≥—ñ–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–æ–ø–æ–º–æ–≥–∏

            case _:
                await message.answer("‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
