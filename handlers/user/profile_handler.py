# handlers/user/profile_handler.py
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from ..base_handler import BaseHandler
from database.repositories import UserRepository
from models import User

class ProfileHandler(BaseHandler):
    def __init__(self):
        super().__init__()
        self.user_repository = UserRepository()

    async def handle(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ –ø–µ—Ä–µ–≥–ª—è–¥—É –ø—Ä–æ—Ñ—ñ–ª—é"""
        try:
            with db.get_session() as session:
                # –Ø–∫—â–æ —î –∞—Ä–≥—É–º–µ–Ω—Ç - —à—É–∫–∞—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –ø–æ username
                if context.args and len(context.args) > 0:
                    username = context.args[0].strip('@')
                    user = self.user_repository.get_by_username(session, username)
                else:
                    # –Ü–Ω–∞–∫—à–µ –ø–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    user = self.user_repository.get_by_telegram_id(
                        session, 
                        update.effective_user.id
                    )

                if not user:
                    await update.message.reply_text("‚ùå –ü—Ä–æ—Ñ—ñ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
                    return

                # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ—Ñ—ñ–ª—é
                profile_text = (
                    f"üë§ *–ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞*\n"
                    f"–ù—ñ–∫: @{user.username}\n"
                    f"–†—ñ–≤–µ–Ω—å: {user.level} ({user.experience} XP)\n"
                    f"–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è: {len(user.achievements)}\n"
                )

                if user.bio:
                    profile_text += f"\nüìù –ü—Ä–æ —Å–µ–±–µ:\n{user.bio}\n"

                # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
                keyboard = [
                    [
                        InlineKeyboardButton("üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è", callback_data=f"achievements_{user.id}"),
                        InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=f"stats_{user.id}")
                    ]
                ]

                # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ –¥–ª—è –≤–ª–∞—Å–Ω–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é
                if update.effective_user.id == user.telegram_id:
                    keyboard.append([
                        InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å", callback_data="edit_profile")
                    ])

                reply_markup = InlineKeyboardMarkup(keyboard)

                await update.message.reply_text(
                    profile_text,
                    parse_mode='Markdown',
                    reply_markup=reply_markup
                )

        except Exception as e:
            await self.handle_error(update, context, e)

    async def handle_edit_profile(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–æ–±–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é"""
        query = update.callback_query
        await query.answer()

        keyboard = [
            [
                InlineKeyboardButton("üìù –ó–º—ñ–Ω–∏—Ç–∏ –æ–ø–∏—Å", callback_data="edit_bio"),
                InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_profile")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.message.edit_text(
            "‚úèÔ∏è –©–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —É —Å–≤–æ—î–º—É –ø—Ä–æ—Ñ—ñ–ª—ñ?",
            reply_markup=reply_markup
        )

    async def handle_edit_bio(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ –æ–ø–∏—Å—É –ø—Ä–æ—Ñ—ñ–ª—é"""
        query = update.callback_query
        await query.answer()

        context.user_data['editing_bio'] = True
        await query.message.edit_text(
            "üìù –ù–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–æ–≤–∏–π –æ–ø–∏—Å –≤–∞—à–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é.\n"
            "–î–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –Ω–∞–ø–∏—à—ñ—Ç—å /cancel"
        )
