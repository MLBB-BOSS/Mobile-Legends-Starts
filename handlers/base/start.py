from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from states.intro_states import IntroStates  # –ù–æ–≤–∏–π —Å—Ç–∞–Ω –¥–ª—è –≤—Å—Ç—É–ø—É
from keyboards.inline_menus import get_intro_page_1_keyboard
from keyboards.menus import get_main_menu_keyboard

router = Router()

@router.message(commands=["start"])
async def start_command(message: Message, state: FSMContext):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start.
    """
    user_id = message.from_user.id
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    state_data = await state.get_data()

    if not state_data.get("intro_completed", False):
        await message.answer(
            f"üëã –í—ñ—Ç–∞—é, {message.from_user.first_name}! –ü–æ—á–Ω–µ–º–æ –∑–Ω–∞–π–æ–º—Å—Ç–≤–æ!",
            reply_markup=get_intro_page_1_keyboard()
        )
        await state.set_state(IntroStates.page_1)  # –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω –¥–ª—è –≤—Å—Ç—É–ø—É
    else:
        await message.answer(
            "üëã –í—ñ—Ç–∞—é! –ü–æ–≤–µ—Ä—Ç–∞—é –≤–∞—Å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.",
            reply_markup=get_main_menu_keyboard()
        )
        await state.set_state(IntroStates.completed)  # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—Å—Ç—É–ø—É
