# core/bot_runner.py

import asyncio
import logging
import signal
from aiogram import Dispatcher, exceptions
from core.bot import dp, bot, on_startup, on_shutdown
import handlers.callback_handler
import handlers.help_handler
import handlers.heroes_info_handler
import handlers.info_handler
import handlers.leaderboard_handler
import handlers.profile_handler
import handlers.screenshot_handler

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def shutdown():
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞"""
    logger.info("üîÑ –ü–æ—á–∞—Ç–æ–∫ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏...")
    await on_shutdown(dp)
    logger.info("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–Ω–æ.")

def signal_handler():
    """–û–±—Ä–æ–±–Ω–∏–∫ —Å–∏–≥–Ω–∞–ª—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏"""
    asyncio.create_task(shutdown())

async def start_bot():
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞ –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–µ—Ä–µ–ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –ø—Ä–∏ –º–µ—Ä–µ–∂–µ–≤–∏—Ö –ø–æ–º–∏–ª–∫–∞—Ö"""
    while True:
        try:
            await on_startup(dp)  # –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
            await dp.start_polling(timeout=10)  # –ù–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ —Ç–∞–π–º–∞—É—Ç —É 10 —Å–µ–∫—É–Ω–¥
        except exceptions.NetworkError as e:
            logger.error(f"Network error occurred: {e}")
            await asyncio.sleep(5)  # –ß–µ–∫–∞—î–º–æ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–∏–º –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–æ–±–æ—Ç—ñ –±–æ—Ç–∞: {e}", exc_info=True)
        finally:
            await shutdown()
            break  # –í–∏—Ö—ñ–¥ –∑ —Ü–∏–∫–ª—É –ø—ñ—Å–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏

async def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —Å–∏–≥–Ω–∞–ª—ñ–≤ —Ç–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞"""
    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ —Å–∏–≥–Ω–∞–ª—ñ–≤
    loop = asyncio.get_running_loop()
    for sig in (signal.SIGINT, signal.SIGTERM):
        loop.add_signal_handler(sig, signal_handler)

    await start_bot()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.")
    except Exception as e:
        logger.error(f"‚ùå –ù–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}", exc_info=True)
