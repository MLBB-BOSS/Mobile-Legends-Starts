# core/bot_runner.py

import asyncio
import logging
from core.bot import bot, dp
from handlers.hero_handler import router as hero_router

logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(name)s - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)

async def on_startup():
    """–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—Å—ñ—Ö –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞."""
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
    dp.include_router(hero_router)  # –î–æ–¥–∞—î–º–æ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤

async def main():
    await on_startup()
    try:
        await dp.start_polling(bot)  # –í–∏–¥–∞–ª–µ–Ω–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è dp.start_polling
        logger.info("–ë–æ—Ç –ø—Ä–∞—Ü—é—î...")
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞: {e}")
    finally:
        await bot.session.close()
        logger.info("–ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ.")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.")
    except Exception as e:
        logger.error(f"‚ùå –ù–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
