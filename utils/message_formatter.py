# utils/message_formatter.py

class MessageFormatter:
    @staticmethod
    def format_menu_title(title: str) -> str:
        """–§–æ—Ä–º–∞—Ç—É—î –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—é"""
        decorated_title = title.center(30, '‚ïê')
        return (
            f"<b>‚îè{decorated_title}‚îì</b>\n"
            f"<b>‚îó{'‚ïê' * len(decorated_title)}‚îõ</b>"
        )
    
    @staticmethod
    def format_menu_content(text: str, items: list = None) -> str:
        """–§–æ—Ä–º–∞—Ç—É—î –æ—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –º–µ–Ω—é"""
        content = [f"<i>{text}</i>"]
        
        if items:
            content.append("\n<b>üìå –î–æ—Å—Ç—É–ø–Ω—ñ –æ–ø—Ü—ñ—ó:</b>")
            for item in items:
                content.append(f"‚Ä¢ <code>{item}</code>")
                
        return "\n".join(content)

# –í —Ñ–∞–π–ª—ñ handlers/base.py –º–æ–¥–∏—Ñ—ñ–∫—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é send_menu_response:

from utils.message_formatter import MessageFormatter

async def send_menu_response(message: Message, description: str, detailed_text: str, reply_markup=None):
    """
    –ù–∞–¥—Å–∏–ª–∞—î –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–µ–Ω—é
    
    :param message: –û–±'—î–∫—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    :param description: –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—é
    :param detailed_text: –î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å
    :param reply_markup: –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
    """
    # –§–æ—Ä–º–∞—Ç—É—î–º–æ —ñ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    title = MessageFormatter.format_menu_title(description)
    await message.answer(
        text=title,
        parse_mode="HTML"
    )
    
    # –§–æ—Ä–º–∞—Ç—É—î–º–æ —ñ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç
    content = MessageFormatter.format_menu_content(detailed_text)
    await message.answer(
        text=content,
        parse_mode="HTML",
        reply_markup=reply_markup
    )
