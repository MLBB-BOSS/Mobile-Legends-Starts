# utils/db.py

# -------------------------
# üì¶ –Ü–º–ø–æ—Ä—Ç–∏
# -------------------------
from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
from sqlalchemy.orm import sessionmaker, declarative_base
import os
import logging

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –≤–∞—à—ñ –º–æ–¥–µ–ª—ñ
from .models import User, Item  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à—ñ —Ä–µ–∞–ª—å–Ω—ñ –º–æ–¥–µ–ª—ñ

# -------------------------
# üìù –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –õ–æ–≥—É–≤–∞–Ω–Ω—è
# -------------------------
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# -------------------------
# üîó –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ë–∞–∑–∏ –î–∞–Ω–∏—Ö
# -------------------------
DATABASE_URL = os.getenv("DATABASE_URL", "postgresql+asyncpg://user:password@hostname/dbname")

# -------------------------
# üõ†Ô∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ Engine
# -------------------------
async_engine = create_async_engine(
    DATABASE_URL,
    echo=True,  # –í–∏–≤–æ–¥–∏—Ç–∏ SQL-–∑–∞–ø–∏—Ç–∏ –≤ –ª–æ–≥–∏
    future=True
)

# -------------------------
# üõ†Ô∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—ó –°–µ—Å—ñ—ó
# -------------------------
async_session = sessionmaker(
    bind=async_engine,
    class_=AsyncSession,
    expire_on_commit=False
)

# -------------------------
# üõ†Ô∏è –ë–∞–∑–æ–≤–∏–π –ö–ª–∞—Å –¥–ª—è –ú–æ–¥–µ–ª–µ–π
# -------------------------
Base = declarative_base()

# -------------------------
# üõ†Ô∏è –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ë–∞–∑–∏ –î–∞–Ω–∏—Ö
# -------------------------
async def init_db():
    """
    –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –±–∞–∑—É –¥–∞–Ω–∏—Ö, —Å—Ç–≤–æ—Ä—é—é—á–∏ –≤—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –º–æ–¥–µ–ª–µ–π.
    """
    async with async_engine.begin() as conn:
        # –î–æ–¥–∞—î–º–æ –≤—Å—ñ –º–æ–¥–µ–ª—ñ –¥–æ –º–µ—Ç–∞–¥–∞–Ω–∏—Ö
        # –Ø–∫—â–æ —É –≤–∞—Å –±–∞–≥–∞—Ç–æ –º–æ–¥–µ–ª–µ–π, —ñ–º–ø–æ—Ä—Ç—É–π—Ç–µ —ó—Ö —É—Å—é–¥–∏
        await conn.run_sync(Base.metadata.create_all)
    logger.info("–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ.")